{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"app",
				"apply_classifier_1"
			]
		]
	},
	"buffers":
	[
		{
			"file": "reanalyse_rouault_et_al.R",
			"settings":
			{
				"buffer_size": 5397,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"image_paste",
					null,
					"AgAAAKcIAAAAAAAAvQgAAAAAAAAAAAAAvQgAAAAAAAC9CAAAAAAAALgBAAAjIGluc3RhbGwucGFja2FnZXMoImdncGxvdDIiKQojIGluc3RhbGwucGFja2FnZXMoImdyaWRFeHRyYSIpCiMgaW5zdGFsbC5wYWNrYWdlcygibG1lNCIpCiMgaW5zdGFsbC5wYWNrYWdlcygicGx5ciIpCiMgaW5zdGFsbC5wYWNrYWdlcygicHN5Y2giKQojIGluc3RhbGwucGFja2FnZXMoIkdQQXJvdGF0aW9uIikKIyBpbnN0YWxsLnBhY2thZ2VzKCJwYXJhbiIpCiMgaW5zdGFsbC5wYWNrYWdlcygicmVzaGFwZSIpCiMgaW5zdGFsbC5wYWNrYWdlcygicG9seWNvciIpCiMgaW5zdGFsbC5wYWNrYWdlcygibkZhY3RvcnMiKQojIGluc3RhbGwucGFja2FnZXMoIlIubWF0bGFiIikgIAojIGluc3RhbGwucGFja2FnZXMoImRvQnkiKQojIGluc3RhbGwucGFja2FnZXMoInB3ciIpCiMgaW5zdGFsbC5wYWNrYWdlcygiZ21nbSIpCiMgaW5zdGFsbC5wYWNrYWdlcygicGFyYWxsZWwiKQ",
					"AQAAAAAAAAABAAAAXwoAAAAAAACnCAAAAAAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAL0IAAAAAAAAvggAAAAAAAAAAAAAvggAAAAAAAC/CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQgAAAAAAAC9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"cut",
					null,
					"AQAAAKYIAAAAAAAApggAAAAAAAAZAAAACmxvYWRfcmVxdWlyZWRfcGFja2FnZXMoKQ",
					"AQAAAAAAAAABAAAAvwgAAAAAAACmCAAAAAAAAAAAAAAAwGhA"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFMIAAAAAAAAVAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwgAAAAAAABTCAAAAAAAAP///////+9/"
				],
				[
					28,
					1,
					"image_paste",
					null,
					"AQAAAFQIAAAAAAAAbQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAgAAAAAAABUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAOcHAAAAAAAA6AcAAAAAAAAAAAAA6AcAAAAAAADpBwAAAAAAAAAAAADpBwAAAAAAAOoHAAAAAAAAAAAAAOoHAAAAAAAA6wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wcAAAAAAADnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " packages"
					},
					"CQAAAOsHAAAAAAAA7AcAAAAAAAAAAAAA7AcAAAAAAADtBwAAAAAAAAAAAADtBwAAAAAAAO4HAAAAAAAAAAAAAO4HAAAAAAAA7wcAAAAAAAAAAAAA7wcAAAAAAADwBwAAAAAAAAAAAADwBwAAAAAAAPEHAAAAAAAAAAAAAPEHAAAAAAAA8gcAAAAAAAAAAAAA8gcAAAAAAADzBwAAAAAAAAAAAADzBwAAAAAAAPQHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wcAAAAAAADrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"r_section_separator",
					null,
					"AQAAAMEHAAAAAAAAEQgAAAAAAABdAAAAIyBDbGVhciB3b3Jrc3BhY2UgYW5kIGxvYWQgYWxsIHNjcmlwdHMgYW5kIHBhY2thZ2VzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t",
					"AQAAAAAAAAABAAAA9AcAAAAAAAD0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"cut",
					null,
					"AQAAAG8IAAAAAAAAbwgAAAAAAABRAAAAIyBJbnN0YWxsIHJlcXVpcmVkIHBhY2thZ2VzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K",
					"AQAAAAAAAAABAAAAgwgAAAAAAACDCAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"cut",
					null,
					"AQAAAFQIAAAAAAAAVAgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVAgAAAAAAABUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"cut",
					null,
					"AQAAAG0IAAAAAAAAbQgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAbQgAAAAAAABtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"cut",
					null,
					"AQAAAG0IAAAAAAAAbQgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAbQgAAAAAAABtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "\n\n\n\n\n\n\n\n"
					},
					"CAAAACEPAAAAAAAAIg8AAAAAAAAAAAAAIg8AAAAAAAAjDwAAAAAAAAAAAAAjDwAAAAAAACQPAAAAAAAAAAAAACQPAAAAAAAAJQ8AAAAAAAAAAAAAJQ8AAAAAAAAmDwAAAAAAAAAAAAAmDwAAAAAAACcPAAAAAAAAAAAAACcPAAAAAAAAKA8AAAAAAAAAAAAAKA8AAAAAAAApDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQ8AAAAAAAAhDwAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"image_paste",
					null,
					"AQAAACkPAAAAAAAAIBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQ8AAAAAAAApDwAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"right_delete",
					null,
					"AQAAAIMJAAAAAAAAgwkAAAAAAAASAAAALCBvdmVyd3JpdGUgPSBUUlVF",
					"AQAAAAAAAAABAAAAlQkAAAAAAACDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					3,
					"right_delete",
					null,
					"AwAAAD0KAAAAAAAAPQoAAAAAAAABAAAAaT0KAAAAAAAAPQoAAAAAAAABAAAAbz0KAAAAAAAAPQoAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAPQoAAAAAAAA9CgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"wrap_lines",
					null,
					"BgAAAEwKAAAAAAAATQoAAAAAAAADAAAACiMgmAoAAAAAAACZCgAAAAAAAAMAAAAKIyBMCgAAAAAAAE0KAAAAAAAAAQAAACBNCgAAAAAAAE8KAAAAAAAAAAAAAJoKAAAAAAAAmwoAAAAAAAABAAAAIJsKAAAAAAAAnQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQoAAAAAAAA9CgAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAGkKAAAAAAAAagoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQoAAAAAAABpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"right_delete",
					null,
					"AQAAAGoKAAAAAAAAagoAAAAAAABAAAAAIGFmdGVyIHJ1bm5pbmcgdGhlIGRhdGEgbG9hZGluZyBmdW5jdGlvbnMgaW4gdGhpcwojIG1haW4gc2NyaXB0Lg",
					"AQAAAAAAAAABAAAAagoAAAAAAACqCgAAAAAAAAAAAAAA8HNA"
				],
				[
					300,
					1,
					"right_delete",
					null,
					"AQAAACkMAAAAAAAAKQwAAAAAAAA5AAAALCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdGUgPSBUUlVF",
					"AQAAAAAAAAABAAAAYgwAAAAAAAApDAAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACpDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwwAAAAAAACnDAAAAAAAAAAAAAAAVJBA"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "validate_loading_sim"
					},
					"FAAAAKgMAAAAAAAAqQwAAAAAAAAAAAAAqQwAAAAAAACqDAAAAAAAAAAAAACqDAAAAAAAAKsMAAAAAAAAAAAAAKsMAAAAAAAArAwAAAAAAAAAAAAArAwAAAAAAACtDAAAAAAAAAAAAACtDAAAAAAAAK4MAAAAAAAAAAAAAK4MAAAAAAAArwwAAAAAAAAAAAAArwwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALEMAAAAAAAAAAAAALEMAAAAAAAAsgwAAAAAAAAAAAAAsgwAAAAAAACzDAAAAAAAAAAAAACzDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAtQwAAAAAAAAAAAAAtQwAAAAAAAC2DAAAAAAAAAAAAAC2DAAAAAAAALcMAAAAAAAAAAAAALcMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC5DAAAAAAAAAAAAAC5DAAAAAAAALoMAAAAAAAAAAAAALoMAAAAAAAAuwwAAAAAAAAAAAAAuwwAAAAAAAC8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAwAAAAAAACoDAAAAAAAAAAAAAAAAAAA"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "ilair"
					},
					"BQAAALwMAAAAAAAAvQwAAAAAAAAAAAAAvQwAAAAAAAC+DAAAAAAAAAAAAAC+DAAAAAAAAL8MAAAAAAAAAAAAAL8MAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADBDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAwAAAAAAAC8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					3,
					"left_delete",
					null,
					"AwAAAMAMAAAAAAAAwAwAAAAAAAABAAAAcr8MAAAAAAAAvwwAAAAAAAABAAAAab4MAAAAAAAAvgwAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAwQwAAAAAAADBDAAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": "arity_exp-1"
					},
					"CwAAAL4MAAAAAAAAvwwAAAAAAAAAAAAAvwwAAAAAAADADAAAAAAAAAAAAADADAAAAAAAAMEMAAAAAAAAAAAAAMEMAAAAAAAAwgwAAAAAAAAAAAAAwgwAAAAAAADDDAAAAAAAAAAAAADDDAAAAAAAAMQMAAAAAAAAAAAAAMQMAAAAAAAAxQwAAAAAAAAAAAAAxQwAAAAAAADGDAAAAAAAAAAAAADGDAAAAAAAAMcMAAAAAAAAAAAAAMcMAAAAAAAAyAwAAAAAAAAAAAAAyAwAAAAAAADJDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgwAAAAAAAC+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAMkMAAAAAAAAygwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQwAAAAAAADJDAAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					3,
					"left_delete",
					null,
					"AwAAAMkMAAAAAAAAyQwAAAAAAAABAAAAX8gMAAAAAAAAyAwAAAAAAAABAAAAMccMAAAAAAAAxwwAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAygwAAAAAAADKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": "_1_vs_2()"
					},
					"CQAAAMcMAAAAAAAAyAwAAAAAAAAAAAAAyAwAAAAAAADJDAAAAAAAAAAAAADJDAAAAAAAAMoMAAAAAAAAAAAAAMoMAAAAAAAAywwAAAAAAAAAAAAAywwAAAAAAADMDAAAAAAAAAAAAADMDAAAAAAAAM0MAAAAAAAAAAAAAM0MAAAAAAAAzgwAAAAAAAAAAAAAzgwAAAAAAADPDAAAAAAAAAAAAADPDAAAAAAAANAMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwwAAAAAAADHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"image_paste",
					null,
					"AQAAAM8MAAAAAAAA9AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwwAAAAAAADPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "_1"
					},
					"AgAAAN0MAAAAAAAA3gwAAAAAAAAAAAAA3gwAAAAAAADfDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QwAAAAAAADdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAM8MAAAAAAAAzwwAAAAAAAAQAAAAcmVwcm9kdWNlZF9kYXRfMQ",
					"AQAAAAAAAAABAAAAzwwAAAAAAADPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					3,
					"right_delete",
					null,
					"AwAAAM8MAAAAAAAAzwwAAAAAAAABAAAAIM8MAAAAAAAAzwwAAAAAAAABAAAAPc8MAAAAAAAAzwwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAzwwAAAAAAADPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"image_paste",
					null,
					"AQAAAM8MAAAAAAAA4wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwwAAAAAAADPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOMMAAAAAAAA5AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wwAAAAAAADjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQMAAAAAAAA5QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AwAAAAAAADkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"right_delete",
					null,
					"AQAAAOMMAAAAAAAA4wwAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA4wwAAAAAAADjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAOMMAAAAAAAA5AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wwAAAAAAADjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					2,
					"left_delete",
					null,
					"AgAAAOMMAAAAAAAA4wwAAAAAAAABAAAAMeIMAAAAAAAA4gwAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA5AwAAAAAAADkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "1,"
					},
					"AgAAAOIMAAAAAAAA4wwAAAAAAAAAAAAA4wwAAAAAAADkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gwAAAAAAADiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOQMAAAAAAAA5QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AwAAAAAAADkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"right_delete",
					null,
					"AgAAAOUMAAAAAAAA5QwAAAAAAAABAAAAIOUMAAAAAAAADA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QwAAAAAAADlDAAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"left_delete",
					null,
					"AQAAAAsNAAAAAAAACw0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAADA0AAAAAAAAMDQAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsNAAAAAAAADA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACw0AAAAAAAALDQAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"",
					null,
					"AgAAAKcMAAAAAAAAfQ0AAAAAAAAAAAAAAQoAAAAAAAABCgAAAAAAANYAAAAKIyBGb3IgaW5zcGVjdGlvbiBvZiBteSB2YWxpZGF0aW9uLCBuYXZpZ2F0ZSB0byB0aGUgcmVsZXZhbnQgc2NyaXB0cyBpbiB0aGUKIyBTY3JpcHRzL3ZhbGlkYXRpb24vIGZvbGRlci4KCnZhbGlkYXRlX2RpZmZpY3VsdHlfcmVzdWx0cyhmdWxsX3BlcmNlcHR1YWxfdGFza19kYXRfZXhwXzEpCgp2YWxpZGF0ZV9wb3dlcl9hbmFseXNpcyhyZXByb2R1Y2VkX2RhdF9leHBfMSkK",
					"AQAAAAAAAAABAAAA1woAAAAAAAABCgAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AgAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": " Validation"
					},
					"CwAAANMLAAAAAAAA1AsAAAAAAAAAAAAA1AsAAAAAAADVCwAAAAAAAAAAAADVCwAAAAAAANYLAAAAAAAAAAAAANYLAAAAAAAA1wsAAAAAAAAAAAAA1wsAAAAAAADYCwAAAAAAAAAAAADYCwAAAAAAANkLAAAAAAAAAAAAANkLAAAAAAAA2gsAAAAAAAAAAAAA2gsAAAAAAADbCwAAAAAAAAAAAADbCwAAAAAAANwLAAAAAAAAAAAAANwLAAAAAAAA3QsAAAAAAAAAAAAA3QsAAAAAAADeCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wsAAAAAAADTCwAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4LAAAAAAAA3wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gsAAAAAAADeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"r_section_separator",
					null,
					"AQAAANILAAAAAAAAIgwAAAAAAAANAAAAIyBWYWxpZGF0aW9uIA",
					"AQAAAAAAAAABAAAA3wsAAAAAAADfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"right_delete",
					null,
					"AQAAAN4LAAAAAAAA3gsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3gsAAAAAAADeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"r_section_separator",
					null,
					"AQAAANILAAAAAAAAIgwAAAAAAABPAAAAIyBWYWxpZGF0aW9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ",
					"AQAAAAAAAAABAAAA3gsAAAAAAADeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					1,
					"insert",
					{
						"characters": " re"
					},
					"AwAAAHwIAAAAAAAAfQgAAAAAAAAAAAAAfQgAAAAAAAB+CAAAAAAAAAAAAAB+CAAAAAAAAH8IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAgAAAAAAAB8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					2,
					"left_delete",
					null,
					"AgAAAH4IAAAAAAAAfggAAAAAAAABAAAAZX0IAAAAAAAAfQgAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAfwgAAAAAAAB/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					405,
					1,
					"insert",
					{
						"characters": "Reproduction"
					},
					"DAAAAH0IAAAAAAAAfggAAAAAAAAAAAAAfggAAAAAAAB/CAAAAAAAAAAAAAB/CAAAAAAAAIAIAAAAAAAAAAAAAIAIAAAAAAAAgQgAAAAAAAAAAAAAgQgAAAAAAACCCAAAAAAAAAAAAACCCAAAAAAAAIMIAAAAAAAAAAAAAIMIAAAAAAAAhAgAAAAAAAAAAAAAhAgAAAAAAACFCAAAAAAAAAAAAACFCAAAAAAAAIYIAAAAAAAAAAAAAIYIAAAAAAAAhwgAAAAAAAAAAAAAhwgAAAAAAACICAAAAAAAAAAAAACICAAAAAAAAIkIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQgAAAAAAAB9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					406,
					1,
					"r_section_separator",
					null,
					"AQAAAG4IAAAAAAAAvggAAAAAAABdAAAAIyBFeHBlcmltZW50IDEgUmVwcm9kdWN0aW9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t",
					"AQAAAAAAAAABAAAAiQgAAAAAAACJCAAAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": " Data"
					},
					"BQAAAHwIAAAAAAAAfQgAAAAAAAAAAAAAfQgAAAAAAAB+CAAAAAAAAAAAAAB+CAAAAAAAAH8IAAAAAAAAAAAAAH8IAAAAAAAAgAgAAAAAAAAAAAAAgAgAAAAAAACBCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAgAAAAAAAB8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"r_section_separator",
					null,
					"AQAAAG4IAAAAAAAAvggAAAAAAABVAAAAIyBFeHBlcmltZW50IDEgRGF0YSBSZXByb2R1Y3Rpb24gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ",
					"AQAAAAAAAAABAAAAgQgAAAAAAACBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": "Data"
					},
					"BAAAABEKAAAAAAAAEgoAAAAAAAAAAAAAEgoAAAAAAAATCgAAAAAAAAAAAAATCgAAAAAAABQKAAAAAAAAAAAAABQKAAAAAAAAFQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQoAAAAAAAARCgAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": " Rep"
					},
					"BAAAABUKAAAAAAAAFgoAAAAAAAAAAAAAFgoAAAAAAAAXCgAAAAAAAAAAAAAXCgAAAAAAABgKAAAAAAAAAAAAABgKAAAAAAAAGQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQoAAAAAAAAVCgAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert_completion",
					{
						"completion": "Reproduction",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Reproduction"
					},
					"AgAAABYKAAAAAAAAFgoAAAAAAAADAAAAUmVwFgoAAAAAAAAiCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQoAAAAAAAAZCgAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACIKAAAAAAAAIwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgoAAAAAAAAiCgAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"r_section_separator",
					null,
					"AQAAAAIKAAAAAAAAUgoAAAAAAABiAAAAIyBFeHBlcmltZW50IDIgRGF0YSBSZXByb2R1Y3Rpb24gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0",
					"AQAAAAAAAAABAAAAIwoAAAAAAAAjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANELAAAAAAAA0gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"image_paste",
					null,
					"AQAAANILAAAAAAAAQQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					439,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALULAAAAAAAAtgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQsAAAAAAAC1CwAAAAAAAP///////+9/"
				],
				[
					440,
					1,
					"image_paste",
					null,
					"AQAAALYLAAAAAAAAygsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"insert",
					{
						"characters": "[,"
					},
					"AgAAAMoLAAAAAAAAywsAAAAAAAAAAAAAywsAAAAAAADMCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygsAAAAAAADKCwAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"insert",
					{
						"characters": " c(\"f"
					},
					"BQAAAMwLAAAAAAAAzQsAAAAAAAAAAAAAzQsAAAAAAADOCwAAAAAAAAAAAADOCwAAAAAAAM8LAAAAAAAAAAAAAM8LAAAAAAAA0AsAAAAAAAAAAAAA0AsAAAAAAADRCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAsAAAAAAADMCwAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAANELAAAAAAAA0gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"left_delete",
					null,
					"AQAAANELAAAAAAAA0QsAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAANELAAAAAAAA0gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					1,
					"left_delete",
					null,
					"AQAAANELAAAAAAAA0QsAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					447,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAANELAAAAAAAA0gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					2,
					"left_delete",
					null,
					"AgAAANELAAAAAAAA0QsAAAAAAAABAAAARtALAAAAAAAA0AsAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"insert",
					{
						"characters": "F1"
					},
					"AgAAANALAAAAAAAA0QsAAAAAAAAAAAAA0QsAAAAAAADSCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AsAAAAAAADQCwAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAANALAAAAAAAA0AsAAAAAAAACAAAARjHOCwAAAAAAAM4LAAAAAAAAAgAAACgizQsAAAAAAADNCwAAAAAAAAEAAABj",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					3,
					"left_delete",
					null,
					"AwAAAMwLAAAAAAAAzAsAAAAAAAABAAAAIMsLAAAAAAAAywsAAAAAAAABAAAALMoLAAAAAAAAygsAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAzQsAAAAAAADNCwAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "an"
					},
					"AgAAALYLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAAC4CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAAAAA"
				],
				[
					454,
					2,
					"left_delete",
					null,
					"AgAAALcLAAAAAAAAtwsAAAAAAAABAAAAbrYLAAAAAAAAtgsAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAuAsAAAAAAAC4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": "names("
					},
					"BgAAALYLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAAC4CwAAAAAAAAAAAAC4CwAAAAAAALkLAAAAAAAAAAAAALkLAAAAAAAAugsAAAAAAAAAAAAAugsAAAAAAAC7CwAAAAAAAAAAAAC7CwAAAAAAALwLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANALAAAAAAAA0QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AsAAAAAAADQCwAAAAAAAP///////+9/"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": "tail("
					},
					"BQAAALYLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAAC4CwAAAAAAAAAAAAC4CwAAAAAAALkLAAAAAAAAAAAAALkLAAAAAAAAugsAAAAAAAAAAAAAugsAAAAAAAC7CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAAAAA"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANYLAAAAAAAA1wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gsAAAAAAADWCwAAAAAAAP///////+9/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANYLAAAAAAAA1wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gsAAAAAAADWCwAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADZCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wsAAAAAAADXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAANoLAAAAAAAA2wsAAAAAAAAAAAAA2wsAAAAAAADdCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gsAAAAAAADaCwAAAAAAAP///////+9/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0LAAAAAAAA3gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QsAAAAAAADdCwAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"cut",
					null,
					"AQAAAFMMAAAAAAAAUwwAAAAAAAAXAAAAYygiQUQiLCAiQ29tcHVsIiwgIlNXIik",
					"AQAAAAAAAAABAAAAUwwAAAAAAABqDAAAAAAAAP///////+9/"
				],
				[
					478,
					1,
					"image_paste",
					null,
					"AQAAAN4LAAAAAAAA9QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gsAAAAAAADeCwAAAAAAAP///////+9/"
				],
				[
					486,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAALYLAAAAAAAAtgsAAAAAAAAEAAAAdGFpbA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAAAAA"
				],
				[
					487,
					1,
					"right_delete",
					null,
					"AQAAALYLAAAAAAAAtgsAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					4,
					"right_delete",
					null,
					"BAAAANELAAAAAAAA0QsAAAAAAAABAAAALNELAAAAAAAA0QsAAAAAAAABAAAAINELAAAAAAAA0QsAAAAAAAABAAAAM9ELAAAAAAAA0QsAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": "[]"
					},
					"AgAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					2,
					"left_delete",
					null,
					"AgAAANILAAAAAAAA0gsAAAAAAAABAAAAXdELAAAAAAAA0QsAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAA0wsAAAAAAADTCwAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAO0LAAAAAAAA7gsAAAAAAAAAAAAA7gsAAAAAAADvCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QsAAAAAAADtCwAAAAAAAAAAAAAAAAAA"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": "p]"
					},
					"AgAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					2,
					"left_delete",
					null,
					"AgAAANILAAAAAAAA0gsAAAAAAAABAAAAXdELAAAAAAAA0QsAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA0wsAAAAAAADTCwAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "[]"
					},
					"AgAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "\nin"
					},
					"AwAAALULAAAAAAAAtgsAAAAAAAAAAAAAtgsAAAAAAAC3CwAAAAAAAAAAAAC3CwAAAAAAALgLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQsAAAAAAAC1CwAAAAAAAP///////+9/"
				],
				[
					528,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAALYLAAAAAAAAtgsAAAAAAAACAAAAaW4",
					"AQAAAAAAAAABAAAAuAsAAAAAAAC4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "factor_indices"
					},
					"DgAAALYLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAAC4CwAAAAAAAAAAAAC4CwAAAAAAALkLAAAAAAAAAAAAALkLAAAAAAAAugsAAAAAAAAAAAAAugsAAAAAAAC7CwAAAAAAAAAAAAC7CwAAAAAAALwLAAAAAAAAAAAAALwLAAAAAAAAvQsAAAAAAAAAAAAAvQsAAAAAAAC+CwAAAAAAAAAAAAC+CwAAAAAAAL8LAAAAAAAAAAAAAL8LAAAAAAAAwAsAAAAAAAAAAAAAwAsAAAAAAADBCwAAAAAAAAAAAADBCwAAAAAAAMILAAAAAAAAAAAAAMILAAAAAAAAwwsAAAAAAAAAAAAAwwsAAAAAAADECwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAMQLAAAAAAAAxQsAAAAAAAAAAAAAxQsAAAAAAADHCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAsAAAAAAADECwAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcLAAAAAAAAyAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwsAAAAAAADHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					532,
					1,
					"image_paste",
					null,
					"AQAAAMgLAAAAAAAA3AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAsAAAAAAADICwAAAAAAAAAAAAAAAPC/"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": "ncol("
					},
					"BQAAAMgLAAAAAAAAyQsAAAAAAAAAAAAAyQsAAAAAAADKCwAAAAAAAAAAAADKCwAAAAAAAMsLAAAAAAAAAAAAAMsLAAAAAAAAzAsAAAAAAAAAAAAAzAsAAAAAAADNCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAsAAAAAAADICwAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAOELAAAAAAAA4gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QsAAAAAAADhCwAAAAAAAP///////+9/"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": "-3:"
					},
					"AwAAAOILAAAAAAAA4wsAAAAAAAAAAAAA4wsAAAAAAADkCwAAAAAAAAAAAADkCwAAAAAAAOULAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gsAAAAAAADiCwAAAAAAAP///////+9/"
				],
				[
					543,
					2,
					"left_delete",
					null,
					"AgAAAOQLAAAAAAAA5AsAAAAAAAABAAAAOuMLAAAAAAAA4wsAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAA5QsAAAAAAADlCwAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": "2:"
					},
					"AgAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA5AsAAAAAAADlCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wsAAAAAAADjCwAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"image_paste",
					null,
					"AQAAAOULAAAAAAAA/wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QsAAAAAAADlCwAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAOQLAAAAAAAA5QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AsAAAAAAADkCwAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAMgLAAAAAAAAyQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAsAAAAAAADICwAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"right_delete",
					null,
					"AQAAAMgLAAAAAAAAyAsAAAAAAAAfAAAAKG5jb2wocmVwcm9kdWNlZF9kYXRfZXhwXzIpLTIpOg",
					"AQAAAAAAAAABAAAAyAsAAAAAAADnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAOILAAAAAAAA4wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gsAAAAAAADiCwAAAAAAAP///////+9/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "-2:0)"
					},
					"BQAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA5AsAAAAAAADlCwAAAAAAAAAAAADlCwAAAAAAAOYLAAAAAAAAAAAAAOYLAAAAAAAA5wsAAAAAAAAAAAAA5wsAAAAAAADoCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wsAAAAAAADjCwAAAAAAAAAAAAAAAPC/"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wsAAAAAAADjCwAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"right_delete",
					null,
					"AQAAAOQLAAAAAAAA5AsAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAA5AsAAAAAAADkCwAAAAAAAAAAAAAAAPC/"
				],
				[
					577,
					1,
					"image_paste",
					null,
					"AQAAAAUMAAAAAAAAEwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQwAAAAAAAAFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALYLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAAC4CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAAAAA"
				],
				[
					583,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAALcLAAAAAAAAuAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwsAAAAAAAC3CwAAAAAAAAAAAAAAAAAA"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": " The"
					},
					"BAAAALgLAAAAAAAAuQsAAAAAAAAAAAAAuQsAAAAAAAC6CwAAAAAAAAAAAAC6CwAAAAAAALsLAAAAAAAAAAAAALsLAAAAAAAAvAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAsAAAAAAAC4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": " authors"
					},
					"CAAAALwLAAAAAAAAvQsAAAAAAAAAAAAAvQsAAAAAAAC+CwAAAAAAAAAAAAC+CwAAAAAAAL8LAAAAAAAAAAAAAL8LAAAAAAAAwAsAAAAAAAAAAAAAwAsAAAAAAADBCwAAAAAAAAAAAADBCwAAAAAAAMILAAAAAAAAAAAAAMILAAAAAAAAwwsAAAAAAAAAAAAAwwsAAAAAAADECwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAsAAAAAAAC8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": " labeled"
					},
					"CAAAAMQLAAAAAAAAxQsAAAAAAAAAAAAAxQsAAAAAAADGCwAAAAAAAAAAAADGCwAAAAAAAMcLAAAAAAAAAAAAAMcLAAAAAAAAyAsAAAAAAAAAAAAAyAsAAAAAAADJCwAAAAAAAAAAAADJCwAAAAAAAMoLAAAAAAAAAAAAAMoLAAAAAAAAywsAAAAAAAAAAAAAywsAAAAAAADMCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAsAAAAAAADECwAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"insert",
					{
						"characters": " these"
					},
					"BgAAAMwLAAAAAAAAzQsAAAAAAAAAAAAAzQsAAAAAAADOCwAAAAAAAAAAAADOCwAAAAAAAM8LAAAAAAAAAAAAAM8LAAAAAAAA0AsAAAAAAAAAAAAA0AsAAAAAAADRCwAAAAAAAAAAAADRCwAAAAAAANILAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAsAAAAAAADMCwAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					1,
					"insert",
					{
						"characters": " thre"
					},
					"BQAAANILAAAAAAAA0wsAAAAAAAAAAAAA0wsAAAAAAADUCwAAAAAAAAAAAADUCwAAAAAAANULAAAAAAAAAAAAANULAAAAAAAA1gsAAAAAAAAAAAAA1gsAAAAAAADXCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"insert",
					{
						"characters": " fa"
					},
					"AwAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADZCwAAAAAAAAAAAADZCwAAAAAAANoLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wsAAAAAAADXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					590,
					3,
					"left_delete",
					null,
					"AwAAANkLAAAAAAAA2QsAAAAAAAABAAAAYdgLAAAAAAAA2AsAAAAAAAABAAAAZtcLAAAAAAAA1wsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA2gsAAAAAAADaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": "ef"
					},
					"AgAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADZCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wsAAAAAAADXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": " ac"
					},
					"AwAAANkLAAAAAAAA2gsAAAAAAAAAAAAA2gsAAAAAAADbCwAAAAAAAAAAAADbCwAAAAAAANwLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QsAAAAAAADZCwAAAAAAAAAAAAAAAPC/"
				],
				[
					593,
					4,
					"left_delete",
					null,
					"BAAAANsLAAAAAAAA2wsAAAAAAAABAAAAY9oLAAAAAAAA2gsAAAAAAAABAAAAYdkLAAAAAAAA2QsAAAAAAAABAAAAINgLAAAAAAAA2AsAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA3AsAAAAAAADcCwAAAAAAAAAAAAAAAPC/"
				],
				[
					594,
					1,
					"insert",
					{
						"characters": " fac"
					},
					"BAAAANgLAAAAAAAA2QsAAAAAAAAAAAAA2QsAAAAAAADaCwAAAAAAAAAAAADaCwAAAAAAANsLAAAAAAAAAAAAANsLAAAAAAAA3AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AsAAAAAAADYCwAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAANkLAAAAAAAA2QsAAAAAAAADAAAAZmFj0wsAAAAAAADTCwAAAAAAAAYAAAB0aHJlZSDNCwAAAAAAAM0LAAAAAAAABgAAAHRoZXNlIA",
					"AQAAAAAAAAABAAAA3AsAAAAAAADcCwAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAAM0LAAAAAAAAzgsAAAAAAAAAAAAAzgsAAAAAAADPCwAAAAAAAAAAAADPCwAAAAAAANALAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQsAAAAAAADNCwAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAANALAAAAAAAA0QsAAAAAAAAAAAAA0QsAAAAAAADSCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AsAAAAAAADQCwAAAAAAAAAAAAAAAPC/"
				],
				[
					598,
					1,
					"left_delete",
					null,
					"AQAAANELAAAAAAAA0QsAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					599,
					1,
					"insert",
					{
						"characters": "three"
					},
					"BQAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAADTCwAAAAAAANQLAAAAAAAAAAAAANQLAAAAAAAA1QsAAAAAAAAAAAAA1QsAAAAAAADWCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": " factors"
					},
					"CAAAANYLAAAAAAAA1wsAAAAAAAAAAAAA1wsAAAAAAADYCwAAAAAAAAAAAADYCwAAAAAAANkLAAAAAAAAAAAAANkLAAAAAAAA2gsAAAAAAAAAAAAA2gsAAAAAAADbCwAAAAAAAAAAAADbCwAAAAAAANwLAAAAAAAAAAAAANwLAAAAAAAA3QsAAAAAAAAAAAAA3QsAAAAAAADeCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gsAAAAAAADWCwAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAN4LAAAAAAAA3wsAAAAAAAAAAAAA3wsAAAAAAADgCwAAAAAAAAAAAADgCwAAAAAAAOELAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gsAAAAAAADeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAOELAAAAAAAA4gsAAAAAAAAAAAAA4gsAAAAAAADjCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QsAAAAAAADhCwAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"left_delete",
					null,
					"AQAAAOILAAAAAAAA4gsAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA4wsAAAAAAADjCwAAAAAAAAAAAAAAAPC/"
				],
				[
					604,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAOILAAAAAAAA4wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gsAAAAAAADiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					1,
					"left_delete",
					null,
					"AQAAAOILAAAAAAAA4gsAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAA4wsAAAAAAADjCwAAAAAAAAAAAAAAAPC/"
				],
				[
					606,
					1,
					"insert",
					{
						"characters": "experiment"
					},
					"CgAAAOILAAAAAAAA4wsAAAAAAAAAAAAA4wsAAAAAAADkCwAAAAAAAAAAAADkCwAAAAAAAOULAAAAAAAAAAAAAOULAAAAAAAA5gsAAAAAAAAAAAAA5gsAAAAAAADnCwAAAAAAAAAAAADnCwAAAAAAAOgLAAAAAAAAAAAAAOgLAAAAAAAA6QsAAAAAAAAAAAAA6QsAAAAAAADqCwAAAAAAAAAAAADqCwAAAAAAAOsLAAAAAAAAAAAAAOsLAAAAAAAA7AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gsAAAAAAADiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAOwLAAAAAAAA7QsAAAAAAAAAAAAA7QsAAAAAAADuCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AsAAAAAAADsCwAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"right_delete",
					null,
					"AQAAAOILAAAAAAAA4gsAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA4gsAAAAAAADiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAOILAAAAAAAA4wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gsAAAAAAADiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAMQLAAAAAAAAxAsAAAAAAAAIAAAAIGxhYmVsZWQ",
					"AQAAAAAAAAABAAAAxAsAAAAAAADECwAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					1,
					"insert",
					{
						"characters": " ig"
					},
					"AwAAAMQLAAAAAAAAxQsAAAAAAAAAAAAAxQsAAAAAAADGCwAAAAAAAAAAAADGCwAAAAAAAMcLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAsAAAAAAADECwAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					2,
					"left_delete",
					null,
					"AgAAAMYLAAAAAAAAxgsAAAAAAAABAAAAZ8ULAAAAAAAAxQsAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAxwsAAAAAAADHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					617,
					1,
					"insert",
					{
						"characters": "gave"
					},
					"BAAAAMULAAAAAAAAxgsAAAAAAAAAAAAAxgsAAAAAAADHCwAAAAAAAAAAAADHCwAAAAAAAMgLAAAAAAAAAAAAAMgLAAAAAAAAyQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQsAAAAAAADFCwAAAAAAAAAAAAAAAPC/"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkLAAAAAAAAygsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQsAAAAAAADJCwAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					2,
					"delete_word",
					{
						"forward": true
					},
					"AgAAAMoLAAAAAAAAygsAAAAAAAAEAAAAIHRoZcoLAAAAAAAAygsAAAAAAAAGAAAAIHRocmVl",
					"AQAAAAAAAAABAAAAygsAAAAAAADKCwAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": "labels"
					},
					"BgAAAMoLAAAAAAAAywsAAAAAAAAAAAAAywsAAAAAAADMCwAAAAAAAAAAAADMCwAAAAAAAM0LAAAAAAAAAAAAAM0LAAAAAAAAzgsAAAAAAAAAAAAAzgsAAAAAAADPCwAAAAAAAAAAAADPCwAAAAAAANALAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygsAAAAAAADKCwAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAANALAAAAAAAA0QsAAAAAAAAAAAAA0QsAAAAAAADSCwAAAAAAAAAAAADSCwAAAAAAANMLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AsAAAAAAADQCwAAAAAAAAAAAAAAAPC/"
				],
				[
					622,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAANMLAAAAAAAA1AsAAAAAAAAAAAAA1AsAAAAAAADVCwAAAAAAAAAAAADVCwAAAAAAANYLAAAAAAAAAAAAANYLAAAAAAAA1wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wsAAAAAAADTCwAAAAAAAAAAAAAAAPC/"
				],
				[
					623,
					1,
					"insert",
					{
						"characters": " three"
					},
					"BgAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADZCwAAAAAAAAAAAADZCwAAAAAAANoLAAAAAAAAAAAAANoLAAAAAAAA2wsAAAAAAAAAAAAA2wsAAAAAAADcCwAAAAAAAAAAAADcCwAAAAAAAN0LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wsAAAAAAADXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"image_paste",
					null,
					"AQAAAHAMAAAAAAAAhAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAwAAAAAAABwDAAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIQMAAAAAAAAhQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAwAAAAAAACEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					1,
					"left_delete",
					null,
					"AQAAAIQMAAAAAAAAhAwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAhQwAAAAAAACFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAIQMAAAAAAAAhQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAwAAAAAAACEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"image_paste",
					null,
					"AQAAAIUMAAAAAAAAmQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQwAAAAAAACFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAIUMAAAAAAAAhQwAAAAAAAAUAAAAcmVwcm9kdWNlZF9kYXRfZXhwXzE",
					"AQAAAAAAAAABAAAAmQwAAAAAAACZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert",
					{
						"characters": "factor_indices]"
					},
					"DwAAAIUMAAAAAAAAhgwAAAAAAAAAAAAAhgwAAAAAAACHDAAAAAAAAAAAAACHDAAAAAAAAIgMAAAAAAAAAAAAAIgMAAAAAAAAiQwAAAAAAAAAAAAAiQwAAAAAAACKDAAAAAAAAAAAAACKDAAAAAAAAIsMAAAAAAAAAAAAAIsMAAAAAAAAjAwAAAAAAAAAAAAAjAwAAAAAAACNDAAAAAAAAAAAAACNDAAAAAAAAI4MAAAAAAAAAAAAAI4MAAAAAAAAjwwAAAAAAAAAAAAAjwwAAAAAAACQDAAAAAAAAAAAAACQDAAAAAAAAJEMAAAAAAAAAAAAAJEMAAAAAAAAkgwAAAAAAAAAAAAAkgwAAAAAAACTDAAAAAAAAAAAAACTDAAAAAAAAJQMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQwAAAAAAACFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"right_delete",
					null,
					"AQAAAHAMAAAAAAAAcAwAAAAAAAAkAAAAcmVwcm9kdWNlZF9kYXRfZXhwXzFbZmFjdG9yX2luZGljZXNd",
					"AQAAAAAAAAABAAAAcAwAAAAAAACUDAAAAAAAAP///////+9/"
				],
				[
					653,
					1,
					"right_delete",
					null,
					"AQAAAHEMAAAAAAAAcQwAAAAAAAB1AAAACmhlYWQocmVwcm9kdWNlZF9kYXRfZXhwXzIpCgphY3Rvcl9hbmFseXNpc19yZXN1bHQpJHNjb3JlcwogIHNjb3Jlc19kYXQgPC0gZGF0YS5mcmFtZShzY29yZXMpCiAgbmFtZXMoc2NvcmVzX2RhdCkgPC0g",
					"AQAAAAAAAAABAAAA5gwAAAAAAABxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					657,
					1,
					"",
					null,
					"AgAAAHEMAAAAAAAA6wwAAAAAAAAAAAAAFA4AAAAAAAAUDgAAAAAAAHoAAAAKdmFsaWRhdGVfbG9hZGluZ19zaW1pbGFyaXR5X2V4cF8xX3ZzXzIocmVwcm9kdWNlZF9kYXRfZXhwXzEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcHJvZHVjZWRfZGF0X2V4cF8yKQ",
					"AQAAAAAAAAABAAAAFA4AAAAAAACaDQAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAHEMAAAAAAAAcgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQwAAAAAAABxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": " According"
					},
					"CgAAAHIMAAAAAAAAcwwAAAAAAAAAAAAAcwwAAAAAAAB0DAAAAAAAAAAAAAB0DAAAAAAAAHUMAAAAAAAAAAAAAHUMAAAAAAAAdgwAAAAAAAAAAAAAdgwAAAAAAAB3DAAAAAAAAAAAAAB3DAAAAAAAAHgMAAAAAAAAAAAAAHgMAAAAAAAAeQwAAAAAAAAAAAAAeQwAAAAAAAB6DAAAAAAAAAAAAAB6DAAAAAAAAHsMAAAAAAAAAAAAAHsMAAAAAAAAfAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgwAAAAAAAByDAAAAAAAAAAAAAAAAPC/"
				],
				[
					661,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAHwMAAAAAAAAfQwAAAAAAAAAAAAAfQwAAAAAAAB+DAAAAAAAAAAAAAB+DAAAAAAAAH8MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAwAAAAAAAB8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAH8MAAAAAAAAgAwAAAAAAAAAAAAAgAwAAAAAAACBDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwwAAAAAAAB/DAAAAAAAAAAAAAAAAPC/"
				],
				[
					663,
					1,
					"insert",
					{
						"characters": " facotr"
					},
					"BwAAAIEMAAAAAAAAggwAAAAAAAAAAAAAggwAAAAAAACDDAAAAAAAAAAAAACDDAAAAAAAAIQMAAAAAAAAAAAAAIQMAAAAAAAAhQwAAAAAAAAAAAAAhQwAAAAAAACGDAAAAAAAAAAAAACGDAAAAAAAAIcMAAAAAAAAAAAAAIcMAAAAAAAAiAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQwAAAAAAACBDAAAAAAAAAAAAAAAAPC/"
				],
				[
					664,
					3,
					"left_delete",
					null,
					"AwAAAIcMAAAAAAAAhwwAAAAAAAABAAAAcoYMAAAAAAAAhgwAAAAAAAABAAAAdIUMAAAAAAAAhQwAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAiAwAAAAAAACIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": "tor"
					},
					"AwAAAIUMAAAAAAAAhgwAAAAAAAAAAAAAhgwAAAAAAACHDAAAAAAAAAAAAACHDAAAAAAAAIgMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQwAAAAAAACFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					666,
					1,
					"insert",
					{
						"characters": " loading"
					},
					"CAAAAIgMAAAAAAAAiQwAAAAAAAAAAAAAiQwAAAAAAACKDAAAAAAAAAAAAACKDAAAAAAAAIsMAAAAAAAAAAAAAIsMAAAAAAAAjAwAAAAAAAAAAAAAjAwAAAAAAACNDAAAAAAAAAAAAACNDAAAAAAAAI4MAAAAAAAAAAAAAI4MAAAAAAAAjwwAAAAAAAAAAAAAjwwAAAAAAACQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAwAAAAAAACIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": " comparions"
					},
					"CwAAAJAMAAAAAAAAkQwAAAAAAAAAAAAAkQwAAAAAAACSDAAAAAAAAAAAAACSDAAAAAAAAJMMAAAAAAAAAAAAAJMMAAAAAAAAlAwAAAAAAAAAAAAAlAwAAAAAAACVDAAAAAAAAAAAAACVDAAAAAAAAJYMAAAAAAAAAAAAAJYMAAAAAAAAlwwAAAAAAAAAAAAAlwwAAAAAAACYDAAAAAAAAAAAAACYDAAAAAAAAJkMAAAAAAAAAAAAAJkMAAAAAAAAmgwAAAAAAAAAAAAAmgwAAAAAAACbDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAwAAAAAAACQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					668,
					1,
					"left_delete",
					null,
					"AQAAAJoMAAAAAAAAmgwAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAmwwAAAAAAACbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJoMAAAAAAAAmwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgwAAAAAAACaDAAAAAAAAP///////+9/"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAJsMAAAAAAAAnAwAAAAAAAAAAAAAnAwAAAAAAACdDAAAAAAAAAAAAACdDAAAAAAAAJ4MAAAAAAAAAAAAAJ4MAAAAAAAAnwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwwAAAAAAACbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					677,
					1,
					"insert",
					{
						"characters": " factors"
					},
					"CAAAAJ8MAAAAAAAAoAwAAAAAAAAAAAAAoAwAAAAAAAChDAAAAAAAAAAAAAChDAAAAAAAAKIMAAAAAAAAAAAAAKIMAAAAAAAAowwAAAAAAAAAAAAAowwAAAAAAACkDAAAAAAAAAAAAACkDAAAAAAAAKUMAAAAAAAAAAAAAKUMAAAAAAAApgwAAAAAAAAAAAAApgwAAAAAAACnDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwwAAAAAAACfDAAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACpDAAAAAAAAAAAAACpDAAAAAAAAKoMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwwAAAAAAACnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": " experiment"
					},
					"CwAAAKoMAAAAAAAAqwwAAAAAAAAAAAAAqwwAAAAAAACsDAAAAAAAAAAAAACsDAAAAAAAAK0MAAAAAAAAAAAAAK0MAAAAAAAArgwAAAAAAAAAAAAArgwAAAAAAACvDAAAAAAAAAAAAACvDAAAAAAAALAMAAAAAAAAAAAAALAMAAAAAAAAsQwAAAAAAAAAAAAAsQwAAAAAAACyDAAAAAAAAAAAAACyDAAAAAAAALMMAAAAAAAAAAAAALMMAAAAAAAAtAwAAAAAAAAAAAAAtAwAAAAAAAC1DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgwAAAAAAACqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAALUMAAAAAAAAtgwAAAAAAAAAAAAAtgwAAAAAAAC3DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQwAAAAAAAC1DAAAAAAAAAAAAAAAAPC/"
				],
				[
					682,
					1,
					"right_delete",
					null,
					"AQAAAKsMAAAAAAAAqwwAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAqwwAAAAAAACrDAAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAKsMAAAAAAAArAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwwAAAAAAACrDAAAAAAAAAAAAAAAAPC/"
				],
				[
					685,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAALcMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC5DAAAAAAAAAAAAAC5DAAAAAAAALoMAAAAAAAAAAAAALoMAAAAAAAAuwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwwAAAAAAAC3DAAAAAAAAP///////+9/"
				],
				[
					686,
					1,
					"insert",
					{
						"characters": " sorted"
					},
					"BwAAALsMAAAAAAAAvAwAAAAAAAAAAAAAvAwAAAAAAAC9DAAAAAAAAAAAAAC9DAAAAAAAAL4MAAAAAAAAAAAAAL4MAAAAAAAAvwwAAAAAAAAAAAAAvwwAAAAAAADADAAAAAAAAAAAAADADAAAAAAAAMEMAAAAAAAAAAAAAMEMAAAAAAAAwgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwwAAAAAAAC7DAAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"insert",
					{
						"characters": " different"
					},
					"CgAAAMIMAAAAAAAAwwwAAAAAAAAAAAAAwwwAAAAAAADEDAAAAAAAAAAAAADEDAAAAAAAAMUMAAAAAAAAAAAAAMUMAAAAAAAAxgwAAAAAAAAAAAAAxgwAAAAAAADHDAAAAAAAAAAAAADHDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAyQwAAAAAAAAAAAAAyQwAAAAAAADKDAAAAAAAAAAAAADKDAAAAAAAAMsMAAAAAAAAAAAAAMsMAAAAAAAAzAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgwAAAAAAADCDAAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAMMMAAAAAAAAwwwAAAAAAAAJAAAAZGlmZmVyZW50vAwAAAAAAAC8DAAAAAAAAAcAAABzb3J0ZWQg",
					"AQAAAAAAAAABAAAAzAwAAAAAAADMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": "ordered"
					},
					"BwAAALwMAAAAAAAAvQwAAAAAAAAAAAAAvQwAAAAAAAC+DAAAAAAAAAAAAAC+DAAAAAAAAL8MAAAAAAAAAAAAAL8MAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADBDAAAAAAAAAAAAADBDAAAAAAAAMIMAAAAAAAAAAAAAMIMAAAAAAAAwwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAwAAAAAAAC8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					690,
					1,
					"insert",
					{
						"characters": " differently"
					},
					"DAAAAMMMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADFDAAAAAAAAAAAAADFDAAAAAAAAMYMAAAAAAAAAAAAAMYMAAAAAAAAxwwAAAAAAAAAAAAAxwwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMkMAAAAAAAAAAAAAMkMAAAAAAAAygwAAAAAAAAAAAAAygwAAAAAAADLDAAAAAAAAAAAAADLDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAAzQwAAAAAAAAAAAAAzQwAAAAAAADODAAAAAAAAAAAAADODAAAAAAAAM8MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwwAAAAAAADDDAAAAAAAAAAAAAAAAPC/"
				],
				[
					691,
					1,
					"wrap_lines",
					null,
					"AgAAALsMAAAAAAAAvAwAAAAAAAABAAAAILwMAAAAAAAAvgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwwAAAAAAADPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"image_paste",
					null,
					"AQAAAEwNAAAAAAAAxQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATA0AAAAAAABMDQAAAAAAAAAAAAAAEIhA"
				],
				[
					706,
					1,
					"left_delete",
					null,
					"AQAAAHYNAAAAAAAAdg0AAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAdw0AAAAAAAB3DQAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAHYNAAAAAAAAdw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdg0AAAAAAAB2DQAAAAAAAAAAAAAAAPC/"
				],
				[
					714,
					1,
					"cut",
					null,
					"AQAAALYNAAAAAAAAtg0AAAAAAAAIAAAAIkNvbXB1bCI",
					"AQAAAAAAAAABAAAAvg0AAAAAAAC2DQAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					2,
					"left_delete",
					null,
					"AgAAALUNAAAAAAAAtQ0AAAAAAAABAAAAILQNAAAAAAAAtA0AAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAtg0AAAAAAAC2DQAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"image_paste",
					null,
					"AQAAALANAAAAAAAAuA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsA0AAAAAAACwDQAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALgNAAAAAAAAuQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuA0AAAAAAAC4DQAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALkNAAAAAAAAug0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQ0AAAAAAAC5DQAAAAAAAAAAAAAAAPC/"
				],
				[
					723,
					1,
					"cut",
					null,
					"AQAAALoNAAAAAAAAug0AAAAAAAAEAAAAIkFEIg",
					"AQAAAAAAAAABAAAAug0AAAAAAAC+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					724,
					2,
					"right_delete",
					null,
					"AgAAALoNAAAAAAAAug0AAAAAAAABAAAALLoNAAAAAAAAug0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAug0AAAAAAAC6DQAAAAAAAAAAAAAAAPC/"
				],
				[
					727,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAL4NAAAAAAAAvw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvg0AAAAAAAC+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					728,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL8NAAAAAAAAwA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvw0AAAAAAAC/DQAAAAAAAAAAAAAAAPC/"
				],
				[
					729,
					1,
					"image_paste",
					null,
					"AQAAAMANAAAAAAAAxA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwA0AAAAAAADADQAAAAAAAAAAAAAAAPC/"
				],
				[
					731,
					1,
					"left_delete",
					null,
					"AQAAAL4NAAAAAAAAvg0AAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAvw0AAAAAAAC/DQAAAAAAAAAAAAAAAPC/"
				],
				[
					732,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL4NAAAAAAAAvw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvg0AAAAAAAC+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					753,
					1,
					"cut",
					null,
					"AQAAAOYJAAAAAAAA5gkAAAAAAAAaAAAAaGVhZChyZXByb2R1Y2VkX2RhdF9leHBfMSk",
					"AQAAAAAAAAABAAAAAAoAAAAAAADmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					754,
					1,
					"right_delete",
					null,
					"AQAAAOYJAAAAAAAA5gkAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA5gkAAAAAAADmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					759,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAP0NAAAAAAAA/g0AAAAAAAAAAAAA/g0AAAAAAAD/DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAAAA"
				],
				[
					761,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAP4NAAAAAAAA/w0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/g0AAAAAAAD+DQAAAAAAAAAAAAAAAAAA"
				],
				[
					762,
					1,
					"left_delete",
					null,
					"AQAAAP4NAAAAAAAA/g0AAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAA/w0AAAAAAAD/DQAAAAAAAAAAAAAAAPC/"
				],
				[
					763,
					1,
					"image_paste",
					null,
					"AQAAAP4NAAAAAAAAGA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/g0AAAAAAAD+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					764,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABgOAAAAAAAAGQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGA4AAAAAAAAYDgAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABgOAAAAAAAAGQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGA4AAAAAAAAYDgAAAAAAAP///////+9/"
				],
				[
					770,
					1,
					"image_paste",
					null,
					"AQAAABkOAAAAAAAAMw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQ4AAAAAAAAZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					772,
					1,
					"left_delete",
					null,
					"AQAAADEOAAAAAAAAMQ4AAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAMg4AAAAAAAAyDgAAAAAAAAAAAAAAAPC/"
				],
				[
					773,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAADEOAAAAAAAAMg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQ4AAAAAAAAxDgAAAAAAAAAAAAAAAPC/"
				],
				[
					781,
					1,
					"insert",
					{
						"characters": "\nghead"
					},
					"BgAAABgOAAAAAAAAGQ4AAAAAAAAAAAAAGQ4AAAAAAAAaDgAAAAAAAAAAAAAaDgAAAAAAABsOAAAAAAAAAAAAABsOAAAAAAAAHA4AAAAAAAAAAAAAHA4AAAAAAAAdDgAAAAAAAAAAAAAdDgAAAAAAAB4OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGA4AAAAAAAAYDgAAAAAAAAAAAAAAAPC/"
				],
				[
					782,
					5,
					"left_delete",
					null,
					"BQAAAB0OAAAAAAAAHQ4AAAAAAAABAAAAZBwOAAAAAAAAHA4AAAAAAAABAAAAYRsOAAAAAAAAGw4AAAAAAAABAAAAZRoOAAAAAAAAGg4AAAAAAAABAAAAaBkOAAAAAAAAGQ4AAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAHg4AAAAAAAAeDgAAAAAAAAAAAAAAAPC/"
				],
				[
					783,
					1,
					"insert",
					{
						"characters": "head("
					},
					"BQAAABkOAAAAAAAAGg4AAAAAAAAAAAAAGg4AAAAAAAAbDgAAAAAAAAAAAAAbDgAAAAAAABwOAAAAAAAAAAAAABwOAAAAAAAAHQ4AAAAAAAAAAAAAHQ4AAAAAAAAeDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQ4AAAAAAAAZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"image_paste",
					null,
					"AQAAAB4OAAAAAAAAMA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHg4AAAAAAAAeDgAAAAAAAAAAAAAAAPC/"
				],
				[
					785,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADAOAAAAAAAAMQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMA4AAAAAAAAwDgAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAP0NAAAAAAAA/g0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAA4HFA"
				],
				[
					795,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP4NAAAAAAAA/w0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/g0AAAAAAAD+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					796,
					2,
					"left_delete",
					null,
					"AgAAAP4NAAAAAAAA/g0AAAAAAAABAAAAIP0NAAAAAAAA/Q0AAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAA/w0AAAAAAAD/DQAAAAAAAAAAAAAAAPC/"
				],
				[
					797,
					1,
					"insert",
					{
						"characters": "head("
					},
					"BQAAAP0NAAAAAAAA/g0AAAAAAAAAAAAA/g0AAAAAAAD/DQAAAAAAAAAAAAD/DQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAQ4AAAAAAAAAAAAAAQ4AAAAAAAACDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					798,
					1,
					"image_paste",
					null,
					"AQAAAAIOAAAAAAAAIA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAg4AAAAAAAACDgAAAAAAAAAAAAAAAPC/"
				],
				[
					799,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACAOAAAAAAAAIQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIA4AAAAAAAAgDgAAAAAAAAAAAAAAAPC/"
				],
				[
					820,
					1,
					"insert",
					{
						"characters": "\nead"
					},
					"BAAAACEOAAAAAAAAIg4AAAAAAAAAAAAAIg4AAAAAAAAjDgAAAAAAAAAAAAAjDgAAAAAAACQOAAAAAAAAAAAAACQOAAAAAAAAJQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQ4AAAAAAAAhDgAAAAAAAAAAAAAAAPC/"
				],
				[
					821,
					3,
					"left_delete",
					null,
					"AwAAACQOAAAAAAAAJA4AAAAAAAABAAAAZCMOAAAAAAAAIw4AAAAAAAABAAAAYSIOAAAAAAAAIg4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAJQ4AAAAAAAAlDgAAAAAAAAAAAAAAAPC/"
				],
				[
					822,
					1,
					"insert",
					{
						"characters": "head("
					},
					"BQAAACIOAAAAAAAAIw4AAAAAAAAAAAAAIw4AAAAAAAAkDgAAAAAAAAAAAAAkDgAAAAAAACUOAAAAAAAAAAAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIg4AAAAAAAAiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					823,
					1,
					"image_paste",
					null,
					"AQAAACcOAAAAAAAARQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJw4AAAAAAAAnDgAAAAAAAAAAAAAAAPC/"
				],
				[
					824,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEUOAAAAAAAARg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQ4AAAAAAABFDgAAAAAAAAAAAAAAAPC/"
				],
				[
					826,
					1,
					"cut",
					null,
					"AQAAACIOAAAAAAAAIg4AAAAAAAAkAAAAaGVhZChmdWxsX3BlcmNlcHR1YWxfdGFza19kYXRfZXhwXzIp",
					"AQAAAAAAAAABAAAARg4AAAAAAAAiDgAAAAAAAAAAAAAAAAAA"
				],
				[
					830,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD0OAAAAAAAAPg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQ4AAAAAAAA9DgAAAAAAAP///////+9/"
				],
				[
					831,
					1,
					"image_paste",
					null,
					"AQAAAD4OAAAAAAAAYg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPg4AAAAAAAA+DgAAAAAAAAAAAAAAAPC/"
				],
				[
					834,
					1,
					"cut",
					null,
					"AQAAAGMOAAAAAAAAYw4AAAAAAAAYAAAAaGVhZChvcmlnaW5hbF9kYXRfZXhwXzIp",
					"AQAAAAAAAAABAAAAew4AAAAAAABjDgAAAAAAAAAAAAAAAAAA"
				],
				[
					837,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAH4OAAAAAAAAfw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfg4AAAAAAAB+DgAAAAAAAP///////+9/"
				],
				[
					838,
					1,
					"image_paste",
					null,
					"AQAAAH8OAAAAAAAAlw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfw4AAAAAAAB/DgAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"right_delete",
					null,
					"AQAAAGMOAAAAAAAAYw4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAYw4AAAAAAABjDgAAAAAAAAAAAAAAgHBA"
				],
				[
					842,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD4OAAAAAAAAPw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPg4AAAAAAAA+DgAAAAAAAAAAAAAAAAAA"
				],
				[
					844,
					1,
					"right_delete",
					null,
					"AQAAACIOAAAAAAAAIg4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAIg4AAAAAAAAiDgAAAAAAAAAAAAAAAAAA"
				],
				[
					847,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP0NAAAAAAAA/g0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAAAA"
				],
				[
					849,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAP0NAAAAAAAA/g0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAAAA"
				],
				[
					850,
					1,
					"insert",
					{
						"characters": " Now"
					},
					"BAAAAP4NAAAAAAAA/w0AAAAAAAAAAAAA/w0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAEOAAAAAAAAAAAAAAEOAAAAAAAAAg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/g0AAAAAAAD+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAAAIOAAAAAAAAAw4AAAAAAAAAAAAAAw4AAAAAAAAEDgAAAAAAAAAAAAAEDgAAAAAAAAUOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAg4AAAAAAAACDgAAAAAAAAAAAAAAAPC/"
				],
				[
					852,
					1,
					"insert",
					{
						"characters": " hae"
					},
					"BAAAAAUOAAAAAAAABg4AAAAAAAAAAAAABg4AAAAAAAAHDgAAAAAAAAAAAAAHDgAAAAAAAAgOAAAAAAAAAAAAAAgOAAAAAAAACQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQ4AAAAAAAAFDgAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP0NAAAAAAAA/g0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAAAA"
				],
				[
					856,
					1,
					"left_delete",
					null,
					"AQAAAAkOAAAAAAAACQ4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAACg4AAAAAAAAKDgAAAAAAAP///////+9/"
				],
				[
					857,
					1,
					"insert",
					{
						"characters": "'ve"
					},
					"AwAAAAkOAAAAAAAACg4AAAAAAAAAAAAACg4AAAAAAAALDgAAAAAAAAAAAAALDgAAAAAAAAwOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQ4AAAAAAAAJDgAAAAAAAAAAAAAAAPC/"
				],
				[
					858,
					1,
					"insert",
					{
						"characters": " th"
					},
					"AwAAAAwOAAAAAAAADQ4AAAAAAAAAAAAADQ4AAAAAAAAODgAAAAAAAAAAAAAODgAAAAAAAA8OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADA4AAAAAAAAMDgAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAA0OAAAAAAAADQ4AAAAAAAACAAAAdGg",
					"AQAAAAAAAAABAAAADw4AAAAAAAAPDgAAAAAAAAAAAAAAAPC/"
				],
				[
					860,
					4,
					"left_delete",
					null,
					"BAAAAAwOAAAAAAAADA4AAAAAAAABAAAAIAsOAAAAAAAACw4AAAAAAAABAAAAZQoOAAAAAAAACg4AAAAAAAABAAAAdgkOAAAAAAAACQ4AAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAADQ4AAAAAAAANDgAAAAAAAAAAAAAAAPC/"
				],
				[
					861,
					1,
					"insert",
					{
						"characters": "ve"
					},
					"AgAAAAkOAAAAAAAACg4AAAAAAAAAAAAACg4AAAAAAAALDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQ4AAAAAAAAJDgAAAAAAAAAAAAAAAPC/"
				],
				[
					862,
					1,
					"insert",
					{
						"characters": " reproduced"
					},
					"CwAAAAsOAAAAAAAADA4AAAAAAAAAAAAADA4AAAAAAAANDgAAAAAAAAAAAAANDgAAAAAAAA4OAAAAAAAAAAAAAA4OAAAAAAAADw4AAAAAAAAAAAAADw4AAAAAAAAQDgAAAAAAAAAAAAAQDgAAAAAAABEOAAAAAAAAAAAAABEOAAAAAAAAEg4AAAAAAAAAAAAAEg4AAAAAAAATDgAAAAAAAAAAAAATDgAAAAAAABQOAAAAAAAAAAAAABQOAAAAAAAAFQ4AAAAAAAAAAAAAFQ4AAAAAAAAWDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACw4AAAAAAAALDgAAAAAAAAAAAAAAAPC/"
				],
				[
					863,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAABYOAAAAAAAAFw4AAAAAAAAAAAAAFw4AAAAAAAAYDgAAAAAAAAAAAAAYDgAAAAAAABkOAAAAAAAAAAAAABkOAAAAAAAAGg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFg4AAAAAAAAWDgAAAAAAAAAAAAAAAPC/"
				],
				[
					864,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAABoOAAAAAAAAGw4AAAAAAAAAAAAAGw4AAAAAAAAcDgAAAAAAAAAAAAAcDgAAAAAAAB0OAAAAAAAAAAAAAB0OAAAAAAAAHg4AAAAAAAAAAAAAHg4AAAAAAAAfDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGg4AAAAAAAAaDgAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAB8OAAAAAAAAIA4AAAAAAAAAAAAAIA4AAAAAAAAhDgAAAAAAAAAAAAAhDgAAAAAAACIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHw4AAAAAAAAfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"insert",
					{
						"characters": " experiment"
					},
					"CwAAACIOAAAAAAAAIw4AAAAAAAAAAAAAIw4AAAAAAAAkDgAAAAAAAAAAAAAkDgAAAAAAACUOAAAAAAAAAAAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAAnDgAAAAAAACgOAAAAAAAAAAAAACgOAAAAAAAAKQ4AAAAAAAAAAAAAKQ4AAAAAAAAqDgAAAAAAAAAAAAAqDgAAAAAAACsOAAAAAAAAAAAAACsOAAAAAAAALA4AAAAAAAAAAAAALA4AAAAAAAAtDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIg4AAAAAAAAiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					867,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAC0OAAAAAAAALg4AAAAAAAAAAAAALg4AAAAAAAAvDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQ4AAAAAAAAtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					1,
					"insert",
					{
						"characters": " an"
					},
					"AwAAAC8OAAAAAAAAMA4AAAAAAAAAAAAAMA4AAAAAAAAxDgAAAAAAAAAAAAAxDgAAAAAAADIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALw4AAAAAAAAvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAADAOAAAAAAAAMA4AAAAAAAACAAAAYW4",
					"AQAAAAAAAAABAAAAMg4AAAAAAAAyDgAAAAAAAAAAAAAAAPC/"
				],
				[
					871,
					1,
					"right_delete",
					null,
					"AQAAACMOAAAAAAAAIw4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAIw4AAAAAAAAjDgAAAAAAAAAAAAAAAPC/"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAACMOAAAAAAAAJA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIw4AAAAAAAAjDgAAAAAAAAAAAAAAAPC/"
				],
				[
					874,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADAOAAAAAAAAMQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMA4AAAAAAAAwDgAAAAAAAP///////+9/"
				],
				[
					875,
					1,
					"left_delete",
					null,
					"AQAAADAOAAAAAAAAMA4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAMQ4AAAAAAAAxDgAAAAAAAAAAAAAAAPC/"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "with"
					},
					"BAAAADAOAAAAAAAAMQ4AAAAAAAAAAAAAMQ4AAAAAAAAyDgAAAAAAAAAAAAAyDgAAAAAAADMOAAAAAAAAAAAAADMOAAAAAAAANA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMA4AAAAAAAAwDgAAAAAAAAAAAAAAAPC/"
				],
				[
					877,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAADQOAAAAAAAANQ4AAAAAAAAAAAAANQ4AAAAAAAA2DgAAAAAAAAAAAAA2DgAAAAAAADcOAAAAAAAAAAAAADcOAAAAAAAAOA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANA4AAAAAAAA0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					878,
					1,
					"insert",
					{
						"characters": " ep"
					},
					"AwAAADgOAAAAAAAAOQ4AAAAAAAAAAAAAOQ4AAAAAAAA6DgAAAAAAAAAAAAA6DgAAAAAAADsOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOA4AAAAAAAA4DgAAAAAAAAAAAAAAAPC/"
				],
				[
					879,
					2,
					"left_delete",
					null,
					"AgAAADoOAAAAAAAAOg4AAAAAAAABAAAAcDkOAAAAAAAAOQ4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAOw4AAAAAAAA7DgAAAAAAAAAAAAAAAPC/"
				],
				[
					880,
					1,
					"insert",
					{
						"characters": "percetual"
					},
					"CQAAADkOAAAAAAAAOg4AAAAAAAAAAAAAOg4AAAAAAAA7DgAAAAAAAAAAAAA7DgAAAAAAADwOAAAAAAAAAAAAADwOAAAAAAAAPQ4AAAAAAAAAAAAAPQ4AAAAAAAA+DgAAAAAAAAAAAAA+DgAAAAAAAD8OAAAAAAAAAAAAAD8OAAAAAAAAQA4AAAAAAAAAAAAAQA4AAAAAAABBDgAAAAAAAAAAAABBDgAAAAAAAEIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQ4AAAAAAAA5DgAAAAAAAAAAAAAAAPC/"
				],
				[
					881,
					1,
					"insert",
					{
						"characters": " task"
					},
					"BQAAAEIOAAAAAAAAQw4AAAAAAAAAAAAAQw4AAAAAAABEDgAAAAAAAAAAAABEDgAAAAAAAEUOAAAAAAAAAAAAAEUOAAAAAAAARg4AAAAAAAAAAAAARg4AAAAAAABHDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQg4AAAAAAABCDgAAAAAAAAAAAAAAAPC/"
				],
				[
					882,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEcOAAAAAAAASA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARw4AAAAAAABHDgAAAAAAAAAAAAAAAPC/"
				],
				[
					885,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAD4OAAAAAAAAPw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPg4AAAAAAAA+DgAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAEkOAAAAAAAASg4AAAAAAAAAAAAASg4AAAAAAABLDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQ4AAAAAAABJDgAAAAAAAP///////+9/"
				],
				[
					888,
					2,
					"left_delete",
					null,
					"AgAAAEoOAAAAAAAASg4AAAAAAAABAAAAaUkOAAAAAAAASQ4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASw4AAAAAAABLDgAAAAAAAAAAAAAAAPC/"
				],
				[
					889,
					1,
					"insert",
					{
						"characters": "information"
					},
					"CwAAAEkOAAAAAAAASg4AAAAAAAAAAAAASg4AAAAAAABLDgAAAAAAAAAAAABLDgAAAAAAAEwOAAAAAAAAAAAAAEwOAAAAAAAATQ4AAAAAAAAAAAAATQ4AAAAAAABODgAAAAAAAAAAAABODgAAAAAAAE8OAAAAAAAAAAAAAE8OAAAAAAAAUA4AAAAAAAAAAAAAUA4AAAAAAABRDgAAAAAAAAAAAABRDgAAAAAAAFIOAAAAAAAAAAAAAFIOAAAAAAAAUw4AAAAAAAAAAAAAUw4AAAAAAABUDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQ4AAAAAAABJDgAAAAAAAAAAAAAAAPC/"
				],
				[
					890,
					1,
					"insert",
					{
						"characters": " (one"
					},
					"BQAAAFQOAAAAAAAAVQ4AAAAAAAAAAAAAVQ4AAAAAAABWDgAAAAAAAAAAAABWDgAAAAAAAFcOAAAAAAAAAAAAAFcOAAAAAAAAWA4AAAAAAAAAAAAAWA4AAAAAAABZDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVA4AAAAAAABUDgAAAAAAAAAAAAAAAPC/"
				],
				[
					891,
					1,
					"insert",
					{
						"characters": " row"
					},
					"BAAAAFkOAAAAAAAAWg4AAAAAAAAAAAAAWg4AAAAAAABbDgAAAAAAAAAAAABbDgAAAAAAAFwOAAAAAAAAAAAAAFwOAAAAAAAAXQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQ4AAAAAAABZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					892,
					1,
					"insert",
					{
						"characters": " one"
					},
					"BAAAAF0OAAAAAAAAXg4AAAAAAAAAAAAAXg4AAAAAAABfDgAAAAAAAAAAAABfDgAAAAAAAGAOAAAAAAAAAAAAAGAOAAAAAAAAYQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQ4AAAAAAABdDgAAAAAAAAAAAAAAAPC/"
				],
				[
					893,
					1,
					"insert",
					{
						"characters": " trial,"
					},
					"BwAAAGEOAAAAAAAAYg4AAAAAAAAAAAAAYg4AAAAAAABjDgAAAAAAAAAAAABjDgAAAAAAAGQOAAAAAAAAAAAAAGQOAAAAAAAAZQ4AAAAAAAAAAAAAZQ4AAAAAAABmDgAAAAAAAAAAAABmDgAAAAAAAGcOAAAAAAAAAAAAAGcOAAAAAAAAaA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQ4AAAAAAABhDgAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGgOAAAAAAAAaQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaA4AAAAAAABoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"insert",
					{
						"characters": "many"
					},
					"BAAAAGkOAAAAAAAAag4AAAAAAAAAAAAAag4AAAAAAABrDgAAAAAAAAAAAABrDgAAAAAAAGwOAAAAAAAAAAAAAGwOAAAAAAAAbQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQ4AAAAAAABpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": " reo"
					},
					"BAAAAG0OAAAAAAAAbg4AAAAAAAAAAAAAbg4AAAAAAABvDgAAAAAAAAAAAABvDgAAAAAAAHAOAAAAAAAAAAAAAHAOAAAAAAAAcQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQ4AAAAAAABtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					2,
					"left_delete",
					null,
					"AgAAAHAOAAAAAAAAcA4AAAAAAAABAAAAb28OAAAAAAAAbw4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAcQ4AAAAAAABxDgAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"insert",
					{
						"characters": "ows"
					},
					"AwAAAG8OAAAAAAAAcA4AAAAAAAAAAAAAcA4AAAAAAABxDgAAAAAAAAAAAABxDgAAAAAAAHIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbw4AAAAAAABvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAHIOAAAAAAAAcw4AAAAAAAAAAAAAcw4AAAAAAAB0DgAAAAAAAAAAAAB0DgAAAAAAAHUOAAAAAAAAAAAAAHUOAAAAAAAAdg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcg4AAAAAAAByDgAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"insert",
					{
						"characters": " each"
					},
					"BQAAAHYOAAAAAAAAdw4AAAAAAAAAAAAAdw4AAAAAAAB4DgAAAAAAAAAAAAB4DgAAAAAAAHkOAAAAAAAAAAAAAHkOAAAAAAAAeg4AAAAAAAAAAAAAeg4AAAAAAAB7DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdg4AAAAAAAB2DgAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"insert",
					{
						"characters": " participant)"
					},
					"DQAAAHsOAAAAAAAAfA4AAAAAAAAAAAAAfA4AAAAAAAB9DgAAAAAAAAAAAAB9DgAAAAAAAH4OAAAAAAAAAAAAAH4OAAAAAAAAfw4AAAAAAAAAAAAAfw4AAAAAAACADgAAAAAAAAAAAACADgAAAAAAAIEOAAAAAAAAAAAAAIEOAAAAAAAAgg4AAAAAAAAAAAAAgg4AAAAAAACDDgAAAAAAAAAAAACDDgAAAAAAAIQOAAAAAAAAAAAAAIQOAAAAAAAAhQ4AAAAAAAAAAAAAhQ4AAAAAAACGDgAAAAAAAAAAAACGDgAAAAAAAIcOAAAAAAAAAAAAAIcOAAAAAAAAiA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAew4AAAAAAAB7DgAAAAAAAAAAAAAAAPC/"
				],
				[
					902,
					1,
					"wrap_lines",
					null,
					"AgAAAEgOAAAAAAAASQ4AAAAAAAABAAAAIEkOAAAAAAAASw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiA4AAAAAAACIDgAAAAAAAAAAAAAAAPC/"
				],
				[
					903,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIoOAAAAAAAAiw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAig4AAAAAAACKDgAAAAAAAAAAAAAAAPC/"
				],
				[
					904,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIsOAAAAAAAAjA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiw4AAAAAAACLDgAAAAAAAAAAAAAAAPC/"
				],
				[
					905,
					2,
					"left_delete",
					null,
					"AgAAAIsOAAAAAAAAiw4AAAAAAAABAAAAIIoOAAAAAAAAig4AAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAjA4AAAAAAACMDgAAAAAAAAAAAAAAAPC/"
				],
				[
					906,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAIoOAAAAAAAAiw4AAAAAAAAAAAAAiw4AAAAAAACMDgAAAAAAAAAAAACMDgAAAAAAAI0OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAig4AAAAAAACKDgAAAAAAAAAAAAAAAPC/"
				],
				[
					907,
					1,
					"insert",
					{
						"characters": " well"
					},
					"BQAAAI0OAAAAAAAAjg4AAAAAAAAAAAAAjg4AAAAAAACPDgAAAAAAAAAAAACPDgAAAAAAAJAOAAAAAAAAAAAAAJAOAAAAAAAAkQ4AAAAAAAAAAAAAkQ4AAAAAAACSDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQ4AAAAAAACNDgAAAAAAAAAAAAAAAPC/"
				],
				[
					908,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAJIOAAAAAAAAkw4AAAAAAAAAAAAAkw4AAAAAAACUDgAAAAAAAAAAAACUDgAAAAAAAJUOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkg4AAAAAAACSDgAAAAAAAAAAAAAAAPC/"
				],
				[
					909,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAJUOAAAAAAAAlg4AAAAAAAAAAAAAlg4AAAAAAACXDgAAAAAAAAAAAACXDgAAAAAAAJgOAAAAAAAAAAAAAJgOAAAAAAAAmQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQ4AAAAAAACVDgAAAAAAAAAAAAAAAPC/"
				],
				[
					910,
					1,
					"insert",
					{
						"characters": " individu"
					},
					"CQAAAJkOAAAAAAAAmg4AAAAAAAAAAAAAmg4AAAAAAACbDgAAAAAAAAAAAACbDgAAAAAAAJwOAAAAAAAAAAAAAJwOAAAAAAAAnQ4AAAAAAAAAAAAAnQ4AAAAAAACeDgAAAAAAAAAAAACeDgAAAAAAAJ8OAAAAAAAAAAAAAJ8OAAAAAAAAoA4AAAAAAAAAAAAAoA4AAAAAAAChDgAAAAAAAAAAAAChDgAAAAAAAKIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQ4AAAAAAACZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					911,
					1,
					"insert",
					{
						"characters": "al"
					},
					"AgAAAKIOAAAAAAAAow4AAAAAAAAAAAAAow4AAAAAAACkDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAog4AAAAAAACiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					912,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQOAAAAAAAApQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApA4AAAAAAACkDgAAAAAAAAAAAAAAAPC/"
				],
				[
					913,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAJoOAAAAAAAAmg4AAAAAAAALAAAAaW5kaXZpZHVhbCA",
					"AQAAAAAAAAABAAAApQ4AAAAAAAClDgAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"insert",
					{
						"characters": "participant"
					},
					"CwAAAJoOAAAAAAAAmw4AAAAAAAAAAAAAmw4AAAAAAACcDgAAAAAAAAAAAACcDgAAAAAAAJ0OAAAAAAAAAAAAAJ0OAAAAAAAAng4AAAAAAAAAAAAAng4AAAAAAACfDgAAAAAAAAAAAACfDgAAAAAAAKAOAAAAAAAAAAAAAKAOAAAAAAAAoQ4AAAAAAAAAAAAAoQ4AAAAAAACiDgAAAAAAAAAAAACiDgAAAAAAAKMOAAAAAAAAAAAAAKMOAAAAAAAApA4AAAAAAAAAAAAApA4AAAAAAAClDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmg4AAAAAAACaDgAAAAAAAAAAAAAAAPC/"
				],
				[
					915,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAKUOAAAAAAAApg4AAAAAAAAAAAAApg4AAAAAAACnDgAAAAAAAAAAAACnDgAAAAAAAKgOAAAAAAAAAAAAAKgOAAAAAAAAqQ4AAAAAAAAAAAAAqQ4AAAAAAACqDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQ4AAAAAAAClDgAAAAAAAAAAAAAAAPC/"
				],
				[
					916,
					1,
					"insert",
					{
						"characters": " (one"
					},
					"BQAAAKoOAAAAAAAAqw4AAAAAAAAAAAAAqw4AAAAAAACsDgAAAAAAAAAAAACsDgAAAAAAAK0OAAAAAAAAAAAAAK0OAAAAAAAArg4AAAAAAAAAAAAArg4AAAAAAACvDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqg4AAAAAAACqDgAAAAAAAAAAAAAAAPC/"
				],
				[
					917,
					1,
					"insert",
					{
						"characters": " row"
					},
					"BAAAAK8OAAAAAAAAsA4AAAAAAAAAAAAAsA4AAAAAAACxDgAAAAAAAAAAAACxDgAAAAAAALIOAAAAAAAAAAAAALIOAAAAAAAAsw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArw4AAAAAAACvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					918,
					1,
					"insert",
					{
						"characters": " per"
					},
					"BAAAALMOAAAAAAAAtA4AAAAAAAAAAAAAtA4AAAAAAAC1DgAAAAAAAAAAAAC1DgAAAAAAALYOAAAAAAAAAAAAALYOAAAAAAAAtw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsw4AAAAAAACzDgAAAAAAAAAAAAAAAPC/"
				],
				[
					919,
					1,
					"insert",
					{
						"characters": " participant,"
					},
					"DQAAALcOAAAAAAAAuA4AAAAAAAAAAAAAuA4AAAAAAAC5DgAAAAAAAAAAAAC5DgAAAAAAALoOAAAAAAAAAAAAALoOAAAAAAAAuw4AAAAAAAAAAAAAuw4AAAAAAAC8DgAAAAAAAAAAAAC8DgAAAAAAAL0OAAAAAAAAAAAAAL0OAAAAAAAAvg4AAAAAAAAAAAAAvg4AAAAAAAC/DgAAAAAAAAAAAAC/DgAAAAAAAMAOAAAAAAAAAAAAAMAOAAAAAAAAwQ4AAAAAAAAAAAAAwQ4AAAAAAADCDgAAAAAAAAAAAADCDgAAAAAAAMMOAAAAAAAAAAAAAMMOAAAAAAAAxA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtw4AAAAAAAC3DgAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					1,
					"insert",
					{
						"characters": " aggregta"
					},
					"CQAAAMQOAAAAAAAAxQ4AAAAAAAAAAAAAxQ4AAAAAAADGDgAAAAAAAAAAAADGDgAAAAAAAMcOAAAAAAAAAAAAAMcOAAAAAAAAyA4AAAAAAAAAAAAAyA4AAAAAAADJDgAAAAAAAAAAAADJDgAAAAAAAMoOAAAAAAAAAAAAAMoOAAAAAAAAyw4AAAAAAAAAAAAAyw4AAAAAAADMDgAAAAAAAAAAAADMDgAAAAAAAM0OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxA4AAAAAAADEDgAAAAAAAAAAAAAAAPC/"
				],
				[
					921,
					2,
					"left_delete",
					null,
					"AgAAAMwOAAAAAAAAzA4AAAAAAAABAAAAYcsOAAAAAAAAyw4AAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAzQ4AAAAAAADNDgAAAAAAAAAAAAAAAPC/"
				],
				[
					922,
					1,
					"insert",
					{
						"characters": "ated"
					},
					"BAAAAMsOAAAAAAAAzA4AAAAAAAAAAAAAzA4AAAAAAADNDgAAAAAAAAAAAADNDgAAAAAAAM4OAAAAAAAAAAAAAM4OAAAAAAAAzw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyw4AAAAAAADLDgAAAAAAAAAAAAAAAPC/"
				],
				[
					923,
					1,
					"insert",
					{
						"characters": " values"
					},
					"BwAAAM8OAAAAAAAA0A4AAAAAAAAAAAAA0A4AAAAAAADRDgAAAAAAAAAAAADRDgAAAAAAANIOAAAAAAAAAAAAANIOAAAAAAAA0w4AAAAAAAAAAAAA0w4AAAAAAADUDgAAAAAAAAAAAADUDgAAAAAAANUOAAAAAAAAAAAAANUOAAAAAAAA1g4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzw4AAAAAAADPDgAAAAAAAAAAAAAAAPC/"
				],
				[
					924,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAANYOAAAAAAAA1w4AAAAAAAAAAAAA1w4AAAAAAADYDgAAAAAAAAAAAADYDgAAAAAAANkOAAAAAAAAAAAAANkOAAAAAAAA2g4AAAAAAAAAAAAA2g4AAAAAAADbDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1g4AAAAAAADWDgAAAAAAAAAAAAAAAPC/"
				],
				[
					925,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAANsOAAAAAAAA3A4AAAAAAAAAAAAA3A4AAAAAAADdDgAAAAAAAAAAAADdDgAAAAAAAN4OAAAAAAAAAAAAAN4OAAAAAAAA3w4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2w4AAAAAAADbDgAAAAAAAAAAAAAAAPC/"
				],
				[
					926,
					1,
					"insert",
					{
						"characters": " perceptual"
					},
					"CwAAAN8OAAAAAAAA4A4AAAAAAAAAAAAA4A4AAAAAAADhDgAAAAAAAAAAAADhDgAAAAAAAOIOAAAAAAAAAAAAAOIOAAAAAAAA4w4AAAAAAAAAAAAA4w4AAAAAAADkDgAAAAAAAAAAAADkDgAAAAAAAOUOAAAAAAAAAAAAAOUOAAAAAAAA5g4AAAAAAAAAAAAA5g4AAAAAAADnDgAAAAAAAAAAAADnDgAAAAAAAOgOAAAAAAAAAAAAAOgOAAAAAAAA6Q4AAAAAAAAAAAAA6Q4AAAAAAADqDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3w4AAAAAAADfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					927,
					1,
					"insert",
					{
						"characters": " task"
					},
					"BQAAAOoOAAAAAAAA6w4AAAAAAAAAAAAA6w4AAAAAAADsDgAAAAAAAAAAAADsDgAAAAAAAO0OAAAAAAAAAAAAAO0OAAAAAAAA7g4AAAAAAAAAAAAA7g4AAAAAAADvDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6g4AAAAAAADqDgAAAAAAAAAAAAAAAPC/"
				],
				[
					928,
					1,
					"insert",
					{
						"characters": " plus"
					},
					"BQAAAO8OAAAAAAAA8A4AAAAAAAAAAAAA8A4AAAAAAADxDgAAAAAAAAAAAADxDgAAAAAAAPIOAAAAAAAAAAAAAPIOAAAAAAAA8w4AAAAAAAAAAAAA8w4AAAAAAAD0DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7w4AAAAAAADvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"insert",
					{
						"characters": " questionnaire"
					},
					"DgAAAPQOAAAAAAAA9Q4AAAAAAAAAAAAA9Q4AAAAAAAD2DgAAAAAAAAAAAAD2DgAAAAAAAPcOAAAAAAAAAAAAAPcOAAAAAAAA+A4AAAAAAAAAAAAA+A4AAAAAAAD5DgAAAAAAAAAAAAD5DgAAAAAAAPoOAAAAAAAAAAAAAPoOAAAAAAAA+w4AAAAAAAAAAAAA+w4AAAAAAAD8DgAAAAAAAAAAAAD8DgAAAAAAAP0OAAAAAAAAAAAAAP0OAAAAAAAA/g4AAAAAAAAAAAAA/g4AAAAAAAD/DgAAAAAAAAAAAAD/DgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAQ8AAAAAAAAAAAAAAQ8AAAAAAAACDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9A4AAAAAAAD0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					930,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAAIPAAAAAAAAAw8AAAAAAAAAAAAAAw8AAAAAAAAEDwAAAAAAAAAAAAAEDwAAAAAAAAUPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAg8AAAAAAAACDwAAAAAAAAAAAAAAAPC/"
				],
				[
					931,
					2,
					"left_delete",
					null,
					"AgAAAAQPAAAAAAAABA8AAAAAAAABAAAAbgMPAAAAAAAAAw8AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAABQ8AAAAAAAAFDwAAAAAAAAAAAAAAAPC/"
				],
				[
					932,
					1,
					"insert",
					{
						"characters": "information."
					},
					"DAAAAAMPAAAAAAAABA8AAAAAAAAAAAAABA8AAAAAAAAFDwAAAAAAAAAAAAAFDwAAAAAAAAYPAAAAAAAAAAAAAAYPAAAAAAAABw8AAAAAAAAAAAAABw8AAAAAAAAIDwAAAAAAAAAAAAAIDwAAAAAAAAkPAAAAAAAAAAAAAAkPAAAAAAAACg8AAAAAAAAAAAAACg8AAAAAAAALDwAAAAAAAAAAAAALDwAAAAAAAAwPAAAAAAAAAAAAAAwPAAAAAAAADQ8AAAAAAAAAAAAADQ8AAAAAAAAODwAAAAAAAAAAAAAODwAAAAAAAA8PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAw8AAAAAAAADDwAAAAAAAAAAAAAAAPC/"
				],
				[
					933,
					1,
					"wrap_lines",
					null,
					"BwAAAEgOAAAAAAAASQ4AAAAAAAADAAAACiMgSA4AAAAAAABJDgAAAAAAAAEAAAAgSQ4AAAAAAABLDgAAAAAAAAAAAACVDgAAAAAAAJYOAAAAAAAAAQAAACCWDgAAAAAAAJgOAAAAAAAAAAAAAOEOAAAAAAAA4g4AAAAAAAABAAAAIOIOAAAAAAAA5A4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADw8AAAAAAAAPDwAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AgAAAFQPAAAAAAAAVQ8AAAAAAAAAAAAAVQ8AAAAAAABWDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVA8AAAAAAABUDwAAAAAAAAAAAAAA2IBA"
				],
				[
					936,
					1,
					"insert",
					{
						"characters": " We"
					},
					"AwAAAFYPAAAAAAAAVw8AAAAAAAAAAAAAVw8AAAAAAABYDwAAAAAAAAAAAABYDwAAAAAAAFkPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVg8AAAAAAABWDwAAAAAAAAAAAAAAAPC/"
				],
				[
					937,
					1,
					"insert",
					{
						"characters": " have"
					},
					"BQAAAFkPAAAAAAAAWg8AAAAAAAAAAAAAWg8AAAAAAABbDwAAAAAAAAAAAABbDwAAAAAAAFwPAAAAAAAAAAAAAFwPAAAAAAAAXQ8AAAAAAAAAAAAAXQ8AAAAAAABeDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQ8AAAAAAABZDwAAAAAAAAAAAAAAAPC/"
				],
				[
					938,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAF4PAAAAAAAAXw8AAAAAAAAAAAAAXw8AAAAAAABgDwAAAAAAAAAAAABgDwAAAAAAAGEPAAAAAAAAAAAAAGEPAAAAAAAAYg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXg8AAAAAAABeDwAAAAAAAAAAAAAAAPC/"
				],
				[
					939,
					1,
					"insert",
					{
						"characters": " same"
					},
					"BQAAAGIPAAAAAAAAYw8AAAAAAAAAAAAAYw8AAAAAAABkDwAAAAAAAAAAAABkDwAAAAAAAGUPAAAAAAAAAAAAAGUPAAAAAAAAZg8AAAAAAAAAAAAAZg8AAAAAAABnDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYg8AAAAAAABiDwAAAAAAAAAAAAAAAPC/"
				],
				[
					940,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAGcPAAAAAAAAaA8AAAAAAAAAAAAAaA8AAAAAAABpDwAAAAAAAAAAAABpDwAAAAAAAGoPAAAAAAAAAAAAAGoPAAAAAAAAaw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZw8AAAAAAABnDwAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"insert",
					{
						"characters": " Experiment"
					},
					"CwAAAGsPAAAAAAAAbA8AAAAAAAAAAAAAbA8AAAAAAABtDwAAAAAAAAAAAABtDwAAAAAAAG4PAAAAAAAAAAAAAG4PAAAAAAAAbw8AAAAAAAAAAAAAbw8AAAAAAABwDwAAAAAAAAAAAABwDwAAAAAAAHEPAAAAAAAAAAAAAHEPAAAAAAAAcg8AAAAAAAAAAAAAcg8AAAAAAABzDwAAAAAAAAAAAABzDwAAAAAAAHQPAAAAAAAAAAAAAHQPAAAAAAAAdQ8AAAAAAAAAAAAAdQ8AAAAAAAB2DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaw8AAAAAAABrDwAAAAAAAAAAAAAAAPC/"
				],
				[
					942,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAHYPAAAAAAAAdw8AAAAAAAAAAAAAdw8AAAAAAAB4DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdg8AAAAAAAB2DwAAAAAAAAAAAAAAAPC/"
				],
				[
					943,
					1,
					"insert",
					{
						"characters": " but"
					},
					"BAAAAHgPAAAAAAAAeQ8AAAAAAAAAAAAAeQ8AAAAAAAB6DwAAAAAAAAAAAAB6DwAAAAAAAHsPAAAAAAAAAAAAAHsPAAAAAAAAfA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeA8AAAAAAAB4DwAAAAAAAAAAAAAAAPC/"
				],
				[
					944,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHwPAAAAAAAAfQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfA8AAAAAAAB8DwAAAAAAAAAAAAAAAPC/"
				],
				[
					945,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAHkPAAAAAAAAeQ8AAAAAAAAEAAAAYnV0IA",
					"AQAAAAAAAAABAAAAfQ8AAAAAAAB9DwAAAAAAAAAAAAAAAPC/"
				],
				[
					946,
					1,
					"left_delete",
					null,
					"AQAAAHgPAAAAAAAAeA8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAeQ8AAAAAAAB5DwAAAAAAAAAAAAAAAPC/"
				],
				[
					947,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAHgPAAAAAAAAeQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeA8AAAAAAAB4DwAAAAAAAAAAAAAAAPC/"
				],
				[
					948,
					1,
					"insert",
					{
						"characters": " In"
					},
					"AwAAAHkPAAAAAAAAeg8AAAAAAAAAAAAAeg8AAAAAAAB7DwAAAAAAAAAAAAB7DwAAAAAAAHwPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQ8AAAAAAAB5DwAAAAAAAAAAAAAAAPC/"
				],
				[
					949,
					1,
					"insert",
					{
						"characters": " addition,"
					},
					"CgAAAHwPAAAAAAAAfQ8AAAAAAAAAAAAAfQ8AAAAAAAB+DwAAAAAAAAAAAAB+DwAAAAAAAH8PAAAAAAAAAAAAAH8PAAAAAAAAgA8AAAAAAAAAAAAAgA8AAAAAAACBDwAAAAAAAAAAAACBDwAAAAAAAIIPAAAAAAAAAAAAAIIPAAAAAAAAgw8AAAAAAAAAAAAAgw8AAAAAAACEDwAAAAAAAAAAAACEDwAAAAAAAIUPAAAAAAAAAAAAAIUPAAAAAAAAhg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfA8AAAAAAAB8DwAAAAAAAAAAAAAAAPC/"
				],
				[
					950,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAAIYPAAAAAAAAhw8AAAAAAAAAAAAAhw8AAAAAAACIDwAAAAAAAAAAAACIDwAAAAAAAIkPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhg8AAAAAAACGDwAAAAAAAAAAAAAAAPC/"
				],
				[
					951,
					1,
					"insert",
					{
						"characters": " have"
					},
					"BQAAAIkPAAAAAAAAig8AAAAAAAAAAAAAig8AAAAAAACLDwAAAAAAAAAAAACLDwAAAAAAAIwPAAAAAAAAAAAAAIwPAAAAAAAAjQ8AAAAAAAAAAAAAjQ8AAAAAAACODwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQ8AAAAAAACJDwAAAAAAAAAAAAAAAPC/"
				],
				[
					952,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAI4PAAAAAAAAjw8AAAAAAAAAAAAAjw8AAAAAAACQDwAAAAAAAAAAAACQDwAAAAAAAJEPAAAAAAAAAAAAAJEPAAAAAAAAkg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjg8AAAAAAACODwAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"insert",
					{
						"characters": " orignial"
					},
					"CQAAAJIPAAAAAAAAkw8AAAAAAAAAAAAAkw8AAAAAAACUDwAAAAAAAAAAAACUDwAAAAAAAJUPAAAAAAAAAAAAAJUPAAAAAAAAlg8AAAAAAAAAAAAAlg8AAAAAAACXDwAAAAAAAAAAAACXDwAAAAAAAJgPAAAAAAAAAAAAAJgPAAAAAAAAmQ8AAAAAAAAAAAAAmQ8AAAAAAACaDwAAAAAAAAAAAACaDwAAAAAAAJsPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkg8AAAAAAACSDwAAAAAAAAAAAAAAAPC/"
				],
				[
					954,
					4,
					"left_delete",
					null,
					"BAAAAJoPAAAAAAAAmg8AAAAAAAABAAAAbJkPAAAAAAAAmQ8AAAAAAAABAAAAYZgPAAAAAAAAmA8AAAAAAAABAAAAaZcPAAAAAAAAlw8AAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAmw8AAAAAAACbDwAAAAAAAAAAAAAAAPC/"
				],
				[
					955,
					1,
					"insert",
					{
						"characters": "inal_data"
					},
					"CQAAAJcPAAAAAAAAmA8AAAAAAAAAAAAAmA8AAAAAAACZDwAAAAAAAAAAAACZDwAAAAAAAJoPAAAAAAAAAAAAAJoPAAAAAAAAmw8AAAAAAAAAAAAAmw8AAAAAAACcDwAAAAAAAAAAAACcDwAAAAAAAJ0PAAAAAAAAAAAAAJ0PAAAAAAAAng8AAAAAAAAAAAAAng8AAAAAAACfDwAAAAAAAAAAAACfDwAAAAAAAKAPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlw8AAAAAAACXDwAAAAAAAAAAAAAAAPC/"
				],
				[
					956,
					5,
					"left_delete",
					null,
					"BQAAAJ8PAAAAAAAAnw8AAAAAAAABAAAAYZ4PAAAAAAAAng8AAAAAAAABAAAAdJ0PAAAAAAAAnQ8AAAAAAAABAAAAYZwPAAAAAAAAnA8AAAAAAAABAAAAZJsPAAAAAAAAmw8AAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAoA8AAAAAAACgDwAAAAAAAAAAAAAAAPC/"
				],
				[
					957,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAJsPAAAAAAAAnA8AAAAAAAAAAAAAnA8AAAAAAACdDwAAAAAAAAAAAACdDwAAAAAAAJ4PAAAAAAAAAAAAAJ4PAAAAAAAAnw8AAAAAAAAAAAAAnw8AAAAAAACgDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmw8AAAAAAACbDwAAAAAAAAAAAAAAAPC/"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAKAPAAAAAAAAoQ8AAAAAAAAAAAAAoQ8AAAAAAACiDwAAAAAAAAAAAACiDwAAAAAAAKMPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoA8AAAAAAACgDwAAAAAAAAAAAAAAAPC/"
				],
				[
					959,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAKEPAAAAAAAAoQ8AAAAAAAACAAAAYXM",
					"AQAAAAAAAAABAAAAow8AAAAAAACjDwAAAAAAAAAAAAAAAPC/"
				],
				[
					960,
					1,
					"insert",
					{
						"characters": "that"
					},
					"BAAAAKEPAAAAAAAAog8AAAAAAAAAAAAAog8AAAAAAACjDwAAAAAAAAAAAACjDwAAAAAAAKQPAAAAAAAAAAAAAKQPAAAAAAAApQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQ8AAAAAAAChDwAAAAAAAAAAAAAAAPC/"
				],
				[
					961,
					1,
					"insert",
					{
						"characters": " was"
					},
					"BAAAAKUPAAAAAAAApg8AAAAAAAAAAAAApg8AAAAAAACnDwAAAAAAAAAAAACnDwAAAAAAAKgPAAAAAAAAAAAAAKgPAAAAAAAAqQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQ8AAAAAAAClDwAAAAAAAAAAAAAAAPC/"
				],
				[
					962,
					1,
					"insert",
					{
						"characters": " produced"
					},
					"CQAAAKkPAAAAAAAAqg8AAAAAAAAAAAAAqg8AAAAAAACrDwAAAAAAAAAAAACrDwAAAAAAAKwPAAAAAAAAAAAAAKwPAAAAAAAArQ8AAAAAAAAAAAAArQ8AAAAAAACuDwAAAAAAAAAAAACuDwAAAAAAAK8PAAAAAAAAAAAAAK8PAAAAAAAAsA8AAAAAAAAAAAAAsA8AAAAAAACxDwAAAAAAAAAAAACxDwAAAAAAALIPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQ8AAAAAAACpDwAAAAAAAAAAAAAAAPC/"
				],
				[
					963,
					1,
					"left_delete",
					null,
					"AQAAALEPAAAAAAAAsQ8AAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAsg8AAAAAAACyDwAAAAAAAAAAAAAAAPC/"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAALEPAAAAAAAAsg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQ8AAAAAAACxDwAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIPAAAAAAAAsw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg8AAAAAAACyDwAAAAAAAAAAAAAAAPC/"
				],
				[
					966,
					2,
					"left_delete",
					null,
					"AgAAALIPAAAAAAAAsg8AAAAAAAABAAAAILEPAAAAAAAAsQ8AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAsw8AAAAAAACzDwAAAAAAAAAAAAAAAPC/"
				],
				[
					967,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAALEPAAAAAAAAsg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQ8AAAAAAACxDwAAAAAAAAAAAAAAAPC/"
				],
				[
					968,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAALIPAAAAAAAAsw8AAAAAAAAAAAAAsw8AAAAAAAC0DwAAAAAAAAAAAAC0DwAAAAAAALUPAAAAAAAAAAAAALUPAAAAAAAAtg8AAAAAAAAAAAAAtg8AAAAAAAC3DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg8AAAAAAACyDwAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					1,
					"insert",
					{
						"characters": " their"
					},
					"BgAAALcPAAAAAAAAuA8AAAAAAAAAAAAAuA8AAAAAAAC5DwAAAAAAAAAAAAC5DwAAAAAAALoPAAAAAAAAAAAAALoPAAAAAAAAuw8AAAAAAAAAAAAAuw8AAAAAAAC8DwAAAAAAAAAAAAC8DwAAAAAAAL0PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtw8AAAAAAAC3DwAAAAAAAAAAAAAAAPC/"
				],
				[
					970,
					1,
					"insert",
					{
						"characters": " ca"
					},
					"AwAAAL0PAAAAAAAAvg8AAAAAAAAAAAAAvg8AAAAAAAC/DwAAAAAAAAAAAAC/DwAAAAAAAMAPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQ8AAAAAAAC9DwAAAAAAAAAAAAAAAPC/"
				],
				[
					971,
					1,
					"left_delete",
					null,
					"AQAAAL8PAAAAAAAAvw8AAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAwA8AAAAAAADADwAAAAAAAAAAAAAAAPC/"
				],
				[
					972,
					1,
					"insert",
					{
						"characters": "ode."
					},
					"BAAAAL8PAAAAAAAAwA8AAAAAAAAAAAAAwA8AAAAAAADBDwAAAAAAAAAAAADBDwAAAAAAAMIPAAAAAAAAAAAAAMIPAAAAAAAAww8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvw8AAAAAAAC/DwAAAAAAAAAAAAAAAPC/"
				],
				[
					973,
					1,
					"wrap_lines",
					null,
					"AgAAAKAPAAAAAAAAoQ8AAAAAAAABAAAAIKEPAAAAAAAAow8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAww8AAAAAAADDDwAAAAAAAAAAAAAAAPC/"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAB8QAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAhEAAAAAAAAAAAAAAhEAAAAAAAACIQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxAAAAAAAAAfEAAAAAAAAAAAAAAAAPC/"
				],
				[
					982,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACEQAAAAAAAAIhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRAAAAAAAAAhEAAAAAAAAAAAAAAAAAAA"
				],
				[
					983,
					1,
					"image_paste",
					null,
					"AQAAACIQAAAAAAAAahAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhAAAAAAAAAiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					988,
					1,
					"image_paste",
					null,
					"AgAAACIQAAAAAAAAQhAAAAAAAAAAAAAAQhAAAAAAAABCEAAAAAAAACEAAAByZXByb2R1Y2VfZmFjdG9yX2FuYWx5c2lzX3Jlc3VsdHM",
					"AQAAAAAAAAABAAAAIhAAAAAAAABDEAAAAAAAAAAAAAAAAPC/"
				],
				[
					994,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACEQAAAAAAAAIhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRAAAAAAAAAhEAAAAAAAAAAAAAAAAAAA"
				],
				[
					995,
					1,
					"image_paste",
					null,
					"AQAAACIQAAAAAAAAaRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhAAAAAAAAAiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					997,
					1,
					"left_delete",
					null,
					"AQAAAGcQAAAAAAAAZxAAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAaBAAAAAAAABoEAAAAAAAAAAAAAAAAPC/"
				],
				[
					998,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGcQAAAAAAAAaBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxAAAAAAAABnEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1018,
					1,
					"image_paste",
					null,
					"AgAAAGoNAAAAAAAAfg0AAAAAAAAAAAAAfg0AAAAAAAB+DQAAAAAAABQAAAByZXByb2R1Y2VkX2RhdF9leHBfMg",
					"AQAAAAAAAAABAAAAag0AAAAAAAB+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1038,
					1,
					"cut",
					null,
					"AQAAAIkRAAAAAAAAiREAAAAAAABVAAAACnZhbGlkYXRlX29yaWdpbmFsX3ZzX3JlcHJvZHVjZWRfZGF0YV9leHBfMihvcmlnaW5hbF9kYXRfZXhwXzIsIHJlcHJvZHVjZWRfZGF0X2V4cF8yKQ",
					"AQAAAAAAAAABAAAA3hEAAAAAAACJEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1043,
					1,
					"insert",
					{
						"characters": "\n\n#"
					},
					"AwAAAAUQAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAHEAAAAAAAAAAAAAAHEAAAAAAAAAgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRAAAAAAAAAFEAAAAAAAAP///////+9/"
				],
				[
					1044,
					1,
					"insert",
					{
						"characters": " Because"
					},
					"CAAAAAgQAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADxAAAAAAAAAAAAAADxAAAAAAAAAQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBAAAAAAAAAIEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1045,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAABAQAAAAAAAAERAAAAAAAAAAAAAAERAAAAAAAAASEAAAAAAAAAAAAAASEAAAAAAAABMQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBAAAAAAAAAQEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1046,
					1,
					"insert",
					{
						"characters": " also"
					},
					"BQAAABMQAAAAAAAAFBAAAAAAAAAAAAAAFBAAAAAAAAAVEAAAAAAAAAAAAAAVEAAAAAAAABYQAAAAAAAAAAAAABYQAAAAAAAAFxAAAAAAAAAAAAAAFxAAAAAAAAAYEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExAAAAAAAAATEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1047,
					1,
					"insert",
					{
						"characters": " have"
					},
					"BQAAABgQAAAAAAAAGRAAAAAAAAAAAAAAGRAAAAAAAAAaEAAAAAAAAAAAAAAaEAAAAAAAABsQAAAAAAAAAAAAABsQAAAAAAAAHBAAAAAAAAAAAAAAHBAAAAAAAAAdEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBAAAAAAAAAYEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1048,
					1,
					"insert",
					{
						"characters": " access"
					},
					"BwAAAB0QAAAAAAAAHhAAAAAAAAAAAAAAHhAAAAAAAAAfEAAAAAAAAAAAAAAfEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAIRAAAAAAAAAAAAAAIRAAAAAAAAAiEAAAAAAAAAAAAAAiEAAAAAAAACMQAAAAAAAAAAAAACMQAAAAAAAAJBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHRAAAAAAAAAdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1049,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAACQQAAAAAAAAJRAAAAAAAAAAAAAAJRAAAAAAAAAmEAAAAAAAAAAAAAAmEAAAAAAAACcQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1050,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAACcQAAAAAAAAKBAAAAAAAAAAAAAAKBAAAAAAAAApEAAAAAAAAAAAAAApEAAAAAAAACoQAAAAAAAAAAAAACoQAAAAAAAAKxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJxAAAAAAAAAnEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1051,
					1,
					"insert",
					{
						"characters": " original"
					},
					"CQAAACsQAAAAAAAALBAAAAAAAAAAAAAALBAAAAAAAAAtEAAAAAAAAAAAAAAtEAAAAAAAAC4QAAAAAAAAAAAAAC4QAAAAAAAALxAAAAAAAAAAAAAALxAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAADEQAAAAAAAAAAAAADEQAAAAAAAAMhAAAAAAAAAAAAAAMhAAAAAAAAAzEAAAAAAAAAAAAAAzEAAAAAAAADQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKxAAAAAAAAArEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1052,
					1,
					"insert",
					{
						"characters": " data,"
					},
					"BgAAADQQAAAAAAAANRAAAAAAAAAAAAAANRAAAAAAAAA2EAAAAAAAAAAAAAA2EAAAAAAAADcQAAAAAAAAAAAAADcQAAAAAAAAOBAAAAAAAAAAAAAAOBAAAAAAAAA5EAAAAAAAAAAAAAA5EAAAAAAAADoQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBAAAAAAAAA0EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1053,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAADoQAAAAAAAAOxAAAAAAAAAAAAAAOxAAAAAAAAA8EAAAAAAAAAAAAAA8EAAAAAAAAD0QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhAAAAAAAAA6EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1054,
					1,
					"insert",
					{
						"characters": " can"
					},
					"BAAAAD0QAAAAAAAAPhAAAAAAAAAAAAAAPhAAAAAAAAA/EAAAAAAAAAAAAAA/EAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAQRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRAAAAAAAAA9EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1055,
					1,
					"insert",
					{
						"characters": " simply"
					},
					"BwAAAEEQAAAAAAAAQhAAAAAAAAAAAAAAQhAAAAAAAABDEAAAAAAAAAAAAABDEAAAAAAAAEQQAAAAAAAAAAAAAEQQAAAAAAAARRAAAAAAAAAAAAAARRAAAAAAAABGEAAAAAAAAAAAAABGEAAAAAAAAEcQAAAAAAAAAAAAAEcQAAAAAAAASBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRAAAAAAAABBEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1056,
					1,
					"insert",
					{
						"characters": " check"
					},
					"BgAAAEgQAAAAAAAASRAAAAAAAAAAAAAASRAAAAAAAABKEAAAAAAAAAAAAABKEAAAAAAAAEsQAAAAAAAAAAAAAEsQAAAAAAAATBAAAAAAAAAAAAAATBAAAAAAAABNEAAAAAAAAAAAAABNEAAAAAAAAE4QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASBAAAAAAAABIEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1057,
					1,
					"insert",
					{
						"characters": " whether"
					},
					"CAAAAE4QAAAAAAAATxAAAAAAAAAAAAAATxAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAFEQAAAAAAAAAAAAAFEQAAAAAAAAUhAAAAAAAAAAAAAAUhAAAAAAAABTEAAAAAAAAAAAAABTEAAAAAAAAFQQAAAAAAAAAAAAAFQQAAAAAAAAVRAAAAAAAAAAAAAAVRAAAAAAAABWEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThAAAAAAAABOEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1058,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAAFYQAAAAAAAAVxAAAAAAAAAAAAAAVxAAAAAAAABYEAAAAAAAAAAAAABYEAAAAAAAAFkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhAAAAAAAABWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1059,
					1,
					"insert",
					{
						"characters": " got"
					},
					"BAAAAFkQAAAAAAAAWhAAAAAAAAAAAAAAWhAAAAAAAABbEAAAAAAAAAAAAABbEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAXRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRAAAAAAAABZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1060,
					1,
					"insert",
					{
						"characters": " similar"
					},
					"CAAAAF0QAAAAAAAAXhAAAAAAAAAAAAAAXhAAAAAAAABfEAAAAAAAAAAAAABfEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAYRAAAAAAAAAAAAAAYRAAAAAAAABiEAAAAAAAAAAAAABiEAAAAAAAAGMQAAAAAAAAAAAAAGMQAAAAAAAAZBAAAAAAAAAAAAAAZBAAAAAAAABlEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRAAAAAAAABdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1061,
					1,
					"insert",
					{
						"characters": " values."
					},
					"CAAAAGUQAAAAAAAAZhAAAAAAAAAAAAAAZhAAAAAAAABnEAAAAAAAAAAAAABnEAAAAAAAAGgQAAAAAAAAAAAAAGgQAAAAAAAAaRAAAAAAAAAAAAAAaRAAAAAAAABqEAAAAAAAAAAAAABqEAAAAAAAAGsQAAAAAAAAAAAAAGsQAAAAAAAAbBAAAAAAAAAAAAAAbBAAAAAAAABtEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRAAAAAAAABlEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1062,
					1,
					"wrap_lines",
					null,
					"AgAAAE4QAAAAAAAATxAAAAAAAAABAAAAIE8QAAAAAAAAURAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRAAAAAAAABtEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1064,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIgQAAAAAAAAiRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBAAAAAAAACIEAAAAAAAAAAAAAAAAHZA"
				],
				[
					1065,
					1,
					"image_paste",
					null,
					"AQAAAIkQAAAAAAAA3hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRAAAAAAAACJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1067,
					1,
					"right_delete",
					null,
					"AQAAAIkQAAAAAAAAiRAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAiRAAAAAAAACJEAAAAAAAAAAAAAAA4IxA"
				],
				[
					1075,
					1,
					"right_delete",
					null,
					"AQAAAMcQAAAAAAAAxxAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAxxAAAAAAAADHEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1076,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMcQAAAAAAAAyBAAAAAAAAAAAAAAyBAAAAAAAADzEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxAAAAAAAADHEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1079,
					1,
					"cut",
					null,
					"AQAAAHAQAAAAAAAAcBAAAAAAAAAYAAAAaGVhZChvcmlnaW5hbF9kYXRfZXhwXzIp",
					"AQAAAAAAAAABAAAAiBAAAAAAAABwEAAAAAAAAAAAAAAAAAAA"
				],
				[
					1080,
					1,
					"right_delete",
					null,
					"AQAAAHAQAAAAAAAAcBAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAcBAAAAAAAABwEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1082,
					1,
					"image_paste",
					null,
					"AQAAAAYQAAAAAAAAHhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhAAAAAAAAAGEAAAAAAAAAAAAAAAAAAA"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAB4QAAAAAAAAHxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhAAAAAAAAAeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1088,
					1,
					"insert",
					{
						"characters": " Almsot"
					},
					"BwAAAIgQAAAAAAAAiRAAAAAAAAAAAAAAiRAAAAAAAACKEAAAAAAAAAAAAACKEAAAAAAAAIsQAAAAAAAAAAAAAIsQAAAAAAAAjBAAAAAAAAAAAAAAjBAAAAAAAACNEAAAAAAAAAAAAACNEAAAAAAAAI4QAAAAAAAAAAAAAI4QAAAAAAAAjxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBAAAAAAAACIEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1089,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAI8QAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACREAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxAAAAAAAACPEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1090,
					5,
					"left_delete",
					null,
					"BQAAAJAQAAAAAAAAkBAAAAAAAAABAAAAZY8QAAAAAAAAjxAAAAAAAAABAAAAII4QAAAAAAAAjhAAAAAAAAABAAAAdI0QAAAAAAAAjRAAAAAAAAABAAAAb4wQAAAAAAAAjBAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAkRAAAAAAAACREAAAAAAAAAAAAAAAAPC/"
				],
				[
					1091,
					1,
					"insert",
					{
						"characters": "ost"
					},
					"AwAAAIwQAAAAAAAAjRAAAAAAAAAAAAAAjRAAAAAAAACOEAAAAAAAAAAAAACOEAAAAAAAAI8QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBAAAAAAAACMEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1092,
					1,
					"insert",
					{
						"characters": " everything"
					},
					"CwAAAI8QAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACREAAAAAAAAAAAAACREAAAAAAAAJIQAAAAAAAAAAAAAJIQAAAAAAAAkxAAAAAAAAAAAAAAkxAAAAAAAACUEAAAAAAAAAAAAACUEAAAAAAAAJUQAAAAAAAAAAAAAJUQAAAAAAAAlhAAAAAAAAAAAAAAlhAAAAAAAACXEAAAAAAAAAAAAACXEAAAAAAAAJgQAAAAAAAAAAAAAJgQAAAAAAAAmRAAAAAAAAAAAAAAmRAAAAAAAACaEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxAAAAAAAACPEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1093,
					1,
					"insert",
					{
						"characters": " looks"
					},
					"BgAAAJoQAAAAAAAAmxAAAAAAAAAAAAAAmxAAAAAAAACcEAAAAAAAAAAAAACcEAAAAAAAAJ0QAAAAAAAAAAAAAJ0QAAAAAAAAnhAAAAAAAAAAAAAAnhAAAAAAAACfEAAAAAAAAAAAAACfEAAAAAAAAKAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhAAAAAAAACaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1094,
					1,
					"insert",
					{
						"characters": " fine"
					},
					"BQAAAKAQAAAAAAAAoRAAAAAAAAAAAAAAoRAAAAAAAACiEAAAAAAAAAAAAACiEAAAAAAAAKMQAAAAAAAAAAAAAKMQAAAAAAAApBAAAAAAAAAAAAAApBAAAAAAAAClEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBAAAAAAAACgEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1095,
					1,
					"insert",
					{
						"characters": " here,"
					},
					"BgAAAKUQAAAAAAAAphAAAAAAAAAAAAAAphAAAAAAAACnEAAAAAAAAAAAAACnEAAAAAAAAKgQAAAAAAAAAAAAAKgQAAAAAAAAqRAAAAAAAAAAAAAAqRAAAAAAAACqEAAAAAAAAAAAAACqEAAAAAAAAKsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRAAAAAAAAClEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1096,
					1,
					"insert",
					{
						"characters": " but"
					},
					"BAAAAKsQAAAAAAAArBAAAAAAAAAAAAAArBAAAAAAAACtEAAAAAAAAAAAAACtEAAAAAAAAK4QAAAAAAAAAAAAAK4QAAAAAAAArxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqxAAAAAAAACrEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1097,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAK8QAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAACxEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxAAAAAAAACvEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1098,
					1,
					"left_delete",
					null,
					"AQAAALAQAAAAAAAAsBAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAsRAAAAAAAACxEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1099,
					1,
					"insert",
					{
						"characters": "M-Rait"
					},
					"BgAAALAQAAAAAAAAsRAAAAAAAAAAAAAAsRAAAAAAAACyEAAAAAAAAAAAAACyEAAAAAAAALMQAAAAAAAAAAAAALMQAAAAAAAAtBAAAAAAAAAAAAAAtBAAAAAAAAC1EAAAAAAAAAAAAAC1EAAAAAAAALYQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBAAAAAAAACwEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1100,
					2,
					"left_delete",
					null,
					"AgAAALUQAAAAAAAAtRAAAAAAAAABAAAAdLQQAAAAAAAAtBAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAthAAAAAAAAC2EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1101,
					1,
					"insert",
					{
						"characters": "tio"
					},
					"AwAAALQQAAAAAAAAtRAAAAAAAAAAAAAAtRAAAAAAAAC2EAAAAAAAAAAAAAC2EAAAAAAAALcQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBAAAAAAAAC0EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1102,
					1,
					"insert",
					{
						"characters": " fits"
					},
					"BQAAALcQAAAAAAAAuBAAAAAAAAAAAAAAuBAAAAAAAAC5EAAAAAAAAAAAAAC5EAAAAAAAALoQAAAAAAAAAAAAALoQAAAAAAAAuxAAAAAAAAAAAAAAuxAAAAAAAAC8EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxAAAAAAAAC3EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1103,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAALwQAAAAAAAAvRAAAAAAAAAAAAAAvRAAAAAAAAC+EAAAAAAAAAAAAAC+EAAAAAAAAL8QAAAAAAAAAAAAAL8QAAAAAAAAwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBAAAAAAAAC8EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1104,
					1,
					"insert",
					{
						"characters": " different"
					},
					"CgAAAMAQAAAAAAAAwRAAAAAAAAAAAAAAwRAAAAAAAADCEAAAAAAAAAAAAADCEAAAAAAAAMMQAAAAAAAAAAAAAMMQAAAAAAAAxBAAAAAAAAAAAAAAxBAAAAAAAADFEAAAAAAAAAAAAADFEAAAAAAAAMYQAAAAAAAAAAAAAMYQAAAAAAAAxxAAAAAAAAAAAAAAxxAAAAAAAADIEAAAAAAAAAAAAADIEAAAAAAAAMkQAAAAAAAAAAAAAMkQAAAAAAAAyhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwBAAAAAAAADAEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1105,
					1,
					"insert",
					{
						"characters": " due"
					},
					"BAAAAMoQAAAAAAAAyxAAAAAAAAAAAAAAyxAAAAAAAADMEAAAAAAAAAAAAADMEAAAAAAAAM0QAAAAAAAAAAAAAM0QAAAAAAAAzhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhAAAAAAAADKEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAM4QAAAAAAAAzxAAAAAAAAAAAAAAzxAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAANEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhAAAAAAAADOEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1107,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAANEQAAAAAAAA0hAAAAAAAAAAAAAA0hAAAAAAAADTEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RAAAAAAAADREAAAAAAAAAAAAAAAAPC/"
				],
				[
					1108,
					1,
					"insert",
					{
						"characters": " d"
					},
					"AgAAANMQAAAAAAAA1BAAAAAAAAAAAAAA1BAAAAAAAADVEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xAAAAAAAADTEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1109,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAANQQAAAAAAAA1BAAAAAAAAABAAAAZNIQAAAAAAAA0hAAAAAAAAACAAAAYSA",
					"AQAAAAAAAAABAAAA1RAAAAAAAADVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1110,
					1,
					"insert",
					{
						"characters": "me"
					},
					"AgAAANIQAAAAAAAA0xAAAAAAAAAAAAAA0xAAAAAAAADUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hAAAAAAAADSEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"insert",
					{
						"characters": " using"
					},
					"BgAAANQQAAAAAAAA1RAAAAAAAAAAAAAA1RAAAAAAAADWEAAAAAAAAAAAAADWEAAAAAAAANcQAAAAAAAAAAAAANcQAAAAAAAA2BAAAAAAAAAAAAAA2BAAAAAAAADZEAAAAAAAAAAAAADZEAAAAAAAANoQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BAAAAAAAADUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1112,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAANoQAAAAAAAA2xAAAAAAAAAAAAAA2xAAAAAAAADcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hAAAAAAAADaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": " different"
					},
					"CgAAANwQAAAAAAAA3RAAAAAAAAAAAAAA3RAAAAAAAADeEAAAAAAAAAAAAADeEAAAAAAAAN8QAAAAAAAAAAAAAN8QAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADhEAAAAAAAAAAAAADhEAAAAAAAAOIQAAAAAAAAAAAAAOIQAAAAAAAA4xAAAAAAAAAAAAAA4xAAAAAAAADkEAAAAAAAAAAAAADkEAAAAAAAAOUQAAAAAAAAAAAAAOUQAAAAAAAA5hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BAAAAAAAADcEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1114,
					1,
					"insert",
					{
						"characters": " rfi"
					},
					"BAAAAOYQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOkQAAAAAAAAAAAAAOkQAAAAAAAA6hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hAAAAAAAADmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1115,
					3,
					"left_delete",
					null,
					"AwAAAOkQAAAAAAAA6RAAAAAAAAABAAAAaegQAAAAAAAA6BAAAAAAAAABAAAAZucQAAAAAAAA5xAAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA6hAAAAAAAADqEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1116,
					1,
					"insert",
					{
						"characters": "fit"
					},
					"AwAAAOcQAAAAAAAA6BAAAAAAAAAAAAAA6BAAAAAAAADpEAAAAAAAAAAAAADpEAAAAAAAAOoQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xAAAAAAAADnEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1117,
					1,
					"insert",
					{
						"characters": " method."
					},
					"CAAAAOoQAAAAAAAA6xAAAAAAAAAAAAAA6xAAAAAAAADsEAAAAAAAAAAAAADsEAAAAAAAAO0QAAAAAAAAAAAAAO0QAAAAAAAA7hAAAAAAAAAAAAAA7hAAAAAAAADvEAAAAAAAAAAAAADvEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAAA8RAAAAAAAAAAAAAA8RAAAAAAAADyEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hAAAAAAAADqEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1118,
					1,
					"wrap_lines",
					null,
					"BQAAAGcQAAAAAAAAaBAAAAAAAAADAAAACiMgZxAAAAAAAABoEAAAAAAAAAEAAAAgaBAAAAAAAABqEAAAAAAAAAAAAACvEAAAAAAAALAQAAAAAAAAAQAAACCwEAAAAAAAALIQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hAAAAAAAADyEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1170,
					1,
					"cut",
					null,
					"AQAAAGATAAAAAAAAYBMAAAAAAAAqAAAACnZhbGlkYXRlX3JlZ3Jlc3Npb24ocmVwcm9kdWNlZF9kYXRfZXhwXzIp",
					"AQAAAAAAAAABAAAAihMAAAAAAABgEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1173,
					1,
					"image_paste",
					null,
					"AQAAAHYRAAAAAAAAoBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhEAAAAAAAB2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1177,
					1,
					"insert",
					{
						"characters": "_exp_1"
					},
					"BgAAAIoRAAAAAAAAixEAAAAAAAAAAAAAixEAAAAAAACMEQAAAAAAAAAAAACMEQAAAAAAAI0RAAAAAAAAAAAAAI0RAAAAAAAAjhEAAAAAAAAAAAAAjhEAAAAAAACPEQAAAAAAAAAAAACPEQAAAAAAAJARAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihEAAAAAAACKEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1180,
					1,
					"left_delete",
					null,
					"AQAAAKQRAAAAAAAApBEAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAApREAAAAAAAClEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1181,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAKQRAAAAAAAApREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApBEAAAAAAACkEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1184,
					1,
					"left_delete",
					null,
					"AQAAAI8RAAAAAAAAjxEAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAkBEAAAAAAACQEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1185,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAI8RAAAAAAAAkBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxEAAAAAAACPEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1188,
					1,
					"left_delete",
					null,
					"AQAAAKQRAAAAAAAApBEAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAApREAAAAAAAClEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1189,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAKQRAAAAAAAApREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApBEAAAAAAACkEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1207,
					6,
					"left_delete",
					null,
					"BgAAAI8RAAAAAAAAjxEAAAAAAAABAAAAMo4RAAAAAAAAjhEAAAAAAAABAAAAX40RAAAAAAAAjREAAAAAAAABAAAAcIwRAAAAAAAAjBEAAAAAAAABAAAAeIsRAAAAAAAAixEAAAAAAAABAAAAZYoRAAAAAAAAihEAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAkBEAAAAAAACQEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1212,
					1,
					"image_paste",
					null,
					"AQAAAIsRAAAAAAAAnxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixEAAAAAAACLEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1213,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ8RAAAAAAAAoBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxEAAAAAAACfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1214,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKARAAAAAAAAoREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBEAAAAAAACgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1216,
					1,
					"left_delete",
					null,
					"AQAAAJ4RAAAAAAAAnhEAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAnxEAAAAAAACfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1217,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJ4RAAAAAAAAnxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhEAAAAAAACeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1219,
					1,
					"right_delete",
					null,
					"AQAAAKARAAAAAAAAoBEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAoBEAAAAAAACgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1220,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKARAAAAAAAAoREAAAAAAAAAAAAAoREAAAAAAAC1EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBEAAAAAAACgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1227,
					1,
					"insert",
					{
						"characters": "co"
					},
					"AgAAAIsRAAAAAAAAjBEAAAAAAAAAAAAAjBEAAAAAAACNEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixEAAAAAAACLEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1228,
					2,
					"left_delete",
					null,
					"AgAAAIwRAAAAAAAAjBEAAAAAAAABAAAAb4sRAAAAAAAAixEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAjREAAAAAAACNEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1257,
					1,
					"cut",
					null,
					"AQAAAH8KAAAAAAAAfwoAAAAAAAAZAAAAaGVhZChvcmlnaW5hbF9kYXRfZXhwXzIpCg",
					"AQAAAAAAAAABAAAAlwoAAAAAAACXCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1260,
					1,
					"cut",
					null,
					"AQAAABcJAAAAAAAAFwkAAAAAAAAlAAAAaGVhZChmdWxsX3BlcmNlcHR1YWxfdGFza19kYXRfZXhwXzEpCg",
					"AQAAAAAAAAABAAAANQkAAAAAAAA1CQAAAAAAAAAAAAAAAPC/"
				],
				[
					1265,
					1,
					"insert",
					{
						"characters": "load_"
					},
					"BQAAAHkMAAAAAAAAegwAAAAAAAAAAAAAegwAAAAAAAB7DAAAAAAAAAAAAAB7DAAAAAAAAHwMAAAAAAAAAAAAAHwMAAAAAAAAfQwAAAAAAAAAAAAAfQwAAAAAAAB+DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQwAAAAAAAB5DAAAAAAAAAAAAAAAAAAA"
				],
				[
					1266,
					1,
					"left_delete",
					null,
					"AQAAAH0MAAAAAAAAfQwAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAfgwAAAAAAAB+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					1267,
					1,
					"insert",
					{
						"characters": "ing_corraltion"
					},
					"DgAAAH0MAAAAAAAAfgwAAAAAAAAAAAAAfgwAAAAAAAB/DAAAAAAAAAAAAAB/DAAAAAAAAIAMAAAAAAAAAAAAAIAMAAAAAAAAgQwAAAAAAAAAAAAAgQwAAAAAAACCDAAAAAAAAAAAAACCDAAAAAAAAIMMAAAAAAAAAAAAAIMMAAAAAAAAhAwAAAAAAAAAAAAAhAwAAAAAAACFDAAAAAAAAAAAAACFDAAAAAAAAIYMAAAAAAAAAAAAAIYMAAAAAAAAhwwAAAAAAAAAAAAAhwwAAAAAAACIDAAAAAAAAAAAAACIDAAAAAAAAIkMAAAAAAAAAAAAAIkMAAAAAAAAigwAAAAAAAAAAAAAigwAAAAAAACLDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQwAAAAAAAB9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					1268,
					6,
					"left_delete",
					null,
					"BgAAAIoMAAAAAAAAigwAAAAAAAABAAAAbokMAAAAAAAAiQwAAAAAAAABAAAAb4gMAAAAAAAAiAwAAAAAAAABAAAAaYcMAAAAAAAAhwwAAAAAAAABAAAAdIYMAAAAAAAAhgwAAAAAAAABAAAAbIUMAAAAAAAAhQwAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAiwwAAAAAAACLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1269,
					1,
					"insert",
					{
						"characters": "elation"
					},
					"BwAAAIUMAAAAAAAAhgwAAAAAAAAAAAAAhgwAAAAAAACHDAAAAAAAAAAAAACHDAAAAAAAAIgMAAAAAAAAAAAAAIgMAAAAAAAAiQwAAAAAAAAAAAAAiQwAAAAAAACKDAAAAAAAAAAAAACKDAAAAAAAAIsMAAAAAAAAAAAAAIsMAAAAAAAAjAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQwAAAAAAACFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1270,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAIwMAAAAAAAAjQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAwAAAAAAACMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1271,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAI0MAAAAAAAAjgwAAAAAAAAAAAAAjgwAAAAAAACQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQwAAAAAAACNDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1272,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAMAAAAAAAAkQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAwAAAAAAACQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1274,
					1,
					"insert",
					{
						"characters": "                        "
					},
					"GAAAAOYMAAAAAAAA5wwAAAAAAAAAAAAA5wwAAAAAAADoDAAAAAAAAAAAAADoDAAAAAAAAOkMAAAAAAAAAAAAAOkMAAAAAAAA6gwAAAAAAAAAAAAA6gwAAAAAAADrDAAAAAAAAAAAAADrDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA7QwAAAAAAADuDAAAAAAAAAAAAADuDAAAAAAAAO8MAAAAAAAAAAAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADxDAAAAAAAAAAAAADxDAAAAAAAAPIMAAAAAAAAAAAAAPIMAAAAAAAA8wwAAAAAAAAAAAAA8wwAAAAAAAD0DAAAAAAAAAAAAAD0DAAAAAAAAPUMAAAAAAAAAAAAAPUMAAAAAAAA9gwAAAAAAAAAAAAA9gwAAAAAAAD3DAAAAAAAAAAAAAD3DAAAAAAAAPgMAAAAAAAAAAAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA+QwAAAAAAAD6DAAAAAAAAAAAAAD6DAAAAAAAAPsMAAAAAAAAAAAAAPsMAAAAAAAA/AwAAAAAAAAAAAAA/AwAAAAAAAD9DAAAAAAAAAAAAAD9DAAAAAAAAP4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gwAAAAAAADmDAAAAAAAAAAAAAAAgHBA"
				],
				[
					1298,
					1,
					"cut",
					null,
					"AQAAALwRAAAAAAAAvBEAAAAAAACRAAAACgp2YWxpZGF0ZV9mYWN0b3JfYW5hbHlzaXNfb3ZlcmZpdChyZXByb2R1Y2VkX2RhdCA9IHJlcHJvZHVjZWRfZGF0X2V4cF8xKQp2YWxpZGF0ZV9mYWN0b3JfYW5hbHlzaXNfb3ZlcmZpdChyZXByb2R1Y2VkX2RhdCA9IHJlcHJvZHVjZWRfZGF0X2V4cF8yKQ",
					"AQAAAAAAAAABAAAATRIAAAAAAAC8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1318,
					1,
					"cut",
					null,
					"AwAAAKQQAAAAAAAApBAAAAAAAABCAAAATS1SYXRpbyBmaXRzIGFyZSBkaWZmZXJlbnQgZHVlIHRvIG1lIHVzaW5nIGEgZGlmZmVyZW50IGZpdCBtZXRob2QuXBAAAAAAAABcEAAAAAAAAEUAAAB3aGV0aGVyIHdlIGdvdCBzaW1pbGFyIHZhbHVlcy4gQWxtb3N0IGV2ZXJ5dGhpbmcgbG9va3MgZmluZSBoZXJlLCBidXQUEAAAAAAAABQQAAAAAAAARQAAAEJlY2F1c2Ugd2UgYWxzbyBoYXZlIGFjY2VzcyB0byB0aGUgb3JpZ2luYWwgZGF0YSwgd2UgY2FuIHNpbXBseSBjaGVjaw",
					"AQAAAAAAAAADAAAAFBAAAAAAAABZEAAAAAAAAAAAAAAAAPC/XBAAAAAAAAChEAAAAAAAAAAAAAAAAPC/pBAAAAAAAADmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1324,
					3,
					"cut",
					null,
					"AwAAABIQAAAAAAAAEhAAAAAAAAADAAAAIyAKEhAAAAAAAAASEAAAAAAAAAMAAAAjIAoSEAAAAAAAABIQAAAAAAAAAwAAACMgCg",
					"AQAAAAAAAAABAAAAFBAAAAAAAAAUEAAAAAAAAAAAAAAAgGtA"
				],
				[
					1327,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABIQAAAAAAAAExAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEhAAAAAAAAASEAAAAAAAAAAAAAAAAAAA"
				],
				[
					1333,
					1,
					"insert",
					{
						"characters": "Available"
					},
					"CgAAAKANAAAAAAAAoQ0AAAAAAAAAAAAAoQ0AAAAAAAChDQAAAAAAAAoAAABWYWxpZGF0aW9uoQ0AAAAAAACiDQAAAAAAAAAAAACiDQAAAAAAAKMNAAAAAAAAAAAAAKMNAAAAAAAApA0AAAAAAAAAAAAApA0AAAAAAAClDQAAAAAAAAAAAAClDQAAAAAAAKYNAAAAAAAAAAAAAKYNAAAAAAAApw0AAAAAAAAAAAAApw0AAAAAAACoDQAAAAAAAAAAAACoDQAAAAAAAKkNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoA0AAAAAAACqDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1334,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAKkNAAAAAAAAqg0AAAAAAAAAAAAAqg0AAAAAAACrDQAAAAAAAAAAAACrDQAAAAAAAKwNAAAAAAAAAAAAAKwNAAAAAAAArQ0AAAAAAAAAAAAArQ0AAAAAAACuDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQ0AAAAAAACpDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1335,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAKoNAAAAAAAAqg0AAAAAAAAEAAAAZGF0YQ",
					"AQAAAAAAAAABAAAArg0AAAAAAACuDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1336,
					1,
					"insert",
					{
						"characters": "Data"
					},
					"BAAAAKoNAAAAAAAAqw0AAAAAAAAAAAAAqw0AAAAAAACsDQAAAAAAAAAAAACsDQAAAAAAAK0NAAAAAAAAAAAAAK0NAAAAAAAArg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqg0AAAAAAACqDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1337,
					1,
					"r_section_separator",
					null,
					"AQAAAJ4NAAAAAAAA7g0AAAAAAABUAAAAIyBBdmFpbGFibGUgRGF0YSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t",
					"AQAAAAAAAAABAAAArg0AAAAAAACuDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1345,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAF0LAAAAAAAAXgsAAAAAAAAAAAAAXgsAAAAAAABfCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQsAAAAAAABdCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1347,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAF4LAAAAAAAAXwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgsAAAAAAABeCwAAAAAAAAAAAAAAAAAA"
				],
				[
					1348,
					1,
					"insert",
					{
						"characters": " Labeling"
					},
					"CQAAAF8LAAAAAAAAYAsAAAAAAAAAAAAAYAsAAAAAAABhCwAAAAAAAAAAAABhCwAAAAAAAGILAAAAAAAAAAAAAGILAAAAAAAAYwsAAAAAAAAAAAAAYwsAAAAAAABkCwAAAAAAAAAAAABkCwAAAAAAAGULAAAAAAAAAAAAAGULAAAAAAAAZgsAAAAAAAAAAAAAZgsAAAAAAABnCwAAAAAAAAAAAABnCwAAAAAAAGgLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwsAAAAAAABfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1349,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAGgLAAAAAAAAaQsAAAAAAAAAAAAAaQsAAAAAAABqCwAAAAAAAAAAAABqCwAAAAAAAGsLAAAAAAAAAAAAAGsLAAAAAAAAbAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAsAAAAAAABoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1350,
					1,
					"insert",
					{
						"characters": " facto"
					},
					"BgAAAGwLAAAAAAAAbQsAAAAAAAAAAAAAbQsAAAAAAABuCwAAAAAAAAAAAABuCwAAAAAAAG8LAAAAAAAAAAAAAG8LAAAAAAAAcAsAAAAAAAAAAAAAcAsAAAAAAABxCwAAAAAAAAAAAABxCwAAAAAAAHILAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAsAAAAAAABsCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1351,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAHILAAAAAAAAcwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgsAAAAAAAByCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1352,
					1,
					"insert",
					{
						"characters": " levels"
					},
					"BwAAAHMLAAAAAAAAdAsAAAAAAAAAAAAAdAsAAAAAAAB1CwAAAAAAAAAAAAB1CwAAAAAAAHYLAAAAAAAAAAAAAHYLAAAAAAAAdwsAAAAAAAAAAAAAdwsAAAAAAAB4CwAAAAAAAAAAAAB4CwAAAAAAAHkLAAAAAAAAAAAAAHkLAAAAAAAAegsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwsAAAAAAABzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1354,
					1,
					"right_delete",
					null,
					"AQAAAG0LAAAAAAAAbQsAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAbQsAAAAAAABtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1355,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAG0LAAAAAAAAbgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQsAAAAAAABtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1358,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAHQLAAAAAAAAdAsAAAAAAAAGAAAAbGV2ZWxz",
					"AQAAAAAAAAABAAAAdAsAAAAAAAB0CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1359,
					1,
					"left_delete",
					null,
					"AQAAAHMLAAAAAAAAcwsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAdAsAAAAAAAB0CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1360,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHMLAAAAAAAAdAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwsAAAAAAABzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1363,
					1,
					"r_section_separator",
					null,
					"AQAAAF4LAAAAAAAArgsAAAAAAAAWAAAAIyBMYWJlbGluZyB0aGUgRmFjdG9ycw",
					"AQAAAAAAAAABAAAAdAsAAAAAAAB0CwAAAAAAAAAAAAAAQG5A"
				],
				[
					1366,
					1,
					"insert",
					{
						"characters": "Summary"
					},
					"BwAAAPINAAAAAAAA8w0AAAAAAAAAAAAA8w0AAAAAAAD0DQAAAAAAAAAAAAD0DQAAAAAAAPUNAAAAAAAAAAAAAPUNAAAAAAAA9g0AAAAAAAAAAAAA9g0AAAAAAAD3DQAAAAAAAAAAAAD3DQAAAAAAAPgNAAAAAAAAAAAAAPgNAAAAAAAA+Q0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8g0AAAAAAADyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1367,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAPkNAAAAAAAA+g0AAAAAAAAAAAAA+g0AAAAAAAD7DQAAAAAAAAAAAAD7DQAAAAAAAPwNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+Q0AAAAAAAD5DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1368,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPwNAAAAAAAA/Q0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/A0AAAAAAAD8DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1369,
					1,
					"right_delete",
					null,
					"AQAAAP0NAAAAAAAA/Q0AAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1370,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAP0NAAAAAAAA/g0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1371,
					1,
					"left_delete",
					null,
					"AQAAAP0NAAAAAAAA/Q0AAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA/g0AAAAAAAD+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1372,
					1,
					"insert",
					{
						"characters": "A"
					},
					"AQAAAP0NAAAAAAAA/g0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1378,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAG8QAAAAAAAAcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxAAAAAAAABvEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1379,
					1,
					"insert",
					{
						"characters": " Validation"
					},
					"CwAAAHAQAAAAAAAAcRAAAAAAAAAAAAAAcRAAAAAAAAByEAAAAAAAAAAAAAByEAAAAAAAAHMQAAAAAAAAAAAAAHMQAAAAAAAAdBAAAAAAAAAAAAAAdBAAAAAAAAB1EAAAAAAAAAAAAAB1EAAAAAAAAHYQAAAAAAAAAAAAAHYQAAAAAAAAdxAAAAAAAAAAAAAAdxAAAAAAAAB4EAAAAAAAAAAAAAB4EAAAAAAAAHkQAAAAAAAAAAAAAHkQAAAAAAAAehAAAAAAAAAAAAAAehAAAAAAAAB7EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBAAAAAAAABwEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1380,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHsQAAAAAAAAfBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexAAAAAAAAB7EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1381,
					2,
					"left_delete",
					null,
					"AgAAAHsQAAAAAAAAexAAAAAAAAABAAAACnoQAAAAAAAAehAAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAfBAAAAAAAAB8EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1383,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAHoQAAAAAAAAexAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehAAAAAAAAB6EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1384,
					1,
					"r_section_separator",
					null,
					"AQAAAG8QAAAAAAAAvxAAAAAAAAAMAAAAIyBWYWxpZGF0aW9u",
					"AQAAAAAAAAABAAAAexAAAAAAAAB7EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1385,
					1,
					"insert",
					{
						"characters": "\n\nThere"
					},
					"BwAAAL8QAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADBEAAAAAAAAAAAAADBEAAAAAAAAMIQAAAAAAAAAAAAAMIQAAAAAAAAwxAAAAAAAAAAAAAAwxAAAAAAAADEEAAAAAAAAAAAAADEEAAAAAAAAMUQAAAAAAAAAAAAAMUQAAAAAAAAxhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxAAAAAAAAC/EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1386,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAMEQAAAAAAAAwRAAAAAAAAAFAAAAVGhlcmU",
					"AQAAAAAAAAABAAAAxhAAAAAAAADGEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1387,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAMEQAAAAAAAAwhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRAAAAAAAADBEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1388,
					1,
					"insert",
					{
						"characters": " There"
					},
					"BgAAAMIQAAAAAAAAwxAAAAAAAAAAAAAAwxAAAAAAAADEEAAAAAAAAAAAAADEEAAAAAAAAMUQAAAAAAAAAAAAAMUQAAAAAAAAxhAAAAAAAAAAAAAAxhAAAAAAAADHEAAAAAAAAAAAAADHEAAAAAAAAMgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhAAAAAAAADCEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1389,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAMgQAAAAAAAAyRAAAAAAAAAAAAAAyRAAAAAAAADKEAAAAAAAAAAAAADKEAAAAAAAAMsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBAAAAAAAADIEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1390,
					1,
					"insert",
					{
						"characters": " one"
					},
					"BAAAAMsQAAAAAAAAzBAAAAAAAAAAAAAAzBAAAAAAAADNEAAAAAAAAAAAAADNEAAAAAAAAM4QAAAAAAAAAAAAAM4QAAAAAAAAzxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxAAAAAAAADLEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1391,
					1,
					"insert",
					{
						"characters": " function"
					},
					"CQAAAM8QAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADREAAAAAAAAAAAAADREAAAAAAAANIQAAAAAAAAAAAAANIQAAAAAAAA0xAAAAAAAAAAAAAA0xAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANUQAAAAAAAAAAAAANUQAAAAAAAA1hAAAAAAAAAAAAAA1hAAAAAAAADXEAAAAAAAAAAAAADXEAAAAAAAANgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxAAAAAAAADPEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1392,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAANgQAAAAAAAA2RAAAAAAAAAAAAAA2RAAAAAAAADaEAAAAAAAAAAAAADaEAAAAAAAANsQAAAAAAAAAAAAANsQAAAAAAAA3BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BAAAAAAAADYEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1393,
					1,
					"insert",
					{
						"characters": " each"
					},
					"BQAAANwQAAAAAAAA3RAAAAAAAAAAAAAA3RAAAAAAAADeEAAAAAAAAAAAAADeEAAAAAAAAN8QAAAAAAAAAAAAAN8QAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADhEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BAAAAAAAADcEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1394,
					1,
					"insert",
					{
						"characters": " sa"
					},
					"AwAAAOEQAAAAAAAA4hAAAAAAAAAAAAAA4hAAAAAAAADjEAAAAAAAAAAAAADjEAAAAAAAAOQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RAAAAAAAADhEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1395,
					2,
					"left_delete",
					null,
					"AgAAAOMQAAAAAAAA4xAAAAAAAAABAAAAYeIQAAAAAAAA4hAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA5BAAAAAAAADkEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1396,
					1,
					"insert",
					{
						"characters": "aspect"
					},
					"BgAAAOIQAAAAAAAA4xAAAAAAAAAAAAAA4xAAAAAAAADkEAAAAAAAAAAAAADkEAAAAAAAAOUQAAAAAAAAAAAAAOUQAAAAAAAA5hAAAAAAAAAAAAAA5hAAAAAAAADnEAAAAAAAAAAAAADnEAAAAAAAAOgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hAAAAAAAADiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1397,
					1,
					"insert",
					{
						"characters": " that"
					},
					"BQAAAOgQAAAAAAAA6RAAAAAAAAAAAAAA6RAAAAAAAADqEAAAAAAAAAAAAADqEAAAAAAAAOsQAAAAAAAAAAAAAOsQAAAAAAAA7BAAAAAAAAAAAAAA7BAAAAAAAADtEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1398,
					1,
					"insert",
					{
						"characters": " I"
					},
					"AgAAAO0QAAAAAAAA7hAAAAAAAAAAAAAA7hAAAAAAAADvEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RAAAAAAAADtEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1399,
					1,
					"insert",
					{
						"characters": " validated."
					},
					"CwAAAO8QAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAPIQAAAAAAAAAAAAAPIQAAAAAAAA8xAAAAAAAAAAAAAA8xAAAAAAAAD0EAAAAAAAAAAAAAD0EAAAAAAAAPUQAAAAAAAAAAAAAPUQAAAAAAAA9hAAAAAAAAAAAAAA9hAAAAAAAAD3EAAAAAAAAAAAAAD3EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA+RAAAAAAAAAAAAAA+RAAAAAAAAD6EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xAAAAAAAADvEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1400,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPoQAAAAAAAA+xAAAAAAAAAAAAAA+xAAAAAAAAD8EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hAAAAAAAAD6EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1403,
					1,
					"left_delete",
					null,
					"AQAAAPkQAAAAAAAA+RAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA+hAAAAAAAAD6EAAAAAAAAP///////+9/"
				],
				[
					1404,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAAPkQAAAAAAAA+hAAAAAAAAAAAAAA+hAAAAAAAAD7EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RAAAAAAAAD5EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1405,
					2,
					"left_delete",
					null,
					"AgAAAPoQAAAAAAAA+hAAAAAAAAABAAAAYvkQAAAAAAAA+RAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+xAAAAAAAAD7EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1406,
					1,
					"insert",
					{
						"characters": " beyond"
					},
					"BwAAAPkQAAAAAAAA+hAAAAAAAAAAAAAA+hAAAAAAAAD7EAAAAAAAAAAAAAD7EAAAAAAAAPwQAAAAAAAAAAAAAPwQAAAAAAAA/RAAAAAAAAAAAAAA/RAAAAAAAAD+EAAAAAAAAAAAAAD+EAAAAAAAAP8QAAAAAAAAAAAAAP8QAAAAAAAAABEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RAAAAAAAAD5EAAAAAAAAAAAAAAAAPC/"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAAARAAAAAAAAAREAAAAAAAAAAAAAAREAAAAAAAACEQAAAAAAAAAAAAACEQAAAAAAAAMRAAAAAAAAAAAAAAMRAAAAAAAABBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1408,
					1,
					"insert",
					{
						"characters": " repoduction"
					},
					"DAAAAAQRAAAAAAAABREAAAAAAAAAAAAABREAAAAAAAAGEQAAAAAAAAAAAAAGEQAAAAAAAAcRAAAAAAAAAAAAAAcRAAAAAAAACBEAAAAAAAAAAAAACBEAAAAAAAAJEQAAAAAAAAAAAAAJEQAAAAAAAAoRAAAAAAAAAAAAAAoRAAAAAAAACxEAAAAAAAAAAAAACxEAAAAAAAAMEQAAAAAAAAAAAAAMEQAAAAAAAA0RAAAAAAAAAAAAAA0RAAAAAAAADhEAAAAAAAAAAAAADhEAAAAAAAAPEQAAAAAAAAAAAAAPEQAAAAAAABARAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBEAAAAAAAAEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1409,
					1,
					"insert",
					{
						"characters": " oft"
					},
					"BAAAABARAAAAAAAAEREAAAAAAAAAAAAAEREAAAAAAAASEQAAAAAAAAAAAAASEQAAAAAAABMRAAAAAAAAAAAAABMRAAAAAAAAFBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBEAAAAAAAAQEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1410,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAABERAAAAAAAAEREAAAAAAAADAAAAb2Z0BREAAAAAAAAFEQAAAAAAAAwAAAByZXBvZHVjdGlvbiA",
					"AQAAAAAAAAABAAAAFBEAAAAAAAAUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1411,
					1,
					"insert",
					{
						"characters": "reproduction"
					},
					"DAAAAAURAAAAAAAABhEAAAAAAAAAAAAABhEAAAAAAAAHEQAAAAAAAAAAAAAHEQAAAAAAAAgRAAAAAAAAAAAAAAgRAAAAAAAACREAAAAAAAAAAAAACREAAAAAAAAKEQAAAAAAAAAAAAAKEQAAAAAAAAsRAAAAAAAAAAAAAAsRAAAAAAAADBEAAAAAAAAAAAAADBEAAAAAAAANEQAAAAAAAAAAAAANEQAAAAAAAA4RAAAAAAAAAAAAAA4RAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAQEQAAAAAAAAAAAAAQEQAAAAAAABERAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABREAAAAAAAAFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1412,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAABERAAAAAAAAEhEAAAAAAAAAAAAAEhEAAAAAAAATEQAAAAAAAAAAAAATEQAAAAAAABQRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEREAAAAAAAAREQAAAAAAAAAAAAAAAPC/"
				],
				[
					1413,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAABQRAAAAAAAAFREAAAAAAAAAAAAAFREAAAAAAAAWEQAAAAAAAAAAAAAWEQAAAAAAABcRAAAAAAAAAAAAABcRAAAAAAAAGBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFBEAAAAAAAAUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					1,
					"insert",
					{
						"characters": " data."
					},
					"BgAAABgRAAAAAAAAGREAAAAAAAAAAAAAGREAAAAAAAAaEQAAAAAAAAAAAAAaEQAAAAAAABsRAAAAAAAAAAAAABsRAAAAAAAAHBEAAAAAAAAAAAAAHBEAAAAAAAAdEQAAAAAAAAAAAAAdEQAAAAAAAB4RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBEAAAAAAAAYEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1415,
					1,
					"wrap_lines",
					null,
					"AgAAAAQRAAAAAAAABREAAAAAAAABAAAAIAURAAAAAAAABxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhEAAAAAAAAeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1416,
					2,
					"right_delete",
					null,
					"AgAAACARAAAAAAAAIBEAAAAAAAABAAAACiARAAAAAAAAIBEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAIBEAAAAAAAAgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1417,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACARAAAAAAAAIREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBEAAAAAAAAgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1424,
					1,
					"insert",
					{
						"characters": "\n\n#"
					},
					"AwAAAFQQAAAAAAAAVRAAAAAAAAAAAAAAVRAAAAAAAABWEAAAAAAAAAAAAABWEAAAAAAAAFcQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBAAAAAAAABUEAAAAAAAAP///////+9/"
				],
				[
					1425,
					3,
					"left_delete",
					null,
					"AwAAAFYQAAAAAAAAVhAAAAAAAAABAAAAI1UQAAAAAAAAVRAAAAAAAAABAAAAClQQAAAAAAAAVBAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVxAAAAAAAABXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1438,
					1,
					"cut",
					null,
					"AQAAAKMRAAAAAAAAoxEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAoxEAAAAAAACjEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1441,
					1,
					"right_delete",
					null,
					"AQAAAPcRAAAAAAAA9xEAAAAAAABpAAAACiMgRm9yIGluc3BlY3Rpb24gb2YgbXkgdmFsaWRhdGlvbiwgbmF2aWdhdGUgdG8gdGhlIHJlbGV2YW50IHNjcmlwdHMgaW4gdGhlCiMgU2NyaXB0cy92YWxpZGF0aW9uLyBmb2xkZXIu",
					"AQAAAAAAAAABAAAAYBIAAAAAAAD3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1446,
					1,
					"insert",
					{
						"characters": " Ye"
					},
					"AwAAACARAAAAAAAAIREAAAAAAAAAAAAAIREAAAAAAAAiEQAAAAAAAAAAAAAiEQAAAAAAACMRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBEAAAAAAAAgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1447,
					2,
					"left_delete",
					null,
					"AgAAACIRAAAAAAAAIhEAAAAAAAABAAAAZSERAAAAAAAAIREAAAAAAAABAAAAWQ",
					"AQAAAAAAAAABAAAAIxEAAAAAAAAjEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1448,
					1,
					"insert",
					{
						"characters": "Each"
					},
					"BAAAACERAAAAAAAAIhEAAAAAAAAAAAAAIhEAAAAAAAAjEQAAAAAAAAAAAAAjEQAAAAAAACQRAAAAAAAAAAAAACQRAAAAAAAAJREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIREAAAAAAAAhEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1449,
					1,
					"insert",
					{
						"characters": " function"
					},
					"CQAAACURAAAAAAAAJhEAAAAAAAAAAAAAJhEAAAAAAAAnEQAAAAAAAAAAAAAnEQAAAAAAACgRAAAAAAAAAAAAACgRAAAAAAAAKREAAAAAAAAAAAAAKREAAAAAAAAqEQAAAAAAAAAAAAAqEQAAAAAAACsRAAAAAAAAAAAAACsRAAAAAAAALBEAAAAAAAAAAAAALBEAAAAAAAAtEQAAAAAAAAAAAAAtEQAAAAAAAC4RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJREAAAAAAAAlEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1450,
					1,
					"insert",
					{
						"characters": " returns"
					},
					"CAAAAC4RAAAAAAAALxEAAAAAAAAAAAAALxEAAAAAAAAwEQAAAAAAAAAAAAAwEQAAAAAAADERAAAAAAAAAAAAADERAAAAAAAAMhEAAAAAAAAAAAAAMhEAAAAAAAAzEQAAAAAAAAAAAAAzEQAAAAAAADQRAAAAAAAAAAAAADQRAAAAAAAANREAAAAAAAAAAAAANREAAAAAAAA2EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhEAAAAAAAAuEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1451,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAC8RAAAAAAAALxEAAAAAAAAHAAAAcmV0dXJucw",
					"AQAAAAAAAAABAAAANhEAAAAAAAA2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1452,
					1,
					"insert",
					{
						"characters": "prints"
					},
					"BgAAAC8RAAAAAAAAMBEAAAAAAAAAAAAAMBEAAAAAAAAxEQAAAAAAAAAAAAAxEQAAAAAAADIRAAAAAAAAAAAAADIRAAAAAAAAMxEAAAAAAAAAAAAAMxEAAAAAAAA0EQAAAAAAAAAAAAA0EQAAAAAAADURAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxEAAAAAAAAvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1453,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAADURAAAAAAAANhEAAAAAAAAAAAAANhEAAAAAAAA3EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANREAAAAAAAA1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1454,
					1,
					"insert",
					{
						"characters": " string"
					},
					"BwAAADcRAAAAAAAAOBEAAAAAAAAAAAAAOBEAAAAAAAA5EQAAAAAAAAAAAAA5EQAAAAAAADoRAAAAAAAAAAAAADoRAAAAAAAAOxEAAAAAAAAAAAAAOxEAAAAAAAA8EQAAAAAAAAAAAAA8EQAAAAAAAD0RAAAAAAAAAAAAAD0RAAAAAAAAPhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxEAAAAAAAA3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1455,
					1,
					"insert",
					{
						"characters": " with"
					},
					"BQAAAD4RAAAAAAAAPxEAAAAAAAAAAAAAPxEAAAAAAABAEQAAAAAAAAAAAABAEQAAAAAAAEERAAAAAAAAAAAAAEERAAAAAAAAQhEAAAAAAAAAAAAAQhEAAAAAAABDEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhEAAAAAAAA+EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1456,
					1,
					"insert",
					{
						"characters": " my"
					},
					"AwAAAEMRAAAAAAAARBEAAAAAAAAAAAAARBEAAAAAAABFEQAAAAAAAAAAAABFEQAAAAAAAEYRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxEAAAAAAABDEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1457,
					1,
					"insert",
					{
						"characters": " evaluation."
					},
					"DAAAAEYRAAAAAAAARxEAAAAAAAAAAAAARxEAAAAAAABIEQAAAAAAAAAAAABIEQAAAAAAAEkRAAAAAAAAAAAAAEkRAAAAAAAAShEAAAAAAAAAAAAAShEAAAAAAABLEQAAAAAAAAAAAABLEQAAAAAAAEwRAAAAAAAAAAAAAEwRAAAAAAAATREAAAAAAAAAAAAATREAAAAAAABOEQAAAAAAAAAAAABOEQAAAAAAAE8RAAAAAAAAAAAAAE8RAAAAAAAAUBEAAAAAAAAAAAAAUBEAAAAAAABREQAAAAAAAAAAAABREQAAAAAAAFIRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhEAAAAAAABGEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1458,
					1,
					"insert",
					{
						"characters": " For"
					},
					"BAAAAFIRAAAAAAAAUxEAAAAAAAAAAAAAUxEAAAAAAABUEQAAAAAAAAAAAABUEQAAAAAAAFURAAAAAAAAAAAAAFURAAAAAAAAVhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhEAAAAAAABSEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1459,
					1,
					"insert",
					{
						"characters": " details,"
					},
					"CQAAAFYRAAAAAAAAVxEAAAAAAAAAAAAAVxEAAAAAAABYEQAAAAAAAAAAAABYEQAAAAAAAFkRAAAAAAAAAAAAAFkRAAAAAAAAWhEAAAAAAAAAAAAAWhEAAAAAAABbEQAAAAAAAAAAAABbEQAAAAAAAFwRAAAAAAAAAAAAAFwRAAAAAAAAXREAAAAAAAAAAAAAXREAAAAAAABeEQAAAAAAAAAAAABeEQAAAAAAAF8RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhEAAAAAAABWEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1460,
					1,
					"insert",
					{
						"characters": " check"
					},
					"BgAAAF8RAAAAAAAAYBEAAAAAAAAAAAAAYBEAAAAAAABhEQAAAAAAAAAAAABhEQAAAAAAAGIRAAAAAAAAAAAAAGIRAAAAAAAAYxEAAAAAAAAAAAAAYxEAAAAAAABkEQAAAAAAAAAAAABkEQAAAAAAAGURAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxEAAAAAAABfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1461,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAGURAAAAAAAAZhEAAAAAAAAAAAAAZhEAAAAAAABnEQAAAAAAAAAAAABnEQAAAAAAAGgRAAAAAAAAAAAAAGgRAAAAAAAAaREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZREAAAAAAABlEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1462,
					1,
					"insert",
					{
						"characters": " functions"
					},
					"CgAAAGkRAAAAAAAAahEAAAAAAAAAAAAAahEAAAAAAABrEQAAAAAAAAAAAABrEQAAAAAAAGwRAAAAAAAAAAAAAGwRAAAAAAAAbREAAAAAAAAAAAAAbREAAAAAAABuEQAAAAAAAAAAAABuEQAAAAAAAG8RAAAAAAAAAAAAAG8RAAAAAAAAcBEAAAAAAAAAAAAAcBEAAAAAAABxEQAAAAAAAAAAAABxEQAAAAAAAHIRAAAAAAAAAAAAAHIRAAAAAAAAcxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaREAAAAAAABpEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1463,
					1,
					"wrap_lines",
					null,
					"BQAAAAQRAAAAAAAABREAAAAAAAADAAAACiMgBBEAAAAAAAAFEQAAAAAAAAEAAAAgBREAAAAAAAAHEQAAAAAAAAAAAABSEQAAAAAAAFMRAAAAAAAAAQAAACBTEQAAAAAAAFURAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxEAAAAAAABzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1464,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAHURAAAAAAAAdhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdREAAAAAAAB1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1465,
					1,
					"left_delete",
					null,
					"AQAAAHURAAAAAAAAdREAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAdhEAAAAAAAB2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1466,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHURAAAAAAAAdhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdREAAAAAAAB1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1467,
					2,
					"left_delete",
					null,
					"AgAAAHURAAAAAAAAdREAAAAAAAABAAAAIHQRAAAAAAAAdBEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAdhEAAAAAAAB2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1468,
					1,
					"insert",
					{
						"characters": " defintiions."
					},
					"DQAAAHQRAAAAAAAAdREAAAAAAAAAAAAAdREAAAAAAAB2EQAAAAAAAAAAAAB2EQAAAAAAAHcRAAAAAAAAAAAAAHcRAAAAAAAAeBEAAAAAAAAAAAAAeBEAAAAAAAB5EQAAAAAAAAAAAAB5EQAAAAAAAHoRAAAAAAAAAAAAAHoRAAAAAAAAexEAAAAAAAAAAAAAexEAAAAAAAB8EQAAAAAAAAAAAAB8EQAAAAAAAH0RAAAAAAAAAAAAAH0RAAAAAAAAfhEAAAAAAAAAAAAAfhEAAAAAAAB/EQAAAAAAAAAAAAB/EQAAAAAAAIARAAAAAAAAAAAAAIARAAAAAAAAgREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBEAAAAAAAB0EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1469,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAHURAAAAAAAAdREAAAAAAAAMAAAAZGVmaW50aWlvbnMu",
					"AQAAAAAAAAABAAAAgREAAAAAAACBEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1470,
					1,
					"insert",
					{
						"characters": "definitions."
					},
					"DAAAAHURAAAAAAAAdhEAAAAAAAAAAAAAdhEAAAAAAAB3EQAAAAAAAAAAAAB3EQAAAAAAAHgRAAAAAAAAAAAAAHgRAAAAAAAAeREAAAAAAAAAAAAAeREAAAAAAAB6EQAAAAAAAAAAAAB6EQAAAAAAAHsRAAAAAAAAAAAAAHsRAAAAAAAAfBEAAAAAAAAAAAAAfBEAAAAAAAB9EQAAAAAAAAAAAAB9EQAAAAAAAH4RAAAAAAAAAAAAAH4RAAAAAAAAfxEAAAAAAAAAAAAAfxEAAAAAAACAEQAAAAAAAAAAAACAEQAAAAAAAIERAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdREAAAAAAAB1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1471,
					1,
					"wrap_lines",
					null,
					"BgAAAAQRAAAAAAAABREAAAAAAAADAAAACiMgUBEAAAAAAABREQAAAAAAAAMAAAAKIyAEEQAAAAAAAAURAAAAAAAAAQAAACAFEQAAAAAAAAcRAAAAAAAAAAAAAFIRAAAAAAAAUxEAAAAAAAABAAAAIFMRAAAAAAAAVREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgREAAAAAAACBEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1478,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFkSAAAAAAAAWhIAAAAAAAAAAAAAWhIAAAAAAABbEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRIAAAAAAABZEgAAAAAAAAAAAAAA4HFA"
				],
				[
					1480,
					1,
					"image_paste",
					null,
					"AQAAAFoSAAAAAAAAbRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhIAAAAAAABaEgAAAAAAAAAAAAAAAAAA"
				],
				[
					1481,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAG0SAAAAAAAAbhIAAAAAAAAAAAAAbhIAAAAAAABvEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRIAAAAAAABtEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1491,
					1,
					"image_paste",
					null,
					"AQAAAG4SAAAAAAAAjBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhIAAAAAAABuEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1492,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIwSAAAAAAAAjRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBIAAAAAAACMEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1493,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAI0SAAAAAAAAjhIAAAAAAAAAAAAAjhIAAAAAAACiEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRIAAAAAAACNEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1494,
					1,
					"image_paste",
					null,
					"AQAAAKISAAAAAAAAwBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohIAAAAAAACiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1495,
					1,
					"left_delete",
					null,
					"AQAAAL8SAAAAAAAAvxIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAwBIAAAAAAADAEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1496,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAL8SAAAAAAAAwBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxIAAAAAAAC/EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1501,
					1,
					"cut",
					null,
					"AQAAAFkSAAAAAAAAWRIAAAAAAABoAAAACnZhbGlkYXRlX2V4Y2x1c2lvbnMoZnVsbF9wZXJjZXB0dWFsX3Rhc2tfZGF0X2V4cF8xLAogICAgICAgICAgICAgICAgICAgIGZ1bGxfcGVyY2VwdHVhbF90YXNrX2RhdF9leHBfMik",
					"AQAAAAAAAAABAAAAwRIAAAAAAABZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1506,
					1,
					"image_paste",
					null,
					"AQAAAAMSAAAAAAAAaxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxIAAAAAAAADEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1507,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAGsSAAAAAAAAbBIAAAAAAAAAAAAAbBIAAAAAAACAEgAAAAAAAAAAAABsEgAAAAAAAGwSAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAgbBIAAAAAAABsEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaxIAAAAAAABrEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1513,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAMISAAAAAAAAwxIAAAAAAAAAAAAAwxIAAAAAAADEEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhIAAAAAAADCEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1519,
					1,
					"image_paste",
					null,
					"AgAAAMYSAAAAAAAA4RIAAAAAAAAAAAAA4RIAAAAAAADhEgAAAAAAABsAAAB2YWxpZGF0ZV9kaWZmaWN1bHR5X3Jlc3VsdHM",
					"AQAAAAAAAAABAAAAxhIAAAAAAADhEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1523,
					4,
					"right_delete",
					null,
					"BAAAAMISAAAAAAAAwhIAAAAAAAABAAAACsISAAAAAAAAwhIAAAAAAAABAAAACsISAAAAAAAAwhIAAAAAAAABAAAACsISAAAAAAAAwhIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAwhIAAAAAAADCEgAAAAAAAAAAAAAAkHJA"
				],
				[
					1527,
					1,
					"cut",
					null,
					"AQAAAGwSAAAAAAAAbBIAAAAAAABUAAAACnZhbGlkYXRlX3JlZ3Jlc3Npb24ocmVwcm9kdWNlZF9kYXRfZXhwXzEsCiAgICAgICAgICAgICAgICAgICAgcmVwcm9kdWNlZF9kYXRfZXhwXzIp",
					"AQAAAAAAAAABAAAAwBIAAAAAAABsEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1530,
					1,
					"insert",
					{
						"characters": "\n\n\n\n"
					},
					"BAAAAKoSAAAAAAAAqxIAAAAAAAAAAAAAqxIAAAAAAACsEgAAAAAAAAAAAACsEgAAAAAAAK0SAAAAAAAAAAAAAK0SAAAAAAAArhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhIAAAAAAACqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1531,
					1,
					"image_paste",
					null,
					"AQAAAK4SAAAAAAAAAhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhIAAAAAAACuEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAAITAAAAAAAAAxMAAAAAAAAAAAAAAxMAAAAAAAAXEwAAAAAAAAAAAAADEwAAAAAAAAMTAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAgAxMAAAAAAAADEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhMAAAAAAAACEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1536,
					1,
					"",
					null,
					"AgAAAK0SAAAAAAAALRMAAAAAAAAAAAAAghEAAAAAAACCEQAAAAAAAIAAAAAKdmFsaWRhdGVfb3JpZ2luYWxfdnNfcmVwcm9kdWNlZF9kYXRhX2V4cF8yKG9yaWdpbmFsX2RhdF9leHBfMiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcHJvZHVjZWRfZGF0X2V4cF8yKQ",
					"AQAAAAAAAAABAAAAAhIAAAAAAACCEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1539,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAACwSAAAAAAAALRIAAAAAAAAAAAAALRIAAAAAAAAuEgAAAAAAAAAAAAAuEgAAAAAAAC8SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBIAAAAAAAAsEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1542,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALESAAAAAAAAshIAAAAAAAAAAAAAshIAAAAAAACzEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRIAAAAAAACxEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1545,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAgTAAAAAAAACRMAAAAAAAAAAAAACRMAAAAAAAAKEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBMAAAAAAAAIEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1552,
					1,
					"cut",
					null,
					"AQAAAAoTAAAAAAAAChMAAAAAAAAuAAAACnZhbGlkYXRlX3Bvd2VyX2FuYWx5c2lzKHJlcHJvZHVjZWRfZGF0X2V4cF8xKQ",
					"AQAAAAAAAAABAAAAOBMAAAAAAAAKEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1555,
					1,
					"image_paste",
					null,
					"AQAAACoSAAAAAAAAWBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhIAAAAAAAAqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1558,
					1,
					"cut",
					null,
					"AQAAAO0RAAAAAAAA7REAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA7REAAAAAAADtEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1561,
					1,
					"cut",
					null,
					"AQAAAIMRAAAAAAAAgxEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAgxEAAAAAAACDEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1564,
					1,
					"wrap_lines",
					null,
					"BgAAAAQRAAAAAAAABREAAAAAAAADAAAACiMgUBEAAAAAAABREQAAAAAAAAMAAAAKIyAEEQAAAAAAAAURAAAAAAAAAQAAACAFEQAAAAAAAAcRAAAAAAAAAAAAAFIRAAAAAAAAUxEAAAAAAAABAAAAIFMRAAAAAAAAVREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBEAAAAAAAAkEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1577,
					1,
					"",
					null,
					"AgAAAFsSAAAAAAAAnhIAAAAAAAAAAAAAuBMAAAAAAAC4EwAAAAAAAEMAAAAKdmFsaWRhdGVfZmFjdG9yX2FuYWx5c2lzKG9yaWdpbmFsX2RhdF9leHBfMiwgcmVwcm9kdWNlZF9kYXRfZXhwXzIp",
					"AQAAAAAAAAABAAAAuBMAAAAAAAB1EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1581,
					1,
					"cut",
					null,
					"AQAAAOsTAAAAAAAA6xMAAAAAAAAsAAAACnZhbGlkYXRlX210dXJrX3NhbXBsZShyZXByb2R1Y2VkX2RhdF9leHBfMik",
					"AQAAAAAAAAABAAAAFxQAAAAAAADrEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1584,
					1,
					"image_paste",
					null,
					"AQAAAFcSAAAAAAAAgxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVxIAAAAAAABXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1591,
					2,
					"right_delete",
					null,
					"AgAAAIQSAAAAAAAAhBIAAAAAAAABAAAACoQSAAAAAAAAhBIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAhBIAAAAAAACEEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1592,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIQSAAAAAAAAhRIAAAAAAAAAAAAAhRIAAAAAAACGEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBIAAAAAAACEEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1596,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIYUAAAAAAAAhxQAAAAAAAAAAAAAhxQAAAAAAACYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhQAAAAAAACGFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1599,
					1,
					"left_delete",
					null,
					"AQAAAIUUAAAAAAAAhRQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhhQAAAAAAACGFAAAAAAAAP///////+9/"
				],
				[
					1603,
					1,
					"cut",
					null,
					"AQAAAGEUAAAAAAAAYRQAAAAAAABVAAAAdmFsaWRhdGVfRERNX2ZpdChvcmlnaW5hbF9kYXRfZXhwXzIsCiAgICAgICAgICAgICAgICAgZnVsbF9wZXJjZXB0dWFsX3Rhc2tfZGF0X2V4cF8yKQ",
					"AQAAAAAAAAABAAAAYRQAAAAAAAC2FAAAAAAAAP///////+9/"
				],
				[
					1608,
					1,
					"image_paste",
					null,
					"AQAAAIUSAAAAAAAA2hIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRIAAAAAAACFEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1611,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAANsSAAAAAAAA3BIAAAAAAAAAAAAA3BIAAAAAAADdEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xIAAAAAAADbEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1614,
					1,
					"left_delete",
					null,
					"AQAAACQUAAAAAAAAJBQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAJRQAAAAAAAAlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1615,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACQUAAAAAAAAJRQAAAAAAAAAAAAAJRQAAAAAAAA2FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBQAAAAAAAAkFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1620,
					1,
					"cut",
					null,
					"AQAAAP8TAAAAAAAA/xMAAAAAAABMAAAACnZhbGlkYXRlX21fcmF0aW8ob3JpZ2luYWxfZGF0X2V4cF8yLAogICAgICAgICAgICAgICAgIHJlcHJvZHVjZWRfZGF0X2V4cF8yKQ",
					"AQAAAAAAAAABAAAASxQAAAAAAAD/EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1623,
					1,
					"image_paste",
					null,
					"AQAAAN0SAAAAAAAAKRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RIAAAAAAADdEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1624,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"BgAAACkTAAAAAAAAKhMAAAAAAAAAAAAAKhMAAAAAAAA7EwAAAAAAAAAAAAAqEwAAAAAAACoTAAAAAAAAEQAAACAgICAgICAgICAgICAgICAgKhMAAAAAAAAqEwAAAAAAAAAAAAAqEwAAAAAAACsTAAAAAAAAAAAAACsTAAAAAAAALBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKRMAAAAAAAApEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1627,
					5,
					"right_delete",
					null,
					"BQAAAEwUAAAAAAAATBQAAAAAAAABAAAACkwUAAAAAAAATBQAAAAAAAABAAAACkwUAAAAAAAATBQAAAAAAAABAAAACkwUAAAAAAAATBQAAAAAAAABAAAACkwUAAAAAAAATBQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAATBQAAAAAAABMFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1631,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAMcUAAAAAAAAyBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxQAAAAAAADHFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1632,
					1,
					"insert",
					{
						"characters": " TODO"
					},
					"BQAAAMgUAAAAAAAAyRQAAAAAAAAAAAAAyRQAAAAAAADKFAAAAAAAAAAAAADKFAAAAAAAAMsUAAAAAAAAAAAAAMsUAAAAAAAAzBQAAAAAAAAAAAAAzBQAAAAAAADNFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBQAAAAAAADIFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1633,
					1,
					"insert",
					{
						"characters": "\nvisualize"
					},
					"CgAAAM0UAAAAAAAAzhQAAAAAAAAAAAAAzhQAAAAAAADPFAAAAAAAAAAAAADPFAAAAAAAANAUAAAAAAAAAAAAANAUAAAAAAAA0RQAAAAAAAAAAAAA0RQAAAAAAADSFAAAAAAAAAAAAADSFAAAAAAAANMUAAAAAAAAAAAAANMUAAAAAAAA1BQAAAAAAAAAAAAA1BQAAAAAAADVFAAAAAAAAAAAAADVFAAAAAAAANYUAAAAAAAAAAAAANYUAAAAAAAA1xQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzRQAAAAAAADNFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1634,
					1,
					"insert",
					{
						"characters": " mo"
					},
					"AwAAANcUAAAAAAAA2BQAAAAAAAAAAAAA2BQAAAAAAADZFAAAAAAAAAAAAADZFAAAAAAAANoUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1xQAAAAAAADXFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1635,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAANgUAAAAAAAA2BQAAAAAAAACAAAAbW8",
					"AQAAAAAAAAABAAAA2hQAAAAAAADaFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1637,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAM4UAAAAAAAAzxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhQAAAAAAADOFAAAAAAAAAAAAAAAAAAA"
				],
				[
					1638,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8UAAAAAAAA0BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxQAAAAAAADPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1640,
					1,
					"insert",
					{
						"characters": "factor"
					},
					"BgAAANoUAAAAAAAA2xQAAAAAAAAAAAAA2xQAAAAAAADcFAAAAAAAAAAAAADcFAAAAAAAAN0UAAAAAAAAAAAAAN0UAAAAAAAA3hQAAAAAAAAAAAAA3hQAAAAAAADfFAAAAAAAAAAAAADfFAAAAAAAAOAUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hQAAAAAAADaFAAAAAAAAP///////+9/"
				],
				[
					1641,
					1,
					"insert",
					{
						"characters": " loadings"
					},
					"CQAAAOAUAAAAAAAA4RQAAAAAAAAAAAAA4RQAAAAAAADiFAAAAAAAAAAAAADiFAAAAAAAAOMUAAAAAAAAAAAAAOMUAAAAAAAA5BQAAAAAAAAAAAAA5BQAAAAAAADlFAAAAAAAAAAAAADlFAAAAAAAAOYUAAAAAAAAAAAAAOYUAAAAAAAA5xQAAAAAAAAAAAAA5xQAAAAAAADoFAAAAAAAAAAAAADoFAAAAAAAAOkUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BQAAAAAAADgFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1642,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAOkUAAAAAAAA6hQAAAAAAAAAAAAA6hQAAAAAAADrFAAAAAAAAAAAAADrFAAAAAAAAOwUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6RQAAAAAAADpFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1643,
					1,
					"insert",
					{
						"characters": " both"
					},
					"BQAAAOwUAAAAAAAA7RQAAAAAAAAAAAAA7RQAAAAAAADuFAAAAAAAAAAAAADuFAAAAAAAAO8UAAAAAAAAAAAAAO8UAAAAAAAA8BQAAAAAAAAAAAAA8BQAAAAAAADxFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BQAAAAAAADsFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1644,
					1,
					"insert",
					{
						"characters": " experiments"
					},
					"DAAAAPEUAAAAAAAA8hQAAAAAAAAAAAAA8hQAAAAAAADzFAAAAAAAAAAAAADzFAAAAAAAAPQUAAAAAAAAAAAAAPQUAAAAAAAA9RQAAAAAAAAAAAAA9RQAAAAAAAD2FAAAAAAAAAAAAAD2FAAAAAAAAPcUAAAAAAAAAAAAAPcUAAAAAAAA+BQAAAAAAAAAAAAA+BQAAAAAAAD5FAAAAAAAAAAAAAD5FAAAAAAAAPoUAAAAAAAAAAAAAPoUAAAAAAAA+xQAAAAAAAAAAAAA+xQAAAAAAAD8FAAAAAAAAAAAAAD8FAAAAAAAAP0UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RQAAAAAAADxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1645,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AgAAAP0UAAAAAAAA/hQAAAAAAAAAAAAA/hQAAAAAAAD/FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RQAAAAAAAD9FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1646,
					1,
					"insert",
					{
						"characters": " visualize"
					},
					"CgAAAP8UAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAABFQAAAAAAAAAAAAABFQAAAAAAAAIVAAAAAAAAAAAAAAIVAAAAAAAAAxUAAAAAAAAAAAAAAxUAAAAAAAAEFQAAAAAAAAAAAAAEFQAAAAAAAAUVAAAAAAAAAAAAAAUVAAAAAAAABhUAAAAAAAAAAAAABhUAAAAAAAAHFQAAAAAAAAAAAAAHFQAAAAAAAAgVAAAAAAAAAAAAAAgVAAAAAAAACRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xQAAAAAAAD/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1647,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAAAVAAAAAAAAABUAAAAAAAAJAAAAdmlzdWFsaXpl",
					"AQAAAAAAAAABAAAACRUAAAAAAAAJFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1648,
					1,
					"insert",
					{
						"characters": "reliability"
					},
					"CwAAAAAVAAAAAAAAARUAAAAAAAAAAAAAARUAAAAAAAACFQAAAAAAAAAAAAACFQAAAAAAAAMVAAAAAAAAAAAAAAMVAAAAAAAABBUAAAAAAAAAAAAABBUAAAAAAAAFFQAAAAAAAAAAAAAFFQAAAAAAAAYVAAAAAAAAAAAAAAYVAAAAAAAABxUAAAAAAAAAAAAABxUAAAAAAAAIFQAAAAAAAAAAAAAIFQAAAAAAAAkVAAAAAAAAAAAAAAkVAAAAAAAAChUAAAAAAAAAAAAAChUAAAAAAAALFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1649,
					1,
					"insert",
					{
						"characters": " analysis"
					},
					"CQAAAAsVAAAAAAAADBUAAAAAAAAAAAAADBUAAAAAAAANFQAAAAAAAAAAAAANFQAAAAAAAA4VAAAAAAAAAAAAAA4VAAAAAAAADxUAAAAAAAAAAAAADxUAAAAAAAAQFQAAAAAAAAAAAAAQFQAAAAAAABEVAAAAAAAAAAAAABEVAAAAAAAAEhUAAAAAAAAAAAAAEhUAAAAAAAATFQAAAAAAAAAAAAATFQAAAAAAABQVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxUAAAAAAAALFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1650,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAABQVAAAAAAAAFRUAAAAAAAAAAAAAFRUAAAAAAAAWFQAAAAAAAAAAAAAWFQAAAAAAABcVAAAAAAAAAAAAABcVAAAAAAAAGBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFBUAAAAAAAAUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1651,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABgVAAAAAAAAGRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBUAAAAAAAAYFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1652,
					1,
					"insert",
					{
						"characters": "m-ratio"
					},
					"BwAAABkVAAAAAAAAGhUAAAAAAAAAAAAAGhUAAAAAAAAbFQAAAAAAAAAAAAAbFQAAAAAAABwVAAAAAAAAAAAAABwVAAAAAAAAHRUAAAAAAAAAAAAAHRUAAAAAAAAeFQAAAAAAAAAAAAAeFQAAAAAAAB8VAAAAAAAAAAAAAB8VAAAAAAAAIBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRUAAAAAAAAZFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1653,
					1,
					"insert",
					{
						"characters": " an"
					},
					"AwAAACAVAAAAAAAAIRUAAAAAAAAAAAAAIRUAAAAAAAAiFQAAAAAAAAAAAAAiFQAAAAAAACMVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBUAAAAAAAAgFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1654,
					3,
					"left_delete",
					null,
					"AwAAACIVAAAAAAAAIhUAAAAAAAABAAAAbiEVAAAAAAAAIRUAAAAAAAABAAAAYSAVAAAAAAAAIBUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAIxUAAAAAAAAjFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1660,
					1,
					"left_delete",
					null,
					"CAAAAMcWAAAAAAAAxxYAAAAAAAABAAAAIJUWAAAAAAAAlRYAAAAAAAABAAAAIGUWAAAAAAAAZRYAAAAAAAABAAAAICwWAAAAAAAALBYAAAAAAAABAAAAIPkVAAAAAAAA+RUAAAAAAAABAAAAIMoVAAAAAAAAyhUAAAAAAAABAAAAIJoVAAAAAAAAmhUAAAAAAAABAAAAIGgVAAAAAAAAaBUAAAAAAAABAAAAIA",
					"AQAAAAAAAAAIAAAAaBUAAAAAAABpFQAAAAAAAAAAAAAAAPC/mhUAAAAAAACbFQAAAAAAAAAAAAAAAPC/yhUAAAAAAADLFQAAAAAAAAAAAAAAAPC/+RUAAAAAAAD6FQAAAAAAAAAAAAAAAPC/LBYAAAAAAAAtFgAAAAAAAAAAAAAAAPC/ZRYAAAAAAABmFgAAAAAAAAAAAAAAAPC/lRYAAAAAAACWFgAAAAAAAAAAAAAAAPC/xxYAAAAAAADIFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1669,
					2,
					"right_delete",
					null,
					"AgAAANwSAAAAAAAA3BIAAAAAAAABAAAACtwSAAAAAAAA3BIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA3BIAAAAAAADcEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1677,
					2,
					"right_delete",
					null,
					"AgAAAPETAAAAAAAA8RMAAAAAAAABAAAACvETAAAAAAAA8RMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA8RMAAAAAAADxEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1688,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHcUAAAAAAAAeBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxQAAAAAAAB3FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1689,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHgUAAAAAAAAeRQAAAAAAAAAAAAAeRQAAAAAAACTFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBQAAAAAAAB4FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1699,
					1,
					"image_paste",
					null,
					"AQAAAJMUAAAAAAAApRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1701,
					1,
					"cut",
					null,
					"AQAAAJMUAAAAAAAAkxQAAAAAAAASAAAAb3JpZ2luYWxfZGF0X2V4cF8y",
					"AQAAAAAAAAABAAAApRQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1705,
					1,
					"image_paste",
					null,
					"AQAAAJMUAAAAAAAApRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAA4HFA"
				],
				[
					1708,
					1,
					"cut",
					null,
					"AQAAAEgUAAAAAAAASBQAAAAAAABeAAAACnZhbGlkYXRlX21vZGVsX2NvbXBhcmlzb24ocmVwcm9kdWNlZF9kYXRfZXhwXzIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgb3JpZ2luYWxfZGF0X2V4cF8yKQ",
					"AQAAAAAAAAABAAAAphQAAAAAAABIFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1711,
					1,
					"image_paste",
					null,
					"AQAAACgTAAAAAAAAhhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBMAAAAAAAAoEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1714,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIkTAAAAAAAAihMAAAAAAAAAAAAAihMAAAAAAACLEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRMAAAAAAACJEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1718,
					1,
					"left_delete",
					null,
					"AQAAANsUAAAAAAAA2xQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3BQAAAAAAADcFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1719,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANsUAAAAAAAA3BQAAAAAAAAAAAAA3BQAAAAAAAD5FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xQAAAAAAADbFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1723,
					1,
					"cut",
					null,
					"AQAAAKsUAAAAAAAAqxQAAAAAAABkAAAAdmFsaWRhdGVfc3RhaXJjYXNlX3Byb2NlZHVyZShvcmlnaW5hbF9kYXRfZXhwXzIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwcm9kdWNlZF9kYXRfZXhwXzIpCg",
					"AQAAAAAAAAABAAAAqxQAAAAAAAAPFQAAAAAAAAAAAAAAAAAA"
				],
				[
					1728,
					1,
					"image_paste",
					null,
					"AQAAAIgTAAAAAAAA7BMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBMAAAAAAACIEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1742,
					1,
					"cut",
					null,
					"AQAAADMUAAAAAAAAMxQAAAAAAACAAAAACnZhbGlkYXRlX29yaWdpbmFsX3ZzX3JlcHJvZHVjZWRfZGF0YV9leHBfMihvcmlnaW5hbF9kYXRfZXhwXzIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXByb2R1Y2VkX2RhdF9leHBfMik",
					"AQAAAAAAAAABAAAAsxQAAAAAAAAzFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1745,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFcSAAAAAAAAWBIAAAAAAAAAAAAAWBIAAAAAAABZEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVxIAAAAAAABXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1747,
					1,
					"image_paste",
					null,
					"AQAAAFgSAAAAAAAA2BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBIAAAAAAABYEgAAAAAAAAAAAAAAAAAA"
				],
				[
					1750,
					1,
					"cut",
					null,
					"AQAAAFgSAAAAAAAAWBIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAWBIAAAAAAABYEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1763,
					1,
					"left_delete",
					null,
					"AQAAAJ0UAAAAAAAAnRQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAnhQAAAAAAACeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1764,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ0UAAAAAAAAnhQAAAAAAAAAAAAAnhQAAAAAAAC3FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRQAAAAAAACdFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1789,
					1,
					"image_paste",
					null,
					"AQAAAIoUAAAAAAAAnhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihQAAAAAAACKFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1790,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ4UAAAAAAAAnxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhQAAAAAAACeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1791,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ8UAAAAAAAAoBQAAAAAAAAAAAAAoBQAAAAAAAC5FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxQAAAAAAACfFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1862,
					1,
					"cut",
					null,
					"AQAAALoVAAAAAAAAuhUAAAAAAABsAwAACiBvX2ZpZzMgPC0gYyhncmVwKCJhbGNvaG9sIiwgcm93bmFtZXMobG9hZGluZ3MpKSwKICAgICAgICAgICAgIGdyZXAoImFwYXRoeSIsIHJvd25hbWVzKGxvYWRpbmdzKSksCiAgICAgICAgICAgICBncmVwKCJ6dW5nIiwgcm93bmFtZXMobG9hZGluZ3MpKSwKICAgICAgICAgICAgIGdyZXAoImVhdCIsIHJvd25hbWVzKGxvYWRpbmdzKSksCiAgICAgICAgICAgICBncmVwKCJhbnhpZXR5Iiwgcm93bmFtZXMobG9hZGluZ3MpKSwKICAgICAgICAgICAgIGdyZXAoImltcHVsc2l2ZW5lc3MiLCByb3duYW1lcyhsb2FkaW5ncykpLAogICAgICAgICAgICAgZ3JlcCgib2NpciIsIHJvd25hbWVzKGxvYWRpbmdzKSksCiAgICAgICAgICAgICBncmVwKCJzY2hpem8iLCByb3duYW1lcyhsb2FkaW5ncykpLAogICAgICAgICAgICAgZ3JlcCgibGllYm93aXR6Iiwgcm93bmFtZXMobG9hZGluZ3MpKSkKCiAgbGVuZ3RoKGdyZXAoImFsY29ob2wiLCByb3duYW1lcyhsb2FkaW5ncykpKQogIGxlbmd0aChncmVwKCJhcGF0aHkiLCByb3duYW1lcyhsb2FkaW5ncykpKQogIGxlbmd0aChncmVwKCJ6dW5nIiwgcm93bmFtZXMobG9hZGluZ3MpKSkKICBsZW5ndGgoZ3JlcCgiZWF0Iiwgcm93bmFtZXMobG9hZGluZ3MpKSkKICBsZW5ndGgoZ3JlcCgiYW54aWV0eSIsIHJvd25hbWVzKGxvYWRpbmdzKSkpCiAgbGVuZ3RoKGdyZXAoImltcHVsc2l2ZW5lc3MiLCByb3duYW1lcyhsb2FkaW5ncykpKQogIGxlbmd0aChncmVwKCJvY2lyIiwgcm93bmFtZXMobG9hZGluZ3MpKSkKICBsZW5ndGgoZ3JlcCgic2NoaXpvIiwgcm93bmFtZXMobG9hZGluZ3MpKSkKICBsZW5ndGgoZ3JlcCgibGllYm93aXR6Iiwgcm93bmFtZXMobG9hZGluZ3MpKSkKCiAgbGVuZ3RoKG9fZmlnMykK",
					"AQAAAAAAAAABAAAAJhkAAAAAAAC6FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1865,
					1,
					"right_delete",
					null,
					"AQAAALUVAAAAAAAAtRUAAAAAAACJAAAACgoKCgoKICBwbG90KGxvYWRpbmdzW29fZmlnMywgMV0sIHR5cGUgPSAiaCIpCiAgcGxvdChsb2FkaW5nc1tvX2ZpZzMsIDJdLCB0eXBlID0gImgiKQogIHBsb3QobG9hZGluZ3Nbb19maWczLCAzXSwgdHlwZSA9ICJoIikKICBkZXYub2ZmKCk",
					"AQAAAAAAAAABAAAAtRUAAAAAAAA+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1894,
					1,
					"right_delete",
					null,
					"AQAAAMoMAAAAAAAAygwAAAAAAACqAAAACmxvYWRpbmdfY29ycmVsYXRpb25zIDwtIHZhbGlkYXRlX2xvYWRpbmdfc2ltaWxhcml0eV9leHBfMV92c18yKHJlcHJvZHVjZWRfZGF0X2V4cF8xLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXByb2R1Y2VkX2RhdF9leHBfMik",
					"AQAAAAAAAAABAAAAdA0AAAAAAADKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1897,
					1,
					"image_paste",
					null,
					"AgAAAC0NAAAAAAAARA0AAAAAAAAAAAAARA0AAAAAAABEDQAAAAAAABcAAABjKCJDb21wdWwiLCAiU1ciLCAiQUQiKQ",
					"AQAAAAAAAAABAAAALQ0AAAAAAABEDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1900,
					1,
					"cut",
					null,
					"AQAAADUNAAAAAAAANQ0AAAAAAAAIAAAAIkNvbXB1bCI",
					"AQAAAAAAAAABAAAANQ0AAAAAAAA9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1901,
					2,
					"right_delete",
					null,
					"AgAAADUNAAAAAAAANQ0AAAAAAAABAAAALDUNAAAAAAAANQ0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAANQ0AAAAAAAA1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1905,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADkNAAAAAAAAOg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQ0AAAAAAAA5DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1906,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADoNAAAAAAAAOw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOg0AAAAAAAA6DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1907,
					1,
					"image_paste",
					null,
					"AQAAADsNAAAAAAAAQw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOw0AAAAAAAA7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1912,
					2,
					"cut",
					null,
					"AgAAAMUTAAAAAAAAxRMAAAAAAAABAAAACsUTAAAAAAAAxRMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAxRMAAAAAAADFEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1925,
					1,
					"cut",
					null,
					"AQAAALQUAAAAAAAAtBQAAAAAAAAwAAAAIyB2aXN1YWxpemUgZmFjdG9yIGxvYWRpbmdzIGluIGJvdGggZXhwZXJpbWVudHMK",
					"AQAAAAAAAAABAAAA1xQAAAAAAADXFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1928,
					1,
					"cut",
					null,
					"AQAAAFAUAAAAAAAAUBQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAUBQAAAAAAABQFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1933,
					1,
					"cut",
					null,
					"AQAAAMMTAAAAAAAAwxMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAwxMAAAAAAADDEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1957,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAMoMAAAAAAAAywwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygwAAAAAAADKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1958,
					1,
					"insert",
					{
						"characters": " See"
					},
					"BAAAAMsMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADNDAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywwAAAAAAADLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1959,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8MAAAAAAAA0AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwwAAAAAAADPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1973,
					1,
					"insert",
					{
						"characters": "factor"
					},
					"BgAAANAMAAAAAAAA0QwAAAAAAAAAAAAA0QwAAAAAAADSDAAAAAAAAAAAAADSDAAAAAAAANMMAAAAAAAAAAAAANMMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADVDAAAAAAAAAAAAADVDAAAAAAAANYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AwAAAAAAADQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1974,
					1,
					"insert",
					{
						"characters": " lao"
					},
					"BAAAANYMAAAAAAAA1wwAAAAAAAAAAAAA1wwAAAAAAADYDAAAAAAAAAAAAADYDAAAAAAAANkMAAAAAAAAAAAAANkMAAAAAAAA2gwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gwAAAAAAADWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1975,
					2,
					"left_delete",
					null,
					"AgAAANkMAAAAAAAA2QwAAAAAAAABAAAAb9gMAAAAAAAA2AwAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA2gwAAAAAAADaDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1976,
					1,
					"insert",
					{
						"characters": "oading"
					},
					"BgAAANgMAAAAAAAA2QwAAAAAAAAAAAAA2QwAAAAAAADaDAAAAAAAAAAAAADaDAAAAAAAANsMAAAAAAAAAAAAANsMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADdDAAAAAAAAAAAAADdDAAAAAAAAN4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1977,
					1,
					"insert",
					{
						"characters": " plot"
					},
					"BQAAAN4MAAAAAAAA3wwAAAAAAAAAAAAA3wwAAAAAAADgDAAAAAAAAAAAAADgDAAAAAAAAOEMAAAAAAAAAAAAAOEMAAAAAAAA4gwAAAAAAAAAAAAA4gwAAAAAAADjDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gwAAAAAAADeDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1978,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAOMMAAAAAAAA5AwAAAAAAAAAAAAA5AwAAAAAAADlDAAAAAAAAAAAAADlDAAAAAAAAOYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wwAAAAAAADjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1979,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYMAAAAAAAA5wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gwAAAAAAADmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1980,
					1,
					"image_paste",
					null,
					"AQAAAOcMAAAAAAAA/wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wwAAAAAAADnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1981,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAP8MAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAABDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wwAAAAAAAD/DAAAAAAAAAAAAAAAAPC/"
				],
				[
					1982,
					1,
					"insert",
					{
						"characters": " below."
					},
					"BwAAAAENAAAAAAAAAg0AAAAAAAAAAAAAAg0AAAAAAAADDQAAAAAAAAAAAAADDQAAAAAAAAQNAAAAAAAAAAAAAAQNAAAAAAAABQ0AAAAAAAAAAAAABQ0AAAAAAAAGDQAAAAAAAAAAAAAGDQAAAAAAAAcNAAAAAAAAAAAAAAcNAAAAAAAACA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQ0AAAAAAAABDQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "Scripts/4_validation/validate_regression_exp_2.R",
			"settings":
			{
				"buffer_size": 4719,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"replace_next",
					null,
					"AQAAAO8CAAAAAAAA9wIAAAAAAAAHAAAAdGhkcmF3bA",
					"AQAAAAAAAAABAAAA7wIAAAAAAAD2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"replace_next",
					null,
					"AQAAAMQSAAAAAAAAzBIAAAAAAAAHAAAAdGhkcmF3bA",
					"AQAAAAAAAAABAAAAxBIAAAAAAADLEgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"cut",
					null,
					"AQAAAG4AAAAAAAAAbgAAAAAAAABWAQAAICAjIEluIEV4cGVyaW1lbnQgMSwgdGhlIHNhbWUgcmVncmVzc2lvbiBhbmFseXNpcyB0aGF0IHdhcyBkb25lIGluIEV4cGVyaW1lbnQKICAjIDIgYnV0IG9taXR0ZWQgaW4gdGhlIHB1YmxpY2F0aW9uIHdvdWxkIGhhdmUgbGVhZCB0byBhIGRpZmZlcmVudCByZXN1bHQ6CiAgIyBBRCBhbmQgU1cgYXJlIGFzc29jaWF0ZWQgd2l0aCBsb3dlciBtZWFuIGNvbmZpZGVuY2VzIHdoaWxlIHRoZXJlIGlzIG5vCiAgIyBldmlkZW5jZSBmb3IgYW4gYXNzb2NpYXRpb24gd2l0aCBDIChuZWdhdGl2ZSBhbmQgdGhlcmVmb3JlIG9wcG9zaXRlIHNpZ24KICAjIGFzIGNvbXBhcmVkIHdpdGggRXhwZXJpbWVudCAyKS4g",
					"AQAAAAAAAAABAAAAxAEAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"reindent",
					null,
					"AQAAAG4AAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAHAAAAAAAAAAcQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " TODO"
					},
					"BQAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAAdQAAAAAAAAB2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"right_delete",
					null,
					"AQAAAAwOAAAAAAAADA4AAAAAAACBAAAACiAgdmFsaWRhdGVfZmFjdG9yX2FuYWx5c2lzX292ZXJmaXQocmVwcm9kdWNlZF9kYXQgPSByZXByb2R1Y2VkX2RhdF9leHBfMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZlcmVuY2VfbG9hZGluZ3Mp",
					"AQAAAAAAAAABAAAAjQ4AAAAAAAAMDgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "Scripts/4_validation/validate_factor_analysis.R",
			"settings":
			{
				"buffer_size": 4958,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					646,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAAsGAAAAAAAADAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwYAAAAAAAALBgAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO8FAAAAAAAA8AUAAAAAAAAAAAAA8AUAAAAAAAALBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wUAAAAAAADvBQAAAAAAAP///////+9/"
				],
				[
					654,
					1,
					"image_paste",
					null,
					"AQAAAAsGAAAAAAAALwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwYAAAAAAAALBgAAAAAAAAAAAAAAqIVA"
				],
				[
					655,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC8GAAAAAAAAMAYAAAAAAAAAAAAAMAYAAAAAAABLBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwYAAAAAAAAvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"image_paste",
					null,
					"AQAAAEsGAAAAAAAAbwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG8GAAAAAAAAcAYAAAAAAAAAAAAAcAYAAAAAAACLBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwYAAAAAAABvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					658,
					1,
					"image_paste",
					null,
					"AQAAAIsGAAAAAAAArwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwYAAAAAAACLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK8GAAAAAAAAsAYAAAAAAAAAAAAAsAYAAAAAAADLBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwYAAAAAAACvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"image_paste",
					null,
					"AQAAAMsGAAAAAAAA7wYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywYAAAAAAADLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					661,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO8GAAAAAAAA8AYAAAAAAAAAAAAA8AYAAAAAAAALBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wYAAAAAAADvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"image_paste",
					null,
					"AQAAAAsHAAAAAAAALwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwcAAAAAAAALBwAAAAAAAAAAAAAAAPC/"
				],
				[
					663,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC8HAAAAAAAAMAcAAAAAAAAAAAAAMAcAAAAAAABLBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwcAAAAAAAAvBwAAAAAAAAAAAAAAAPC/"
				],
				[
					664,
					1,
					"image_paste",
					null,
					"AQAAAEsHAAAAAAAAbwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwcAAAAAAABLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG8HAAAAAAAAcAcAAAAAAAAAAAAAcAcAAAAAAACLBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwcAAAAAAABvBwAAAAAAAAAAAAAAAPC/"
				],
				[
					666,
					1,
					"image_paste",
					null,
					"AQAAAIsHAAAAAAAArwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwcAAAAAAACLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK8HAAAAAAAAsAcAAAAAAAAAAAAAsAcAAAAAAADLBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwcAAAAAAACvBwAAAAAAAAAAAAAAAPC/"
				],
				[
					668,
					1,
					"image_paste",
					null,
					"AQAAAMsHAAAAAAAA7wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					1,
					"insert",
					{
						"characters": "apathy"
					},
					"BwAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAOBgAAAAAAAAcAAABhbGNvaG9sDgYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQYAAAAAAAAUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAABoGAAAAAAAAGwYAAAAAAAAAAAAAGwYAAAAAAAAcBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					677,
					1,
					"right_delete",
					null,
					"AQAAABwGAAAAAAAAHAYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAHAYAAAAAAAAcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": "135"
					},
					"BAAAACAGAAAAAAAAIQYAAAAAAAAAAAAAIQYAAAAAAAAhBgAAAAAAAAMAAAAyMDghBgAAAAAAACIGAAAAAAAAAAAAACIGAAAAAAAAIwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAYAAAAAAAAjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"image_paste",
					null,
					"AgAAAE0GAAAAAAAAUQYAAAAAAAAAAAAAUQYAAAAAAABRBgAAAAAAAAcAAABhbGNvaG9s",
					"AQAAAAAAAAABAAAATQYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					710,
					1,
					"image_paste",
					null,
					"AgAAAIoGAAAAAAAAjQYAAAAAAAAAAAAAjQYAAAAAAACNBgAAAAAAAAcAAABhbGNvaG9s",
					"AQAAAAAAAAABAAAAigYAAAAAAACRBgAAAAAAAAAAAAAAAPC/"
				],
				[
					713,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAAFcGAAAAAAAAWAYAAAAAAAAAAAAAWAYAAAAAAABZBgAAAAAAAAAAAABZBgAAAAAAAFoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwYAAAAAAABXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABkGAAAAAAAAGgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQYAAAAAAAAZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": "     "
					},
					"BQAAAJcGAAAAAAAAmAYAAAAAAAAAAAAAmAYAAAAAAACZBgAAAAAAAAAAAACZBgAAAAAAAJoGAAAAAAAAAAAAAJoGAAAAAAAAmwYAAAAAAAAAAAAAmwYAAAAAAACcBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwYAAAAAAACXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"left_delete",
					null,
					"AQAAAJsGAAAAAAAAmwYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAnAYAAAAAAACcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					731,
					1,
					"image_paste",
					null,
					"AgAAAM4GAAAAAAAA1QYAAAAAAAAAAAAA1QYAAAAAAADVBgAAAAAAAAcAAABhbGNvaG9s",
					"AQAAAAAAAAABAAAAzgYAAAAAAADVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					741,
					1,
					"image_paste",
					null,
					"AgAAAA4HAAAAAAAAGwcAAAAAAAAAAAAAGwcAAAAAAAAbBwAAAAAAAAcAAABhbGNvaG9s",
					"AQAAAAAAAAABAAAADgcAAAAAAAAVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					1,
					"image_paste",
					null,
					"AgAAAFQHAAAAAAAAWAcAAAAAAAAAAAAAWAcAAAAAAABYBwAAAAAAAAcAAABhbGNvaG9s",
					"AQAAAAAAAAABAAAAVAcAAAAAAABbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					1,
					"image_paste",
					null,
					"AgAAAJEHAAAAAAAAlwcAAAAAAAAAAAAAlwcAAAAAAACXBwAAAAAAAAcAAABhbGNvaG9s",
					"AQAAAAAAAAABAAAAkQcAAAAAAACYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					775,
					1,
					"image_paste",
					null,
					"AgAAANAHAAAAAAAA2QcAAAAAAAAAAAAA2QcAAAAAAADZBwAAAAAAAAcAAABhbGNvaG9s",
					"AQAAAAAAAAABAAAA0AcAAAAAAADXBwAAAAAAAAAAAAAAAPC/"
				],
				[
					778,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAAF4HAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAABgBwAAAAAAAAAAAABgBwAAAAAAAGEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgcAAAAAAABeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					790,
					1,
					"insert",
					{
						"characters": "      "
					},
					"JAAAAGEHAAAAAAAAYgcAAAAAAAAAAAAA2wYAAAAAAADcBgAAAAAAAAAAAACbBgAAAAAAAJwGAAAAAAAAAAAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAGgYAAAAAAAAbBgAAAAAAAAAAAADaBQAAAAAAANsFAAAAAAAAAAAAAGcHAAAAAAAAaAcAAAAAAAAAAAAA4AYAAAAAAADhBgAAAAAAAAAAAACfBgAAAAAAAKAGAAAAAAAAAAAAAF4GAAAAAAAAXwYAAAAAAAAAAAAAHAYAAAAAAAAdBgAAAAAAAAAAAADbBQAAAAAAANwFAAAAAAAAAAAAAG0HAAAAAAAAbgcAAAAAAAAAAAAA5QYAAAAAAADmBgAAAAAAAAAAAACjBgAAAAAAAKQGAAAAAAAAAAAAAGEGAAAAAAAAYgYAAAAAAAAAAAAAHgYAAAAAAAAfBgAAAAAAAAAAAADcBQAAAAAAAN0FAAAAAAAAAAAAAHMHAAAAAAAAdAcAAAAAAAAAAAAA6gYAAAAAAADrBgAAAAAAAAAAAACnBgAAAAAAAKgGAAAAAAAAAAAAAGQGAAAAAAAAZQYAAAAAAAAAAAAAIAYAAAAAAAAhBgAAAAAAAAAAAADdBQAAAAAAAN4FAAAAAAAAAAAAAHkHAAAAAAAAegcAAAAAAAAAAAAA7wYAAAAAAADwBgAAAAAAAAAAAACrBgAAAAAAAKwGAAAAAAAAAAAAAGcGAAAAAAAAaAYAAAAAAAAAAAAAIgYAAAAAAAAjBgAAAAAAAAAAAADeBQAAAAAAAN8FAAAAAAAAAAAAAH8HAAAAAAAAgAcAAAAAAAAAAAAA9AYAAAAAAAD1BgAAAAAAAAAAAACvBgAAAAAAALAGAAAAAAAAAAAAAGoGAAAAAAAAawYAAAAAAAAAAAAAJAYAAAAAAAAlBgAAAAAAAAAAAADfBQAAAAAAAOAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAGAAAA2gUAAAAAAADaBQAAAAAAAAAAAAAAAPC/GgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/WwYAAAAAAABbBgAAAAAAAAAAAAAAAPC/mwYAAAAAAACbBgAAAAAAAAAAAAAAAPC/2wYAAAAAAADbBgAAAAAAAAAAAAAAAPC/YQcAAAAAAABhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					793,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAAMQHAAAAAAAAxQcAAAAAAAAAAAAAxQcAAAAAAADGBwAAAAAAAAAAAADGBwAAAAAAAMcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAcAAAAAAADEBwAAAAAAAAAAAAAAAPC/"
				],
				[
					795,
					1,
					"insert",
					{
						"characters": "    "
					},
					"CAAAAAkIAAAAAAAACggAAAAAAAAAAAAAxwcAAAAAAADIBwAAAAAAAAAAAAALCAAAAAAAAAwIAAAAAAAAAAAAAMgHAAAAAAAAyQcAAAAAAAAAAAAADQgAAAAAAAAOCAAAAAAAAAAAAADJBwAAAAAAAMoHAAAAAAAAAAAAAA8IAAAAAAAAEAgAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAPC/CQgAAAAAAAAJCAAAAAAAAAAAAAAAQH5A"
				],
				[
					799,
					1,
					"right_delete",
					null,
					"AQAAACkGAAAAAAAAKQYAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAKQYAAAAAAAApBgAAAAAAAAAAAAAAAPC/"
				],
				[
					801,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAACgGAAAAAAAAKQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAYAAAAAAAAoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					802,
					1,
					"right_delete",
					null,
					"AQAAACkGAAAAAAAAKQYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAKQYAAAAAAAApBgAAAAAAAAAAAAAAAPC/"
				],
				[
					806,
					1,
					"insert",
					{
						"characters": "99"
					},
					"AwAAACwGAAAAAAAALQYAAAAAAAAAAAAALQYAAAAAAAAtBgAAAAAAAAMAAAAxMzUtBgAAAAAAAC4GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAYAAAAAAAAvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					809,
					1,
					"insert",
					{
						"characters": "161"
					},
					"BAAAADAGAAAAAAAAMQYAAAAAAAAAAAAAMQYAAAAAAAAxBgAAAAAAAAMAAAAxMDkxBgAAAAAAADIGAAAAAAAAAAAAADIGAAAAAAAAMwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAYAAAAAAAAzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					811,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACwGAAAAAAAALQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAYAAAAAAAAsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					1,
					"insert",
					{
						"characters": " 62"
					},
					"BAAAADYGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA3BgAAAAAAAAMAAAAxNzY3BgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgYAAAAAAAA5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					822,
					1,
					"insert",
					{
						"characters": " 99"
					},
					"BAAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAABzBgAAAAAAAAMAAAAyMDhzBgAAAAAAAHQGAAAAAAAAAAAAAHQGAAAAAAAAdQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"image_paste",
					null,
					"AgAAAHIGAAAAAAAAfwYAAAAAAAAAAAAAfwYAAAAAAAB/BgAAAAAAAA0AAAAgOTksIDEwOSwgMTc2",
					"AQAAAAAAAAABAAAAcgYAAAAAAAB/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"insert",
					{
						"characters": "135"
					},
					"BAAAACwGAAAAAAAALQYAAAAAAAAAAAAALQYAAAAAAAAtBgAAAAAAAAMAAAAgOTktBgAAAAAAAC4GAAAAAAAAAAAAAC4GAAAAAAAALwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwYAAAAAAAAsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					850,
					3,
					"right_delete",
					null,
					"AwAAADEGAAAAAAAAMQYAAAAAAAABAAAAMTEGAAAAAAAAMQYAAAAAAAABAAAANjEGAAAAAAAAMQYAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAMQYAAAAAAAAxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": "135"
					},
					"AwAAADEGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAzBgAAAAAAAAAAAAAzBgAAAAAAADQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQYAAAAAAAAxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					3,
					"right_delete",
					null,
					"AwAAADYGAAAAAAAANgYAAAAAAAABAAAAIDYGAAAAAAAANgYAAAAAAAABAAAANjYGAAAAAAAANgYAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAANgYAAAAAAAA2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					855,
					1,
					"insert",
					{
						"characters": "135"
					},
					"AwAAADYGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgYAAAAAAAA2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					863,
					1,
					"insert",
					{
						"characters": "12"
					},
					"AwAAALgGAAAAAAAAuQYAAAAAAAAAAAAAuQYAAAAAAAC5BgAAAAAAAAMAAAAyMDi5BgAAAAAAALoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					864,
					2,
					"left_delete",
					null,
					"AgAAALkGAAAAAAAAuQYAAAAAAAABAAAAMrgGAAAAAAAAuAYAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAugYAAAAAAAC6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					1,
					"insert",
					{
						"characters": "217"
					},
					"AwAAALgGAAAAAAAAuQYAAAAAAAAAAAAAuQYAAAAAAAC6BgAAAAAAAAAAAAC6BgAAAAAAALsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAYAAAAAAAC4BgAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					1,
					"insert",
					{
						"characters": " 71"
					},
					"BAAAAL0GAAAAAAAAvgYAAAAAAAAAAAAAvgYAAAAAAAC+BgAAAAAAAAMAAAAxMDm+BgAAAAAAAL8GAAAAAAAAAAAAAL8GAAAAAAAAwAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQYAAAAAAADABgAAAAAAAAAAAAAAAPC/"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": " 36"
					},
					"BAAAAMIGAAAAAAAAwwYAAAAAAAAAAAAAwwYAAAAAAADDBgAAAAAAAAMAAAAxNzbDBgAAAAAAAMQGAAAAAAAAAAAAAMQGAAAAAAAAxQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgYAAAAAAADFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					879,
					1,
					"insert",
					{
						"characters": "19"
					},
					"AwAAAP4GAAAAAAAA/wYAAAAAAAAAAAAA/wYAAAAAAAD/BgAAAAAAAAMAAAAyMDj/BgAAAAAAAAAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gYAAAAAAAABBwAAAAAAAAAAAAAAAPC/"
				],
				[
					880,
					1,
					"left_delete",
					null,
					"AQAAAP8GAAAAAAAA/wYAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAPC/"
				],
				[
					881,
					1,
					"insert",
					{
						"characters": "76"
					},
					"AgAAAP8GAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAABBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wYAAAAAAAD/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					884,
					1,
					"insert",
					{
						"characters": " 29"
					},
					"BAAAAAMHAAAAAAAABAcAAAAAAAAAAAAABAcAAAAAAAAEBwAAAAAAAAMAAAAxMDkEBwAAAAAAAAUHAAAAAAAAAAAAAAUHAAAAAAAABgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwcAAAAAAAAGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"insert",
					{
						"characters": " 33"
					},
					"BAAAAAgHAAAAAAAACQcAAAAAAAAAAAAACQcAAAAAAAAJBwAAAAAAAAMAAAAxNzYJBwAAAAAAAAoHAAAAAAAAAAAAAAoHAAAAAAAACwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAcAAAAAAAALBwAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					1,
					"insert",
					{
						"characters": "116"
					},
					"BAAAAEQHAAAAAAAARQcAAAAAAAAAAAAARQcAAAAAAABFBwAAAAAAAAMAAAAyMDhFBwAAAAAAAEYHAAAAAAAAAAAAAEYHAAAAAAAARwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAcAAAAAAABHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"insert",
					{
						"characters": "56"
					},
					"AwAAAEkHAAAAAAAASgcAAAAAAAAAAAAASgcAAAAAAABKBwAAAAAAAAMAAAAxMDlKBwAAAAAAAEsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQcAAAAAAABMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					905,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkHAAAAAAAASgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQcAAAAAAABJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					909,
					1,
					"insert",
					{
						"characters": "142"
					},
					"BAAAAE4HAAAAAAAATwcAAAAAAAAAAAAATwcAAAAAAABPBwAAAAAAAAMAAAAxNzZPBwAAAAAAAFAHAAAAAAAAAAAAAFAHAAAAAAAAUQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgcAAAAAAABRBwAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"insert",
					{
						"characters": "213"
					},
					"BAAAAIoHAAAAAAAAiwcAAAAAAAAAAAAAiwcAAAAAAACLBwAAAAAAAAMAAAAyMDiLBwAAAAAAAIwHAAAAAAAAAAAAAIwHAAAAAAAAjQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQcAAAAAAACKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					917,
					1,
					"insert",
					{
						"characters": "13"
					},
					"AwAAAI8HAAAAAAAAkAcAAAAAAAAAAAAAkAcAAAAAAACQBwAAAAAAAAMAAAAxMDmQBwAAAAAAAJEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwcAAAAAAACSBwAAAAAAAAAAAAAAAPC/"
				],
				[
					918,
					1,
					"left_delete",
					null,
					"AQAAAJAHAAAAAAAAkAcAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAkQcAAAAAAACRBwAAAAAAAAAAAAAAAPC/"
				],
				[
					919,
					1,
					"insert",
					{
						"characters": "13"
					},
					"AgAAAJAHAAAAAAAAkQcAAAAAAAAAAAAAkQcAAAAAAACSBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAcAAAAAAACQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					921,
					3,
					"right_delete",
					null,
					"AwAAAJQHAAAAAAAAlAcAAAAAAAABAAAAMZQHAAAAAAAAlAcAAAAAAAABAAAAN5QHAAAAAAAAlAcAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAlAcAAAAAAACUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					922,
					1,
					"insert",
					{
						"characters": " 33"
					},
					"AwAAAJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACWBwAAAAAAAAAAAACWBwAAAAAAAJcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAcAAAAAAACUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"insert",
					{
						"characters": "207"
					},
					"BAAAANAHAAAAAAAA0QcAAAAAAAAAAAAA0QcAAAAAAADRBwAAAAAAAAMAAAAyMDjRBwAAAAAAANIHAAAAAAAAAAAAANIHAAAAAAAA0wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AcAAAAAAADTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					932,
					1,
					"insert",
					{
						"characters": "217"
					},
					"BAAAANUHAAAAAAAA1gcAAAAAAAAAAAAA1gcAAAAAAADWBwAAAAAAAAMAAAAxMDnWBwAAAAAAANcHAAAAAAAAAAAAANcHAAAAAAAA2AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QcAAAAAAADYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"insert",
					{
						"characters": " 8"
					},
					"AwAAANoHAAAAAAAA2wcAAAAAAAAAAAAA2wcAAAAAAADbBwAAAAAAAAMAAAAxNzbbBwAAAAAAANwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gcAAAAAAADdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					937,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAANsHAAAAAAAA3AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wcAAAAAAADbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"insert",
					{
						"characters": "166"
					},
					"BAAAACAIAAAAAAAAIQgAAAAAAAAAAAAAIQgAAAAAAAAhCAAAAAAAAAMAAAAxNzYhCAAAAAAAACIIAAAAAAAAAAAAACIIAAAAAAAAIwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwgAAAAAAAAgCAAAAAAAAAAAAAAAAPC/"
				],
				[
					946,
					1,
					"insert",
					{
						"characters": "102"
					},
					"BAAAABsIAAAAAAAAHAgAAAAAAAAAAAAAHAgAAAAAAAAcCAAAAAAAAAMAAAAxMDkcCAAAAAAAAB0IAAAAAAAAAAAAAB0IAAAAAAAAHggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHggAAAAAAAAbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					952,
					1,
					"insert",
					{
						"characters": " 77"
					},
					"BAAAABYIAAAAAAAAFwgAAAAAAAAAAAAAFwgAAAAAAAAXCAAAAAAAAAMAAAAyMDgXCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAGQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFggAAAAAAAAZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"left_delete",
					null,
					"AQAAABgIAAAAAAAAGAgAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAGQgAAAAAAAAZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					954,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAABgIAAAAAAAAGQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					956,
					1,
					"insert",
					{
						"characters": "?2"
					},
					"EgAAABkIAAAAAAAAGggAAAAAAAAAAAAA0wcAAAAAAADUBwAAAAAAAAAAAACNBwAAAAAAAI4HAAAAAAAAAAAAAEcHAAAAAAAASAcAAAAAAAAAAAAAAQcAAAAAAAACBwAAAAAAAAAAAAC7BgAAAAAAALwGAAAAAAAAAAAAAHUGAAAAAAAAdgYAAAAAAAAAAAAALwYAAAAAAAAwBgAAAAAAAAAAAADpBQAAAAAAAOoFAAAAAAAAAAAAACIIAAAAAAAAIwgAAAAAAAAAAAAA2wcAAAAAAADcBwAAAAAAAAAAAACUBwAAAAAAAJUHAAAAAAAAAAAAAE0HAAAAAAAATgcAAAAAAAAAAAAABgcAAAAAAAAHBwAAAAAAAAAAAAC/BgAAAAAAAMAGAAAAAAAAAAAAAHgGAAAAAAAAeQYAAAAAAAAAAAAAMQYAAAAAAAAyBgAAAAAAAAAAAADqBQAAAAAAAOsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAJAAAA6QUAAAAAAADpBQAAAAAAAAAAAAAAmINALwYAAAAAAAAvBgAAAAAAAAAAAAAAmINAdQYAAAAAAAB1BgAAAAAAAAAAAAAAmINAuwYAAAAAAAC7BgAAAAAAAAAAAAAAmINAAQcAAAAAAAABBwAAAAAAAAAAAAAAmINARwcAAAAAAABHBwAAAAAAAAAAAAAAmINAjQcAAAAAAACNBwAAAAAAAAAAAAAAmINA0wcAAAAAAADTBwAAAAAAAAAAAAAAmINAGQgAAAAAAAAZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					957,
					2,
					"left_delete",
					null,
					"EgAAACoIAAAAAAAAKggAAAAAAAABAAAAMuIHAAAAAAAA4gcAAAAAAAABAAAAMpoHAAAAAAAAmgcAAAAAAAABAAAAMlIHAAAAAAAAUgcAAAAAAAABAAAAMgoHAAAAAAAACgcAAAAAAAABAAAAMsIGAAAAAAAAwgYAAAAAAAABAAAAMnoGAAAAAAAAegYAAAAAAAABAAAAMjIGAAAAAAAAMgYAAAAAAAABAAAAMuoFAAAAAAAA6gUAAAAAAAABAAAAMiEIAAAAAAAAIQgAAAAAAAABAAAAP9oHAAAAAAAA2gcAAAAAAAABAAAAP5MHAAAAAAAAkwcAAAAAAAABAAAAP0wHAAAAAAAATAcAAAAAAAABAAAAPwUHAAAAAAAABQcAAAAAAAABAAAAP74GAAAAAAAAvgYAAAAAAAABAAAAP3cGAAAAAAAAdwYAAAAAAAABAAAAPzAGAAAAAAAAMAYAAAAAAAABAAAAP+kFAAAAAAAA6QUAAAAAAAABAAAAPw",
					"AQAAAAAAAAAJAAAA6wUAAAAAAADrBQAAAAAAAAAAAAAAAPC/MwYAAAAAAAAzBgAAAAAAAAAAAAAAAPC/ewYAAAAAAAB7BgAAAAAAAAAAAAAAAPC/wwYAAAAAAADDBgAAAAAAAAAAAAAAAPC/CwcAAAAAAAALBwAAAAAAAAAAAAAAAPC/UwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/mwcAAAAAAACbBwAAAAAAAAAAAAAAAPC/4wcAAAAAAADjBwAAAAAAAAAAAAAAAPC/KwgAAAAAAAArCAAAAAAAAAAAAAAAAPC/"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": "/255"
					},
					"JAAAABkIAAAAAAAAGggAAAAAAAAAAAAA0wcAAAAAAADUBwAAAAAAAAAAAACNBwAAAAAAAI4HAAAAAAAAAAAAAEcHAAAAAAAASAcAAAAAAAAAAAAAAQcAAAAAAAACBwAAAAAAAAAAAAC7BgAAAAAAALwGAAAAAAAAAAAAAHUGAAAAAAAAdgYAAAAAAAAAAAAALwYAAAAAAAAwBgAAAAAAAAAAAADpBQAAAAAAAOoFAAAAAAAAAAAAACIIAAAAAAAAIwgAAAAAAAAAAAAA2wcAAAAAAADcBwAAAAAAAAAAAACUBwAAAAAAAJUHAAAAAAAAAAAAAE0HAAAAAAAATgcAAAAAAAAAAAAABgcAAAAAAAAHBwAAAAAAAAAAAAC/BgAAAAAAAMAGAAAAAAAAAAAAAHgGAAAAAAAAeQYAAAAAAAAAAAAAMQYAAAAAAAAyBgAAAAAAAAAAAADqBQAAAAAAAOsFAAAAAAAAAAAAACsIAAAAAAAALAgAAAAAAAAAAAAA4wcAAAAAAADkBwAAAAAAAAAAAACbBwAAAAAAAJwHAAAAAAAAAAAAAFMHAAAAAAAAVAcAAAAAAAAAAAAACwcAAAAAAAAMBwAAAAAAAAAAAADDBgAAAAAAAMQGAAAAAAAAAAAAAHsGAAAAAAAAfAYAAAAAAAAAAAAAMwYAAAAAAAA0BgAAAAAAAAAAAADrBQAAAAAAAOwFAAAAAAAAAAAAADQIAAAAAAAANQgAAAAAAAAAAAAA6wcAAAAAAADsBwAAAAAAAAAAAACiBwAAAAAAAKMHAAAAAAAAAAAAAFkHAAAAAAAAWgcAAAAAAAAAAAAAEAcAAAAAAAARBwAAAAAAAAAAAADHBgAAAAAAAMgGAAAAAAAAAAAAAH4GAAAAAAAAfwYAAAAAAAAAAAAANQYAAAAAAAA2BgAAAAAAAAAAAADsBQAAAAAAAO0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAJAAAA6QUAAAAAAADpBQAAAAAAAAAAAAAAAPC/LwYAAAAAAAAvBgAAAAAAAAAAAAAAAPC/dQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/uwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/AQcAAAAAAAABBwAAAAAAAAAAAAAAAPC/RwcAAAAAAABHBwAAAAAAAAAAAAAAAPC/jQcAAAAAAACNBwAAAAAAAAAAAAAAAPC/0wcAAAAAAADTBwAAAAAAAAAAAAAAAPC/GQgAAAAAAAAZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					960,
					1,
					"insert",
					{
						"characters": "/255"
					},
					"JAAAAEIIAAAAAAAAQwgAAAAAAAAAAAAA+AcAAAAAAAD5BwAAAAAAAAAAAACuBwAAAAAAAK8HAAAAAAAAAAAAAGQHAAAAAAAAZQcAAAAAAAAAAAAAGgcAAAAAAAAbBwAAAAAAAAAAAADQBgAAAAAAANEGAAAAAAAAAAAAAIYGAAAAAAAAhwYAAAAAAAAAAAAAPAYAAAAAAAA9BgAAAAAAAAAAAADyBQAAAAAAAPMFAAAAAAAAAAAAAEsIAAAAAAAATAgAAAAAAAAAAAAAAAgAAAAAAAABCAAAAAAAAAAAAAC1BwAAAAAAALYHAAAAAAAAAAAAAGoHAAAAAAAAawcAAAAAAAAAAAAAHwcAAAAAAAAgBwAAAAAAAAAAAADUBgAAAAAAANUGAAAAAAAAAAAAAIkGAAAAAAAAigYAAAAAAAAAAAAAPgYAAAAAAAA/BgAAAAAAAAAAAADzBQAAAAAAAPQFAAAAAAAAAAAAAFQIAAAAAAAAVQgAAAAAAAAAAAAACAgAAAAAAAAJCAAAAAAAAAAAAAC8BwAAAAAAAL0HAAAAAAAAAAAAAHAHAAAAAAAAcQcAAAAAAAAAAAAAJAcAAAAAAAAlBwAAAAAAAAAAAADYBgAAAAAAANkGAAAAAAAAAAAAAIwGAAAAAAAAjQYAAAAAAAAAAAAAQAYAAAAAAABBBgAAAAAAAAAAAAD0BQAAAAAAAPUFAAAAAAAAAAAAAF0IAAAAAAAAXggAAAAAAAAAAAAAEAgAAAAAAAARCAAAAAAAAAAAAADDBwAAAAAAAMQHAAAAAAAAAAAAAHYHAAAAAAAAdwcAAAAAAAAAAAAAKQcAAAAAAAAqBwAAAAAAAAAAAADcBgAAAAAAAN0GAAAAAAAAAAAAAI8GAAAAAAAAkAYAAAAAAAAAAAAAQgYAAAAAAABDBgAAAAAAAAAAAAD1BQAAAAAAAPYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAJAAAA8gUAAAAAAADyBQAAAAAAAAAAAAAAAPC/PAYAAAAAAAA8BgAAAAAAAAAAAAAAAPC/hgYAAAAAAACGBgAAAAAAAAAAAAAAAPC/0AYAAAAAAADQBgAAAAAAAAAAAAAAAPC/GgcAAAAAAAAaBwAAAAAAAAAAAAAAAPC/ZAcAAAAAAABkBwAAAAAAAAAAAAAAAPC/rgcAAAAAAACuBwAAAAAAAAAAAAAAAPC/+AcAAAAAAAD4BwAAAAAAAAAAAAAAAPC/QggAAAAAAABCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					962,
					1,
					"insert",
					{
						"characters": "255"
					},
					"GwAAAGsIAAAAAAAAbAgAAAAAAAAAAAAAHQgAAAAAAAAeCAAAAAAAAAAAAADPBwAAAAAAANAHAAAAAAAAAAAAAIEHAAAAAAAAggcAAAAAAAAAAAAAMwcAAAAAAAA0BwAAAAAAAAAAAADlBgAAAAAAAOYGAAAAAAAAAAAAAJcGAAAAAAAAmAYAAAAAAAAAAAAASQYAAAAAAABKBgAAAAAAAAAAAAD7BQAAAAAAAPwFAAAAAAAAAAAAAHQIAAAAAAAAdQgAAAAAAAAAAAAAJQgAAAAAAAAmCAAAAAAAAAAAAADWBwAAAAAAANcHAAAAAAAAAAAAAIcHAAAAAAAAiAcAAAAAAAAAAAAAOAcAAAAAAAA5BwAAAAAAAAAAAADpBgAAAAAAAOoGAAAAAAAAAAAAAJoGAAAAAAAAmwYAAAAAAAAAAAAASwYAAAAAAABMBgAAAAAAAAAAAAD8BQAAAAAAAP0FAAAAAAAAAAAAAH0IAAAAAAAAfggAAAAAAAAAAAAALQgAAAAAAAAuCAAAAAAAAAAAAADdBwAAAAAAAN4HAAAAAAAAAAAAAI0HAAAAAAAAjgcAAAAAAAAAAAAAPQcAAAAAAAA+BwAAAAAAAAAAAADtBgAAAAAAAO4GAAAAAAAAAAAAAJ0GAAAAAAAAngYAAAAAAAAAAAAATQYAAAAAAABOBgAAAAAAAAAAAAD9BQAAAAAAAP4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAJAAAA+wUAAAAAAAD7BQAAAAAAAAAAAAAAAPC/SQYAAAAAAABJBgAAAAAAAAAAAAAAAPC/lwYAAAAAAACXBgAAAAAAAAAAAAAAAPC/5QYAAAAAAADlBgAAAAAAAAAAAAAAAPC/MwcAAAAAAAAzBwAAAAAAAAAAAAAAAPC/gQcAAAAAAACBBwAAAAAAAAAAAAAAAPC/zwcAAAAAAADPBwAAAAAAAAAAAAAAAPC/HQgAAAAAAAAdCAAAAAAAAAAAAAAAAPC/awgAAAAAAABrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					963,
					3,
					"left_delete",
					null,
					"GwAAAIUIAAAAAAAAhQgAAAAAAAABAAAANTQIAAAAAAAANAgAAAAAAAABAAAANeMHAAAAAAAA4wcAAAAAAAABAAAANZIHAAAAAAAAkgcAAAAAAAABAAAANUEHAAAAAAAAQQcAAAAAAAABAAAANfAGAAAAAAAA8AYAAAAAAAABAAAANZ8GAAAAAAAAnwYAAAAAAAABAAAANU4GAAAAAAAATgYAAAAAAAABAAAANf0FAAAAAAAA/QUAAAAAAAABAAAANXwIAAAAAAAAfAgAAAAAAAABAAAANSwIAAAAAAAALAgAAAAAAAABAAAANdwHAAAAAAAA3AcAAAAAAAABAAAANYwHAAAAAAAAjAcAAAAAAAABAAAANTwHAAAAAAAAPAcAAAAAAAABAAAANewGAAAAAAAA7AYAAAAAAAABAAAANZwGAAAAAAAAnAYAAAAAAAABAAAANUwGAAAAAAAATAYAAAAAAAABAAAANfwFAAAAAAAA/AUAAAAAAAABAAAANXMIAAAAAAAAcwgAAAAAAAABAAAAMiQIAAAAAAAAJAgAAAAAAAABAAAAMtUHAAAAAAAA1QcAAAAAAAABAAAAMoYHAAAAAAAAhgcAAAAAAAABAAAAMjcHAAAAAAAANwcAAAAAAAABAAAAMugGAAAAAAAA6AYAAAAAAAABAAAAMpkGAAAAAAAAmQYAAAAAAAABAAAAMkoGAAAAAAAASgYAAAAAAAABAAAAMvsFAAAAAAAA+wUAAAAAAAABAAAAMg",
					"AQAAAAAAAAAJAAAA/gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/TwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/oAYAAAAAAACgBgAAAAAAAAAAAAAAAPC/8QYAAAAAAADxBgAAAAAAAAAAAAAAAPC/QgcAAAAAAABCBwAAAAAAAAAAAAAAAPC/kwcAAAAAAACTBwAAAAAAAAAAAAAAAPC/5AcAAAAAAADkBwAAAAAAAAAAAAAAAPC/NQgAAAAAAAA1CAAAAAAAAAAAAAAAAPC/hggAAAAAAACGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "/255"
					},
					"JAAAAGsIAAAAAAAAbAgAAAAAAAAAAAAAHQgAAAAAAAAeCAAAAAAAAAAAAADPBwAAAAAAANAHAAAAAAAAAAAAAIEHAAAAAAAAggcAAAAAAAAAAAAAMwcAAAAAAAA0BwAAAAAAAAAAAADlBgAAAAAAAOYGAAAAAAAAAAAAAJcGAAAAAAAAmAYAAAAAAAAAAAAASQYAAAAAAABKBgAAAAAAAAAAAAD7BQAAAAAAAPwFAAAAAAAAAAAAAHQIAAAAAAAAdQgAAAAAAAAAAAAAJQgAAAAAAAAmCAAAAAAAAAAAAADWBwAAAAAAANcHAAAAAAAAAAAAAIcHAAAAAAAAiAcAAAAAAAAAAAAAOAcAAAAAAAA5BwAAAAAAAAAAAADpBgAAAAAAAOoGAAAAAAAAAAAAAJoGAAAAAAAAmwYAAAAAAAAAAAAASwYAAAAAAABMBgAAAAAAAAAAAAD8BQAAAAAAAP0FAAAAAAAAAAAAAH0IAAAAAAAAfggAAAAAAAAAAAAALQgAAAAAAAAuCAAAAAAAAAAAAADdBwAAAAAAAN4HAAAAAAAAAAAAAI0HAAAAAAAAjgcAAAAAAAAAAAAAPQcAAAAAAAA+BwAAAAAAAAAAAADtBgAAAAAAAO4GAAAAAAAAAAAAAJ0GAAAAAAAAngYAAAAAAAAAAAAATQYAAAAAAABOBgAAAAAAAAAAAAD9BQAAAAAAAP4FAAAAAAAAAAAAAIYIAAAAAAAAhwgAAAAAAAAAAAAANQgAAAAAAAA2CAAAAAAAAAAAAADkBwAAAAAAAOUHAAAAAAAAAAAAAJMHAAAAAAAAlAcAAAAAAAAAAAAAQgcAAAAAAABDBwAAAAAAAAAAAADxBgAAAAAAAPIGAAAAAAAAAAAAAKAGAAAAAAAAoQYAAAAAAAAAAAAATwYAAAAAAABQBgAAAAAAAAAAAAD+BQAAAAAAAP8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAJAAAA+wUAAAAAAAD7BQAAAAAAAAAAAAAAAPC/SQYAAAAAAABJBgAAAAAAAAAAAAAAAPC/lwYAAAAAAACXBgAAAAAAAAAAAAAAAPC/5QYAAAAAAADlBgAAAAAAAAAAAAAAAPC/MwcAAAAAAAAzBwAAAAAAAAAAAAAAAPC/gQcAAAAAAACBBwAAAAAAAAAAAAAAAPC/zwcAAAAAAADPBwAAAAAAAAAAAAAAAPC/HQgAAAAAAAAdCAAAAAAAAAAAAAAAAPC/awgAAAAAAABrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					968,
					1,
					"cut",
					null,
					"AQAAAJQFAAAAAAAAlAUAAAAAAAAcAAAAeCA8LSBjKCJhLmIiLCAiYS5jIiwgImQuYSIpCg",
					"AQAAAAAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					974,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJMIAAAAAAAAlAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwgAAAAAAACTCAAAAAAAAAAAAAAAAPC/"
				],
				[
					976,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAJQIAAAAAAAAlAgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAlAgAAAAAAACUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					990,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJMFAAAAAAAAlAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwUAAAAAAACTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					991,
					1,
					"image_paste",
					null,
					"AQAAAJQFAAAAAAAApgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAUAAAAAAACUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					997,
					1,
					"image_paste",
					null,
					"AgAAAMcIAAAAAAAA2QgAAAAAAAAAAAAA2QgAAAAAAADZCAAAAAAAAAEAAAB4",
					"AQAAAAAAAAABAAAAxwgAAAAAAADICAAAAAAAAAAAAAAAAPC/"
				],
				[
					1000,
					1,
					"left_delete",
					null,
					"AQAAAIcIAAAAAAAAhwgAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAiAgAAAAAAACICAAAAAAAAP///////+9/"
				],
				[
					1014,
					1,
					"right_delete",
					null,
					"AQAAAF0IAAAAAAAAXQgAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAAXQgAAAAAAABhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1019,
					1,
					"replace_next",
					null,
					"AQAAALQHAAAAAAAAtAcAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAAtAcAAAAAAAC4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1020,
					1,
					"replace_next",
					null,
					"AQAAAAQIAAAAAAAABAgAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAABAgAAAAAAAAICAAAAAAAAAAAAAAAAPC/"
				],
				[
					1021,
					1,
					"replace_next",
					null,
					"AQAAAMsFAAAAAAAAywUAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAAywUAAAAAAADPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1022,
					1,
					"replace_next",
					null,
					"AQAAABgGAAAAAAAAGAYAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAAGAYAAAAAAAAcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1023,
					1,
					"replace_next",
					null,
					"AQAAAGQGAAAAAAAAZAYAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAAZAYAAAAAAABoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1024,
					1,
					"replace_next",
					null,
					"AQAAALEGAAAAAAAAsQYAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAAsQYAAAAAAAC1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					1,
					"replace_next",
					null,
					"AQAAAAMHAAAAAAAAAwcAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAAAwcAAAAAAAAHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1026,
					1,
					"replace_next",
					null,
					"AQAAAFcHAAAAAAAAVwcAAAAAAAAEAAAAXFwuLg",
					"AQAAAAAAAAABAAAAVwcAAAAAAABbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": "colors"
					},
					"BgAAAJoIAAAAAAAAmwgAAAAAAAAAAAAAmwgAAAAAAACcCAAAAAAAAAAAAACcCAAAAAAAAJ0IAAAAAAAAAAAAAJ0IAAAAAAAAnggAAAAAAAAAAAAAnggAAAAAAACfCAAAAAAAAAAAAACfCAAAAAAAAKAIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmggAAAAAAACaCAAAAAAAAAAAAAAAAAAA"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAKAIAAAAAAAAoQgAAAAAAAAAAAAAoQgAAAAAAACjCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAgAAAAAAACgCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1032,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKMIAAAAAAAApAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowgAAAAAAACjCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1036,
					1,
					"cut",
					null,
					"AQAAAJQFAAAAAAAAlAUAAAAAAAA7AwAAcm93bmFtZXMobG9hZGluZ3MpCmNvbnZlcnNpb25fbWFwIDwtIG1hdHJpeChjKCJeYWxjb2hvbCsiICAgICAgLCByZ2IoMjA4LzI1NSwgMTA5LzI1NSwgMTc2LzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICJeYXBhdGh5KyIgICAgICAgLCByZ2IoMTM1LzI1NSwgMTM1LzI1NSwgMTM1LzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICJeenVuZysiICAgICAgICAgLCByZ2IoIDk5LzI1NSwgMTYxLzI1NSwgIDYyLzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICJeZWF0KyIgICAgICAgICAgLCByZ2IoMjE3LzI1NSwgIDcxLzI1NSwgIDM2LzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICJeYW54aWV0eSsiICAgICAgLCByZ2IoMTc2LzI1NSwgIDI5LzI1NSwgIDMzLzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICJeaW1wdWxzaXZlbmVzcysiLCByZ2IoMTE2LzI1NSwgIDU2LzI1NSwgMTQyLzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICJeb2NpcisiICAgICAgICAgLCByZ2IoMjEzLzI1NSwgMTEzLzI1NSwgIDMzLzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICJec2NoaXpvKyIgICAgICAgLCByZ2IoMjA3LzI1NSwgMjE3LzI1NSwgIDU4LzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICJebGllYm93aXR6KyIgICAgLCByZ2IoIDcyLzI1NSwgMTAyLzI1NSwgMTY2LzI1NSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwgbmNvbCA9IDIsIGJ5cm93ID0gVFJVRSkKY29sb3JzIDwtIHJlZ19tYXAocm93bmFtZXMobG9hZGluZ3MpLCBjb252ZXJzaW9uX21hcCk",
					"AQAAAAAAAAABAAAAzwgAAAAAAACUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1039,
					1,
					"image_paste",
					null,
					"AgAAALsFAAAAAAAA9ggAAAAAAAAAAAAA9ggAAAAAAAD2CAAAAAAAAM4BAABjb2xvcnMgPC0gcm93bmFtZXMobG9hZGluZ3MpCiAgZ3JlcCgiYWxjb2hvbCIsIHJvd25hbWVzKGxvYWRpbmdzKSksCiAgICAgICAgICAgICBncmVwKCJhcGF0aHkiLCByb3duYW1lcyhsb2FkaW5ncykpLAogICAgICAgICAgICAgZ3JlcCgienVuZyIsIHJvd25hbWVzKGxvYWRpbmdzKSksCiAgICAgICAgICAgICBncmVwKCJlYXQiLCByb3duYW1lcyhsb2FkaW5ncykpLAogICAgICAgICAgICAgZ3JlcCgiYW54aWV0eSIsIHJvd25hbWVzKGxvYWRpbmdzKSksCiAgICAgICAgICAgICBncmVwKCJpbXB1bHNpdmVuZXNzIiwgcm93bmFtZXMobG9hZGluZ3MpKSwKICAgICAgICAgICAgIGdyZXAoIm9jaXIiLCByb3duYW1lcyhsb2FkaW5ncykpLAogICAgICAgICAgICAgZ3JlcCgic2NoaXpvIiwgcm93bmFtZXMobG9hZGluZ3MpKSwKICAgICAgICAgICAgIGdyZXAoImxpZWJvd2l0eiIsIHJvd25hbWVzKGxvYWRpbmdzKSk",
					"AQAAAAAAAAABAAAAiQcAAAAAAAC7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1042,
					1,
					"indent",
					null,
					"CwAAAM4FAAAAAAAA0AUAAAAAAAAAAAAAHgYAAAAAAAAgBgAAAAAAAAAAAABuBgAAAAAAAHAGAAAAAAAAAAAAAL4GAAAAAAAAwAYAAAAAAAAAAAAADgcAAAAAAAAQBwAAAAAAAAAAAABeBwAAAAAAAGAHAAAAAAAAAAAAAK4HAAAAAAAAsAcAAAAAAAAAAAAA/gcAAAAAAAAACAAAAAAAAAAAAABOCAAAAAAAAFAIAAAAAAAAAAAAAJ0IAAAAAAAAnwgAAAAAAAAAAAAA1QgAAAAAAADXCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9ggAAAAAAADOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1053,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAwJAAAAAAAADQkAAAAAAAAAAAAADQkAAAAAAAAPCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAkAAAAAAAAMCQAAAAAAAP///////+9/"
				],
				[
					1054,
					1,
					"image_paste",
					null,
					"AQAAAA8JAAAAAAAAFQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwkAAAAAAAAPCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1070,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJAFAAAAAAAAkQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAUAAAAAAACQBQAAAAAAAAAAAAAAMHFA"
				],
				[
					1071,
					1,
					"insert",
					{
						"characters": " color"
					},
					"BgAAAJEFAAAAAAAAkgUAAAAAAAAAAAAAkgUAAAAAAACTBQAAAAAAAAAAAACTBQAAAAAAAJQFAAAAAAAAAAAAAJQFAAAAAAAAlQUAAAAAAAAAAAAAlQUAAAAAAACWBQAAAAAAAAAAAACWBQAAAAAAAJcFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQUAAAAAAACRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1072,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAJcFAAAAAAAAmAUAAAAAAAAAAAAAmAUAAAAAAACZBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwUAAAAAAACXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1073,
					2,
					"left_delete",
					null,
					"AgAAAJgFAAAAAAAAmAUAAAAAAAABAAAAc5cFAAAAAAAAlwUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAmQUAAAAAAACZBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1074,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAJcFAAAAAAAAmAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwUAAAAAAACXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAJgFAAAAAAAAmQUAAAAAAAAAAAAAmQUAAAAAAACbBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAUAAAAAAACYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1076,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsFAAAAAAAAnAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwUAAAAAAACbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1077,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAJkFAAAAAAAAmQUAAAAAAAADAAAAPC0gkgUAAAAAAACSBQAAAAAAAAcAAABjb2xvcnMg",
					"AQAAAAAAAAABAAAAnAUAAAAAAACcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1078,
					1,
					"insert",
					{
						"characters": "col"
					},
					"AwAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACUBQAAAAAAAAAAAACUBQAAAAAAAJUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgUAAAAAAACSBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1079,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJUFAAAAAAAAlgUAAAAAAAAAAAAAlgUAAAAAAACXBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQUAAAAAAACVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1080,
					1,
					"insert",
					{
						"characters": " get_colors"
					},
					"CwAAAJcFAAAAAAAAmAUAAAAAAAAAAAAAmAUAAAAAAACZBQAAAAAAAAAAAACZBQAAAAAAAJoFAAAAAAAAAAAAAJoFAAAAAAAAmwUAAAAAAAAAAAAAmwUAAAAAAACcBQAAAAAAAAAAAACcBQAAAAAAAJ0FAAAAAAAAAAAAAJ0FAAAAAAAAngUAAAAAAAAAAAAAngUAAAAAAACfBQAAAAAAAAAAAACfBQAAAAAAAKAFAAAAAAAAAAAAAKAFAAAAAAAAoQUAAAAAAAAAAAAAoQUAAAAAAACiBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwUAAAAAAACXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1081,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAKIFAAAAAAAAowUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogUAAAAAAACiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1082,
					1,
					"image_paste",
					null,
					"AQAAAKMFAAAAAAAArQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowUAAAAAAACjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAK0FAAAAAAAArgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1086,
					1,
					"insert",
					{
						"characters": "loadings_1"
					},
					"CwAAAKMFAAAAAAAApAUAAAAAAAAAAAAApAUAAAAAAACkBQAAAAAAAAoAAABnZXRfY29sb3JzpAUAAAAAAAClBQAAAAAAAAAAAAClBQAAAAAAAKYFAAAAAAAAAAAAAKYFAAAAAAAApwUAAAAAAAAAAAAApwUAAAAAAACoBQAAAAAAAAAAAACoBQAAAAAAAKkFAAAAAAAAAAAAAKkFAAAAAAAAqgUAAAAAAAAAAAAAqgUAAAAAAACrBQAAAAAAAAAAAACrBQAAAAAAAKwFAAAAAAAAAAAAAKwFAAAAAAAArQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQUAAAAAAACjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1105,
					1,
					"image_paste",
					null,
					"AgAAAKMFAAAAAAAAsgUAAAAAAAAAAAAAsgUAAAAAAACyBQAAAAAAAAoAAABsb2FkaW5nc18x",
					"AQAAAAAAAAABAAAAowUAAAAAAACtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1112,
					5,
					"left_delete",
					null,
					"BQAAALEFAAAAAAAAsQUAAAAAAAABAAAAXbAFAAAAAAAAsAUAAAAAAAABAAAAMa8FAAAAAAAArwUAAAAAAAABAAAAIK4FAAAAAAAArgUAAAAAAAABAAAALK0FAAAAAAAArQUAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAsgUAAAAAAACyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1120,
					2,
					"right_delete",
					null,
					"AgAAABAHAAAAAAAAEAcAAAAAAAABAAAAMhAHAAAAAAAAEAcAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAEAcAAAAAAAAQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1121,
					1,
					"insert",
					{
						"characters": "12"
					},
					"AgAAABAHAAAAAAAAEQcAAAAAAAAAAAAAEQcAAAAAAAASBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAcAAAAAAAAQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1142,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACVBQAAAAAAAAAAAACTBQAAAAAAAJMFAAAAAAAAAgAAACAgkwUAAAAAAACdBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgUAAAAAAACSBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1145,
					1,
					"left_delete",
					null,
					"AQAAAJEFAAAAAAAAkQUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAkgUAAAAAAACSBQAAAAAAAP///////+9/"
				],
				[
					1146,
					1,
					"insert",
					{
						"characters": "\nmain"
					},
					"CAAAAJEFAAAAAAAAkgUAAAAAAAAAAAAAkgUAAAAAAACUBQAAAAAAAAAAAACSBQAAAAAAAJIFAAAAAAAAAgAAACAgkgUAAAAAAACcBQAAAAAAAAAAAACcBQAAAAAAAJ0FAAAAAAAAAAAAAJ0FAAAAAAAAngUAAAAAAAAAAAAAngUAAAAAAACfBQAAAAAAAAAAAACfBQAAAAAAAKAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQUAAAAAAACRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1147,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAKAFAAAAAAAAoQUAAAAAAAAAAAAAoQUAAAAAAACiBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAUAAAAAAACgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1148,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKIFAAAAAAAAowUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogUAAAAAAACiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1149,
					2,
					"left_delete",
					null,
					"AgAAAKIFAAAAAAAAogUAAAAAAAABAAAAIKEFAAAAAAAAoQUAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAowUAAAAAAACjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1150,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAKEFAAAAAAAAogUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQUAAAAAAAChBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1151,
					1,
					"insert",
					{
						"characters": " \"Expr"
					},
					"BgAAAKIFAAAAAAAAowUAAAAAAAAAAAAAowUAAAAAAACkBQAAAAAAAAAAAACkBQAAAAAAAKUFAAAAAAAAAAAAAKUFAAAAAAAApgUAAAAAAAAAAAAApgUAAAAAAACnBQAAAAAAAAAAAACnBQAAAAAAAKgFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogUAAAAAAACiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1152,
					1,
					"left_delete",
					null,
					"AQAAAKcFAAAAAAAApwUAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAqAUAAAAAAACoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1153,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAKcFAAAAAAAAqAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwUAAAAAAACnBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1154,
					1,
					"insert",
					{
						"characters": " 2:"
					},
					"AwAAAKgFAAAAAAAAqQUAAAAAAAAAAAAAqQUAAAAAAACqBQAAAAAAAAAAAACqBQAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAUAAAAAAACoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1155,
					1,
					"insert",
					{
						"characters": " Factor"
					},
					"BwAAAKsFAAAAAAAArAUAAAAAAAAAAAAArAUAAAAAAACtBQAAAAAAAAAAAACtBQAAAAAAAK4FAAAAAAAAAAAAAK4FAAAAAAAArwUAAAAAAAAAAAAArwUAAAAAAACwBQAAAAAAAAAAAACwBQAAAAAAALEFAAAAAAAAAAAAALEFAAAAAAAAsgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwUAAAAAAACrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": " Anxious"
					},
					"CAAAALIFAAAAAAAAswUAAAAAAAAAAAAAswUAAAAAAAC0BQAAAAAAAAAAAAC0BQAAAAAAALUFAAAAAAAAAAAAALUFAAAAAAAAtgUAAAAAAAAAAAAAtgUAAAAAAAC3BQAAAAAAAAAAAAC3BQAAAAAAALgFAAAAAAAAAAAAALgFAAAAAAAAuQUAAAAAAAAAAAAAuQUAAAAAAAC6BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgUAAAAAAACyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1157,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALoFAAAAAAAAuwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugUAAAAAAAC6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1158,
					1,
					"left_delete",
					null,
					"AQAAALoFAAAAAAAAugUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAuwUAAAAAAAC7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1159,
					1,
					"insert",
					{
						"characters": "-Dp"
					},
					"AwAAALoFAAAAAAAAuwUAAAAAAAAAAAAAuwUAAAAAAAC8BQAAAAAAAAAAAAC8BQAAAAAAAL0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugUAAAAAAAC6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1160,
					1,
					"left_delete",
					null,
					"AQAAALwFAAAAAAAAvAUAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAvQUAAAAAAAC9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1161,
					1,
					"insert",
					{
						"characters": "epression"
					},
					"CQAAALwFAAAAAAAAvQUAAAAAAAAAAAAAvQUAAAAAAAC+BQAAAAAAAAAAAAC+BQAAAAAAAL8FAAAAAAAAAAAAAL8FAAAAAAAAwAUAAAAAAAAAAAAAwAUAAAAAAADBBQAAAAAAAAAAAADBBQAAAAAAAMIFAAAAAAAAAAAAAMIFAAAAAAAAwwUAAAAAAAAAAAAAwwUAAAAAAADEBQAAAAAAAAAAAADEBQAAAAAAAMUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAUAAAAAAAC8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1164,
					1,
					"insert",
					{
						"characters": "\","
					},
					"AgAAAMUFAAAAAAAAxgUAAAAAAAAAAAAAxgUAAAAAAADHBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQUAAAAAAADFBQAAAAAAAP///////+9/"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcFAAAAAAAAyAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwUAAAAAAADHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1166,
					1,
					"left_delete",
					null,
					"AQAAAMcFAAAAAAAAxwUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAyAUAAAAAAADIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1171,
					3,
					"image_paste",
					null,
					"BAAAAHYFAAAAAAAA7wUAAAAAAAAAAAAA7wUAAAAAAADvBQAAAAAAAHkAAAAKICBiYXJwbG90KGxvYWRpbmdzXzJbLCAxXSwKICAgICAgICAgIG1haW4gPSAiRXhwLiAyOiBGYWN0b3IgQW54aW91cy1EZXByZXNzaW9uIiwKICAgICAgICAgIGNvbCA9IGdldF9jb2xvcnMobG9hZGluZ3NfMikp7wUAAAAAAABoBgAAAAAAAAAAAABoBgAAAAAAAOEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wUAAAAAAAB2BQAAAAAAAAAAAAAAOIJA"
				],
				[
					1174,
					2,
					"left_delete",
					null,
					"AgAAAAgGAAAAAAAACAYAAAAAAAABAAAAXQcGAAAAAAAABwYAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1175,
					1,
					"insert",
					{
						"characters": "2]"
					},
					"AgAAAAcGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAJBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwYAAAAAAAAHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1179,
					1,
					"right_delete",
					null,
					"AQAAAIAGAAAAAAAAgAYAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAgAYAAAAAAACABgAAAAAAAAAAAAAAoG9A"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAIAGAAAAAAAAgQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAYAAAAAAACABgAAAAAAAAAAAAAAAPC/"
				],
				[
					1185,
					1,
					"insert",
					{
						"characters": "Compulsive-"
					},
					"DAAAACwGAAAAAAAALQYAAAAAAAAAAAAALQYAAAAAAAAtBgAAAAAAABIAAABBbnhpb3VzLURlcHJlc3Npb24tBgAAAAAAAC4GAAAAAAAAAAAAAC4GAAAAAAAALwYAAAAAAAAAAAAALwYAAAAAAAAwBgAAAAAAAAAAAAAwBgAAAAAAADEGAAAAAAAAAAAAADEGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAzBgAAAAAAAAAAAAAzBgAAAAAAADQGAAAAAAAAAAAAADQGAAAAAAAANQYAAAAAAAAAAAAANQYAAAAAAAA2BgAAAAAAAAAAAAA2BgAAAAAAADcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAYAAAAAAAA+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1186,
					1,
					"left_delete",
					null,
					"AQAAADYGAAAAAAAANgYAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAANwYAAAAAAAA3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1187,
					1,
					"insert",
					{
						"characters": " Behavior"
					},
					"CQAAADYGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADkGAAAAAAAAAAAAADkGAAAAAAAAOgYAAAAAAAAAAAAAOgYAAAAAAAA7BgAAAAAAAAAAAAA7BgAAAAAAADwGAAAAAAAAAAAAADwGAAAAAAAAPQYAAAAAAAAAAAAAPQYAAAAAAAA+BgAAAAAAAAAAAAA+BgAAAAAAAD8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgYAAAAAAAA2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1188,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAD8GAAAAAAAAQAYAAAAAAAAAAAAAQAYAAAAAAABBBgAAAAAAAAAAAABBBgAAAAAAAEIGAAAAAAAAAAAAAEIGAAAAAAAAQwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwYAAAAAAAA/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1189,
					1,
					"insert",
					{
						"characters": " Intrus"
					},
					"BwAAAEMGAAAAAAAARAYAAAAAAAAAAAAARAYAAAAAAABFBgAAAAAAAAAAAABFBgAAAAAAAEYGAAAAAAAAAAAAAEYGAAAAAAAARwYAAAAAAAAAAAAARwYAAAAAAABIBgAAAAAAAAAAAABIBgAAAAAAAEkGAAAAAAAAAAAAAEkGAAAAAAAASgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwYAAAAAAABDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1190,
					1,
					"left_delete",
					null,
					"AQAAAEkGAAAAAAAASQYAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAASgYAAAAAAABKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1191,
					1,
					"insert",
					{
						"characters": "sive"
					},
					"BAAAAEkGAAAAAAAASgYAAAAAAAAAAAAASgYAAAAAAABLBgAAAAAAAAAAAABLBgAAAAAAAEwGAAAAAAAAAAAAAEwGAAAAAAAATQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQYAAAAAAABJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1192,
					1,
					"insert",
					{
						"characters": " Thought"
					},
					"CAAAAE0GAAAAAAAATgYAAAAAAAAAAAAATgYAAAAAAABPBgAAAAAAAAAAAABPBgAAAAAAAFAGAAAAAAAAAAAAAFAGAAAAAAAAUQYAAAAAAAAAAAAAUQYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAFMGAAAAAAAAVAYAAAAAAAAAAAAAVAYAAAAAAABVBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQYAAAAAAABNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1198,
					2,
					"left_delete",
					null,
					"AgAAALYGAAAAAAAAtgYAAAAAAAAYAAAAYWN0b3IgQW54aW91cy1EZXByZXNzaW9utQYAAAAAAAC1BgAAAAAAAAEAAABG",
					"AQAAAAAAAAABAAAAtgYAAAAAAADOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1199,
					1,
					"insert",
					{
						"characters": "Social"
					},
					"BgAAALUGAAAAAAAAtgYAAAAAAAAAAAAAtgYAAAAAAAC3BgAAAAAAAAAAAAC3BgAAAAAAALgGAAAAAAAAAAAAALgGAAAAAAAAuQYAAAAAAAAAAAAAuQYAAAAAAAC6BgAAAAAAAAAAAAC6BgAAAAAAALsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQYAAAAAAAC1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1200,
					1,
					"insert",
					{
						"characters": " Withdrawal"
					},
					"CwAAALsGAAAAAAAAvAYAAAAAAAAAAAAAvAYAAAAAAAC9BgAAAAAAAAAAAAC9BgAAAAAAAL4GAAAAAAAAAAAAAL4GAAAAAAAAvwYAAAAAAAAAAAAAvwYAAAAAAADABgAAAAAAAAAAAADABgAAAAAAAMEGAAAAAAAAAAAAAMEGAAAAAAAAwgYAAAAAAAAAAAAAwgYAAAAAAADDBgAAAAAAAAAAAADDBgAAAAAAAMQGAAAAAAAAAAAAAMQGAAAAAAAAxQYAAAAAAAAAAAAAxQYAAAAAAADGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1205,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAAPAGAAAAAAAA8QYAAAAAAAAAAAAA8QYAAAAAAAD7BgAAAAAAAAAAAADxBgAAAAAAAPEGAAAAAAAACgAAACAgICAgICAgICDxBgAAAAAAAPMGAAAAAAAAAAAAAPMGAAAAAAAA9AYAAAAAAAAAAAAA9AYAAAAAAAD2BgAAAAAAAAAAAADxBgAAAAAAAPEGAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAA8AYAAAAAAADwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1206,
					1,
					"image_paste",
					null,
					"AQAAAPQGAAAAAAAAbggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AYAAAAAAAD0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1209,
					1,
					"left_delete",
					null,
					"AgAAAAgHAAAAAAAACAcAAAAAAAABAAAAMvIGAAAAAAAA8gYAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAACQcAAAAAAAAJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1210,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAAYHAAAAAAAABwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgcAAAAAAAAGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1213,
					1,
					"left_delete",
					null,
					"AQAAAGgHAAAAAAAAaAcAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAaQcAAAAAAABpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1214,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGgHAAAAAAAAaQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAcAAAAAAABoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1218,
					1,
					"left_delete",
					null,
					"AQAAAPgHAAAAAAAA+AcAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA+QcAAAAAAAD5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1219,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAPgHAAAAAAAA+QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AcAAAAAAAD4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1221,
					1,
					"left_delete",
					null,
					"AQAAAGkIAAAAAAAAaQgAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAaggAAAAAAABqCAAAAAAAAAAAAAAAcHlA"
				],
				[
					1222,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGkIAAAAAAAAaggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQgAAAAAAABpCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1227,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAACUHAAAAAAAAJgcAAAAAAAAAAAAAJgcAAAAAAAAmBwAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAAJQcAAAAAAAAmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1230,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAJ4HAAAAAAAAnwcAAAAAAAAAAAAAnwcAAAAAAACfBwAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAAngcAAAAAAACfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1233,
					1,
					"left_delete",
					null,
					"AQAAAC4IAAAAAAAALggAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAALwgAAAAAAAAvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1234,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAC4IAAAAAAAALwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALggAAAAAAAAuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1248,
					1,
					"image_paste",
					null,
					"AgAAAP0GAAAAAAAADgcAAAAAAAAAAAAADgcAAAAAAAAOBwAAAAAAAAoAAABsb2FkaW5nc18x",
					"AQAAAAAAAAABAAAA/QYAAAAAAAAHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1253,
					1,
					"image_paste",
					null,
					"AgAAAH0HAAAAAAAAjgcAAAAAAAAAAAAAjgcAAAAAAACOBwAAAAAAAAoAAABsb2FkaW5nc18y",
					"AQAAAAAAAAABAAAAfQcAAAAAAACHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1258,
					1,
					"image_paste",
					null,
					"AgAAAGYHAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAAB3BwAAAAAAAAoAAABsb2FkaW5nc18x",
					"AQAAAAAAAAABAAAAZgcAAAAAAABwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1263,
					1,
					"image_paste",
					null,
					"AgAAAAQIAAAAAAAAFQgAAAAAAAAAAAAAFQgAAAAAAAAVCAAAAAAAAAoAAABsb2FkaW5nc18x",
					"AQAAAAAAAAABAAAABAgAAAAAAAAOCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1268,
					1,
					"image_paste",
					null,
					"AgAAACIIAAAAAAAAMwgAAAAAAAAAAAAAMwgAAAAAAAAzCAAAAAAAAAoAAABsb2FkaW5nc18y",
					"AQAAAAAAAAABAAAAIggAAAAAAAAsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1273,
					1,
					"image_paste",
					null,
					"AgAAAIMIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACUCAAAAAAAAAoAAABsb2FkaW5nc18x",
					"AQAAAAAAAAABAAAAgwgAAAAAAACNCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1284,
					1,
					"reindent",
					null,
					"AQAAAPIGAAAAAAAA9AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gYAAAAAAADyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1285,
					1,
					"image_paste",
					null,
					"AQAAAPQGAAAAAAAABQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AYAAAAAAAD0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1286,
					1,
					"insert",
					{
						"characters": "_spaced"
					},
					"BwAAAAUHAAAAAAAABgcAAAAAAAAAAAAABgcAAAAAAAAHBwAAAAAAAAAAAAAHBwAAAAAAAAgHAAAAAAAAAAAAAAgHAAAAAAAACQcAAAAAAAAAAAAACQcAAAAAAAAKBwAAAAAAAAAAAAAKBwAAAAAAAAsHAAAAAAAAAAAAAAsHAAAAAAAADAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQcAAAAAAAAFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1287,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAAwHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAAPBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAcAAAAAAAAMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1288,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8HAAAAAAAAEAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwcAAAAAAAAPBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1296,
					1,
					"image_paste",
					null,
					"AQAAABAHAAAAAAAAGgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAcAAAAAAAAQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1298,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BQAAABoHAAAAAAAAGwcAAAAAAAAAAAAAGwcAAAAAAAAdBwAAAAAAAAAAAAAdBwAAAAAAAB4HAAAAAAAAAAAAAB4HAAAAAAAAHwcAAAAAAAAAAAAAHwcAAAAAAAAgBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgcAAAAAAAAaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1299,
					1,
					"insert",
					{
						"characters": " ("
					},
					"AgAAACAHAAAAAAAAIQcAAAAAAAAAAAAAIQcAAAAAAAAiBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAcAAAAAAAAgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1300,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAACIHAAAAAAAAIwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgcAAAAAAAAiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1301,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAACMHAAAAAAAAJAcAAAAAAAAAAAAAJAcAAAAAAAAlBwAAAAAAAAAAAAAlBwAAAAAAACYHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwcAAAAAAAAjBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1302,
					1,
					"insert",
					{
						"characters": " names"
					},
					"BgAAACYHAAAAAAAAJwcAAAAAAAAAAAAAJwcAAAAAAAAoBwAAAAAAAAAAAAAoBwAAAAAAACkHAAAAAAAAAAAAACkHAAAAAAAAKgcAAAAAAAAAAAAAKgcAAAAAAAArBwAAAAAAAAAAAAArBwAAAAAAACwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgcAAAAAAAAmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1303,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAACcHAAAAAAAAJwcAAAAAAAAFAAAAbmFtZXM",
					"AQAAAAAAAAABAAAALAcAAAAAAAAsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1304,
					1,
					"insert",
					{
						"characters": "rownames()"
					},
					"CgAAACcHAAAAAAAAKAcAAAAAAAAAAAAAKAcAAAAAAAApBwAAAAAAAAAAAAApBwAAAAAAACoHAAAAAAAAAAAAACoHAAAAAAAAKwcAAAAAAAAAAAAAKwcAAAAAAAAsBwAAAAAAAAAAAAAsBwAAAAAAAC0HAAAAAAAAAAAAAC0HAAAAAAAALgcAAAAAAAAAAAAALgcAAAAAAAAvBwAAAAAAAAAAAAAvBwAAAAAAADAHAAAAAAAAAAAAADAHAAAAAAAAMQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwcAAAAAAAAnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1317,
					1,
					"image_paste",
					null,
					"AQAAADAHAAAAAAAAQQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAcAAAAAAAAwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1319,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEIHAAAAAAAAQwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgcAAAAAAABCBwAAAAAAAP///////+9/"
				],
				[
					1320,
					1,
					"insert",
					{
						"characters": "\n{"
					},
					"BwAAAEMHAAAAAAAARAcAAAAAAAAAAAAARAcAAAAAAABGBwAAAAAAAAAAAABEBwAAAAAAAEQHAAAAAAAAAgAAACAgRAcAAAAAAABIBwAAAAAAAAAAAABIBwAAAAAAAEkHAAAAAAAAAAAAAEQHAAAAAAAARAcAAAAAAAAEAAAAICAgIEQHAAAAAAAARgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwcAAAAAAABDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1321,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BgAAAEcHAAAAAAAASAcAAAAAAAAAAAAASAcAAAAAAABKBwAAAAAAAAAAAABKBwAAAAAAAEwHAAAAAAAAAAAAAEwHAAAAAAAATQcAAAAAAAAAAAAASAcAAAAAAABIBwAAAAAAAAQAAAAgICAgSAcAAAAAAABKBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwcAAAAAAABHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1324,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEcHAAAAAAAASAcAAAAAAAAAAAAASAcAAAAAAABKBwAAAAAAAAAAAABKBwAAAAAAAEwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwcAAAAAAABHBwAAAAAAAAAAAAAAgEBA"
				],
				[
					1326,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAFAHAAAAAAAAUQcAAAAAAAAAAAAAUQcAAAAAAABTBwAAAAAAAAAAAABIBwAAAAAAAEgHAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAAUAcAAAAAAABQBwAAAAAAAAAAAAAAAEZA"
				],
				[
					1329,
					1,
					"reindent",
					null,
					"AQAAAEgHAAAAAAAATAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAcAAAAAAABIBwAAAAAAAP///////+9/"
				],
				[
					1344,
					1,
					"image_paste",
					null,
					"AgAAADAHAAAAAAAAOgcAAAAAAAAAAAAAOgcAAAAAAAA6BwAAAAAAABEAAABsb2FkaW5nc18xX3NvcnRlZA",
					"AQAAAAAAAAABAAAAMAcAAAAAAABBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1347,
					1,
					"insert",
					{
						"characters": "which("
					},
					"BwAAAEUHAAAAAAAARgcAAAAAAAAAAAAASwcAAAAAAABLBwAAAAAAAAIAAAAgIEYHAAAAAAAARwcAAAAAAAAAAAAARwcAAAAAAABIBwAAAAAAAAAAAABIBwAAAAAAAEkHAAAAAAAAAAAAAEkHAAAAAAAASgcAAAAAAAAAAAAASgcAAAAAAABLBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQcAAAAAAABFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1359,
					1,
					"image_paste",
					null,
					"AQAAAEsHAAAAAAAAVQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwcAAAAAAABLBwAAAAAAAAAAAAAAgHtA"
				],
				[
					1361,
					1,
					"insert",
					{
						"characters": "rownames"
					},
					"CAAAAEsHAAAAAAAATAcAAAAAAAAAAAAATAcAAAAAAABNBwAAAAAAAAAAAABNBwAAAAAAAE4HAAAAAAAAAAAAAE4HAAAAAAAATwcAAAAAAAAAAAAATwcAAAAAAABQBwAAAAAAAAAAAABQBwAAAAAAAFEHAAAAAAAAAAAAAFEHAAAAAAAAUgcAAAAAAAAAAAAAUgcAAAAAAABTBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwcAAAAAAABLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1362,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAEsHAAAAAAAASwcAAAAAAAAIAAAAcm93bmFtZXM",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1363,
					1,
					"insert",
					{
						"characters": "rownames("
					},
					"CQAAAEsHAAAAAAAATAcAAAAAAAAAAAAATAcAAAAAAABNBwAAAAAAAAAAAABNBwAAAAAAAE4HAAAAAAAAAAAAAE4HAAAAAAAATwcAAAAAAAAAAAAATwcAAAAAAABQBwAAAAAAAAAAAABQBwAAAAAAAFEHAAAAAAAAAAAAAFEHAAAAAAAAUgcAAAAAAAAAAAAAUgcAAAAAAABTBwAAAAAAAAAAAABTBwAAAAAAAFQHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwcAAAAAAABLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1365,
					1,
					"left_delete",
					null,
					"AQAAAF0HAAAAAAAAXQcAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAXgcAAAAAAABeBwAAAAAAAP///////+9/"
				],
				[
					1366,
					1,
					"insert",
					{
						"characters": "1_sorted)"
					},
					"CQAAAF0HAAAAAAAAXgcAAAAAAAAAAAAAXgcAAAAAAABfBwAAAAAAAAAAAABfBwAAAAAAAGAHAAAAAAAAAAAAAGAHAAAAAAAAYQcAAAAAAAAAAAAAYQcAAAAAAABiBwAAAAAAAAAAAABiBwAAAAAAAGMHAAAAAAAAAAAAAGMHAAAAAAAAZAcAAAAAAAAAAAAAZAcAAAAAAABlBwAAAAAAAAAAAABlBwAAAAAAAGYHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQcAAAAAAABdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1370,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAEsHAAAAAAAATAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwcAAAAAAABLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1371,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEwHAAAAAAAATQcAAAAAAAAAAAAATQcAAAAAAABOBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAcAAAAAAABMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1372,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4HAAAAAAAATwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgcAAAAAAABOBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1384,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAGoHAAAAAAAAawcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagcAAAAAAABqBwAAAAAAAP///////+9/"
				],
				[
					1385,
					1,
					"left_delete",
					null,
					"AQAAAGoHAAAAAAAAagcAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAawcAAAAAAABrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1387,
					1,
					"overwrite",
					{
						"characters": "0"
					},
					"AQAAAGoHAAAAAAAAawcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagcAAAAAAABqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1389,
					1,
					"left_delete",
					null,
					"AQAAAGoHAAAAAAAAagcAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAawcAAAAAAABrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1390,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGoHAAAAAAAAawcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagcAAAAAAABqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1396,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAE0HAAAAAAAATgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQcAAAAAAABNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1401,
					1,
					"insert",
					{
						"characters": "idx"
					},
					"AwAAAEUHAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAABHBwAAAAAAAAAAAABHBwAAAAAAAEgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQcAAAAAAABFBwAAAAAAAAAAAAAAAEZA"
				],
				[
					1402,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAEgHAAAAAAAASQcAAAAAAAAAAAAASQcAAAAAAABLBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAcAAAAAAABIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1403,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsHAAAAAAAATAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwcAAAAAAABLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1409,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAHMHAAAAAAAAdAcAAAAAAAAAAAAAdAcAAAAAAAB4BwAAAAAAAAAAAAB4BwAAAAAAAHkHAAAAAAAAAAAAAHkHAAAAAAAAegcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwcAAAAAAABzBwAAAAAAAP///////+9/"
				],
				[
					1410,
					1,
					"insert",
					{
						"characters": " L"
					},
					"AgAAAHoHAAAAAAAAewcAAAAAAAAAAAAAewcAAAAAAAB8BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegcAAAAAAAB6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1411,
					1,
					"left_delete",
					null,
					"AQAAAHsHAAAAAAAAewcAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAfAcAAAAAAAB8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1412,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAHsHAAAAAAAAfAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewcAAAAAAAB7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1413,
					1,
					"left_delete",
					null,
					"AQAAAHsHAAAAAAAAewcAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAfAcAAAAAAAB8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					1,
					"insert",
					{
						"characters": "(length(idx)"
					},
					"DAAAAHsHAAAAAAAAfAcAAAAAAAAAAAAAfAcAAAAAAAB9BwAAAAAAAAAAAAB9BwAAAAAAAH4HAAAAAAAAAAAAAH4HAAAAAAAAfwcAAAAAAAAAAAAAfwcAAAAAAACABwAAAAAAAAAAAACABwAAAAAAAIEHAAAAAAAAAAAAAIEHAAAAAAAAggcAAAAAAAAAAAAAggcAAAAAAACDBwAAAAAAAAAAAACDBwAAAAAAAIQHAAAAAAAAAAAAAIQHAAAAAAAAhQcAAAAAAAAAAAAAhQcAAAAAAACGBwAAAAAAAAAAAACGBwAAAAAAAIcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewcAAAAAAAB7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1415,
					1,
					"insert",
					{
						"characters": ">0)"
					},
					"AwAAAIcHAAAAAAAAiAcAAAAAAAAAAAAAiAcAAAAAAACJBwAAAAAAAAAAAACJBwAAAAAAAIoHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwcAAAAAAACHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1417,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIcHAAAAAAAAiAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwcAAAAAAACHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1419,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkHAAAAAAAAigcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQcAAAAAAACJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1421,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwHAAAAAAAAjQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAcAAAAAAACMBwAAAAAAAP///////+9/"
				],
				[
					1426,
					1,
					"insert",
					{
						"characters": "*09"
					},
					"AwAAABoHAAAAAAAAGwcAAAAAAAAAAAAAGwcAAAAAAAAcBwAAAAAAAAAAAAAcBwAAAAAAAB0HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgcAAAAAAAAaBwAAAAAAAP///////+9/"
				],
				[
					1427,
					1,
					"left_delete",
					null,
					"AQAAABwHAAAAAAAAHAcAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAHQcAAAAAAAAdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1443,
					1,
					"image_paste",
					null,
					"AQAAAI8HAAAAAAAApwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwcAAAAAAACPBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1444,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAKcHAAAAAAAAqAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwcAAAAAAACnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1449,
					1,
					"right_delete",
					null,
					"AQAAACQHAAAAAAAAJAcAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAJAcAAAAAAAAkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1450,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACQHAAAAAAAAJQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAcAAAAAAAAkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1454,
					1,
					"cut",
					null,
					"AQAAACkHAAAAAAAAKQcAAAAAAAAUAAAAcm93bmFtZXMobG9hZGluZ3NfMik",
					"AQAAAAAAAAABAAAAKQcAAAAAAAA9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1455,
					1,
					"insert",
					{
						"characters": "1\"m"
					},
					"AwAAACkHAAAAAAAAKgcAAAAAAAAAAAAAKgcAAAAAAAArBwAAAAAAAAAAAAArBwAAAAAAACwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQcAAAAAAAApBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1456,
					2,
					"left_delete",
					null,
					"AgAAACsHAAAAAAAAKwcAAAAAAAABAAAAbSoHAAAAAAAAKgcAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAALAcAAAAAAAAsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1457,
					1,
					"insert",
					{
						"characters": ":nrow(loadi"
					},
					"CwAAACoHAAAAAAAAKwcAAAAAAAAAAAAAKwcAAAAAAAAsBwAAAAAAAAAAAAAsBwAAAAAAAC0HAAAAAAAAAAAAAC0HAAAAAAAALgcAAAAAAAAAAAAALgcAAAAAAAAvBwAAAAAAAAAAAAAvBwAAAAAAADAHAAAAAAAAAAAAADAHAAAAAAAAMQcAAAAAAAAAAAAAMQcAAAAAAAAyBwAAAAAAAAAAAAAyBwAAAAAAADMHAAAAAAAAAAAAADMHAAAAAAAANAcAAAAAAAAAAAAANAcAAAAAAAA1BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgcAAAAAAAAqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1458,
					1,
					"insert",
					{
						"characters": "ngs_2)"
					},
					"BgAAADUHAAAAAAAANgcAAAAAAAAAAAAANgcAAAAAAAA3BwAAAAAAAAAAAAA3BwAAAAAAADgHAAAAAAAAAAAAADgHAAAAAAAAOQcAAAAAAAAAAAAAOQcAAAAAAAA6BwAAAAAAAAAAAAA6BwAAAAAAADsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQcAAAAAAAA1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1460,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEAHAAAAAAAAQQcAAAAAAAAAAAAAQQcAAAAAAABDBwAAAAAAAAAAAABDBwAAAAAAAEUHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAcAAAAAAABABwAAAAAAAAAAAAAAoHRA"
				],
				[
					1461,
					1,
					"image_paste",
					null,
					"AQAAAEUHAAAAAAAAWQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQcAAAAAAABFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1463,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAEUHAAAAAAAARgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQcAAAAAAABFBwAAAAAAAAAAAAAAAEZA"
				],
				[
					1464,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAEYHAAAAAAAARwcAAAAAAAAAAAAARwcAAAAAAABJBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgcAAAAAAABGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1465,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkHAAAAAAAASgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQcAAAAAAABJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1467,
					1,
					"insert",
					{
						"characters": "[i]"
					},
					"AwAAAF4HAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAABgBwAAAAAAAAAAAABgBwAAAAAAAGEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgcAAAAAAABeBwAAAAAAAP///////+9/"
				],
				[
					1472,
					1,
					"right_delete",
					null,
					"AQAAACQHAAAAAAAAJAcAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAJAcAAAAAAAAkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1473,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAACQHAAAAAAAAJQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAcAAAAAAAAkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1479,
					1,
					"insert",
					{
						"characters": "i,"
					},
					"AgAAAMcHAAAAAAAAyAcAAAAAAAAAAAAAyAcAAAAAAADJBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAP///////+9/"
				],
				[
					1480,
					1,
					"insert",
					{
						"characters": " ]"
					},
					"AgAAAMkHAAAAAAAAygcAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1481,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAMsHAAAAAAAAzAcAAAAAAAAAAAAAzAcAAAAAAADOBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1482,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM4HAAAAAAAAzwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgcAAAAAAADOBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1489,
					1,
					"image_paste",
					null,
					"AQAAAM8HAAAAAAAA4AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwcAAAAAAADPBwAAAAAAAP///////+9/"
				],
				[
					1490,
					1,
					"insert",
					{
						"characters": "[idx,"
					},
					"BQAAAOAHAAAAAAAA4QcAAAAAAAAAAAAA4QcAAAAAAADiBwAAAAAAAAAAAADiBwAAAAAAAOMHAAAAAAAAAAAAAOMHAAAAAAAA5AcAAAAAAAAAAAAA5AcAAAAAAADlBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AcAAAAAAADgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1491,
					1,
					"insert",
					{
						"characters": " ]"
					},
					"AgAAAOUHAAAAAAAA5gcAAAAAAAAAAAAA5gcAAAAAAADnBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QcAAAAAAADlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1508,
					1,
					"image_paste",
					null,
					"AgAAAPcHAAAAAAAADwgAAAAAAAAAAAAADwgAAAAAAAAPCAAAAAAAABEAAABsb2FkaW5nc18xX3NvcnRlZA",
					"AQAAAAAAAAABAAAA9wcAAAAAAAAICAAAAAAAAAAAAAAAAPC/"
				],
				[
					1513,
					1,
					"image_paste",
					null,
					"AgAAAGcIAAAAAAAAfwgAAAAAAAAAAAAAfwgAAAAAAAB/CAAAAAAAABEAAABsb2FkaW5nc18xX3NvcnRlZA",
					"AQAAAAAAAAABAAAAZwgAAAAAAAB4CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1518,
					1,
					"image_paste",
					null,
					"AgAAAIwIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAACkCAAAAAAAABEAAABsb2FkaW5nc18xX3NvcnRlZA",
					"AQAAAAAAAAABAAAAjAgAAAAAAACdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1523,
					1,
					"image_paste",
					null,
					"AgAAABMJAAAAAAAAKwkAAAAAAAAAAAAAKwkAAAAAAAArCQAAAAAAABEAAABsb2FkaW5nc18xX3NvcnRlZA",
					"AQAAAAAAAAABAAAAEwkAAAAAAAAkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1532,
					1,
					"image_paste",
					null,
					"AgAAADgJAAAAAAAAUAkAAAAAAAAAAAAAUAkAAAAAAABQCQAAAAAAABEAAABsb2FkaW5nc18xX3NvcnRlZA",
					"AQAAAAAAAAABAAAAOAkAAAAAAABJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1537,
					1,
					"image_paste",
					null,
					"AgAAAKAJAAAAAAAAuAkAAAAAAAAAAAAAuAkAAAAAAAC4CQAAAAAAABEAAABsb2FkaW5nc18xX3NvcnRlZA",
					"AQAAAAAAAAABAAAAoAkAAAAAAACxCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1561,
					1,
					"cut",
					null,
					"AQAAAPEGAAAAAAAA8QYAAAAAAADJAgAACiAgbG9hZGluZ3NfMV9zb3J0ZWRfc3BhY2VkIDwtIGxvYWRpbmdzXzIqMAogIGZvciAoaSBpbiAxOm5yb3cobG9hZGluZ3NfMikpCiAgewogICAgbiA8LSByb3duYW1lcyhsb2FkaW5nc18yKVtpXQogICAgaWR4IDwtIHdoaWNoKG4gPT0gcm93bmFtZXMobG9hZGluZ3NfMV9zb3J0ZWQpKQogICAgaWYgKGxlbmd0aChpZHgpID4gMCkgbG9hZGluZ3NfMV9zb3J0ZWRfc3BhY2VkW2ksIF0gPC0gbG9hZGluZ3NfMV9zb3J0ZWRbaWR4LCBdCiAgfQoKICBiYXJwbG90KGxvYWRpbmdzXzFfc29ydGVkX3NwYWNlZFssIDFdLAogICAgICAgICAgbWFpbiA9ICJFeHAuIDE6IEZhY3RvciBBbnhpb3VzLURlcHJlc3Npb24iLAogICAgICAgICAgY29sID0gZ2V0X2NvbG9ycyhsb2FkaW5nc18xX3NvcnRlZF9zcGFjZWQpKQogIGJhcnBsb3QobG9hZGluZ3NfMV9zb3J0ZWRfc3BhY2VkWywgMl0sCiAgICAgICAgICBtYWluID0gIkV4cC4gMTogRmFjdG9yIENvbXB1bHNpdmUgQmVoYXZpb3IgYW5kIEludHJ1c2l2ZSBUaG91Z2h0IiwKICAgICAgICAgIGNvbCA9IGdldF9jb2xvcnMobG9hZGluZ3NfMV9zb3J0ZWRfc3BhY2VkKSkKICBiYXJwbG90KGxvYWRpbmdzXzFfc29ydGVkX3NwYWNlZFssIDNdLAogICAgICAgICAgbWFpbiA9ICJFeHAuIDE6IFNvY2lhbCBXaXRoZHJhd2FsIiwKICAgICAgICAgIGNvbCA9IGdldF9jb2xvcnMobG9hZGluZ3NfMV9zb3J0ZWRfc3BhY2VkKSk",
					"AQAAAAAAAAABAAAAugkAAAAAAADxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1566,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAdwUAAAAAAAB5BQAAAAAAAAAAAAB3BQAAAAAAAHcFAAAAAAAAAgAAACAgdwUAAAAAAAB3BQAAAAAAAAAAAAB3BQAAAAAAAHgFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgUAAAAAAAB2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1568,
					1,
					"image_paste",
					null,
					"AQAAAHcFAAAAAAAAQAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwUAAAAAAAB3BQAAAAAAAAAAAAAAAAAA"
				],
				[
					1571,
					1,
					"insert",
					{
						"characters": "14"
					},
					"AwAAAHQFAAAAAAAAdQUAAAAAAAAAAAAAdQUAAAAAAAB1BQAAAAAAAAEAAAA3dQUAAAAAAAB2BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAUAAAAAAAB1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1573,
					1,
					"insert",
					{
						"characters": "\npar("
					},
					"CAAAAHcFAAAAAAAAeAUAAAAAAAAAAAAAeAUAAAAAAAB6BQAAAAAAAAAAAAB4BQAAAAAAAHgFAAAAAAAAAgAAACAgeAUAAAAAAAB4BQAAAAAAAAAAAAB4BQAAAAAAAHkFAAAAAAAAAAAAAHkFAAAAAAAAegUAAAAAAAAAAAAAegUAAAAAAAB7BQAAAAAAAAAAAAB7BQAAAAAAAHwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwUAAAAAAAB3BQAAAAAAAP///////+9/"
				],
				[
					1575,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAHgFAAAAAAAAegUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAUAAAAAAAB4BQAAAAAAAAAAAAAAAAAA"
				],
				[
					1577,
					1,
					"insert",
					{
						"characters": "mar"
					},
					"AwAAAH4FAAAAAAAAfwUAAAAAAAAAAAAAfwUAAAAAAACABQAAAAAAAAAAAACABQAAAAAAAIEFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgUAAAAAAAB+BQAAAAAAAP///////+9/"
				],
				[
					1578,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIEFAAAAAAAAggUAAAAAAAAAAAAAggUAAAAAAACDBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQUAAAAAAACBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1579,
					1,
					"insert",
					{
						"characters": " c()"
					},
					"BAAAAIMFAAAAAAAAhAUAAAAAAAAAAAAAhAUAAAAAAACFBQAAAAAAAAAAAACFBQAAAAAAAIYFAAAAAAAAAAAAAIYFAAAAAAAAhwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwUAAAAAAACDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1581,
					1,
					"insert",
					{
						"characters": "6,"
					},
					"AgAAAIYFAAAAAAAAhwUAAAAAAAAAAAAAhwUAAAAAAACIBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgUAAAAAAACGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1582,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAUAAAAAAACIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1583,
					1,
					"left_delete",
					null,
					"AQAAAIkFAAAAAAAAiQUAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAigUAAAAAAACKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1584,
					1,
					"insert",
					{
						"characters": "1)"
					},
					"AgAAAIkFAAAAAAAAigUAAAAAAAAAAAAAigUAAAAAAACLBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQUAAAAAAACJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1591,
					1,
					"insert",
					{
						"characters": "mfrow"
					},
					"BgAAAH4FAAAAAAAAfwUAAAAAAAAAAAAAfwUAAAAAAAB/BQAAAAAAAAMAAABtYXJ/BQAAAAAAAIAFAAAAAAAAAAAAAIAFAAAAAAAAgQUAAAAAAAAAAAAAgQUAAAAAAACCBQAAAAAAAAAAAACCBQAAAAAAAIMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgUAAAAAAACBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1600,
					1,
					"image_paste",
					null,
					"AQAAANMJAAAAAAAA6wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wkAAAAAAADTCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1605,
					1,
					"right_delete",
					null,
					"AQAAAOQJAAAAAAAA5AkAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAA5AkAAAAAAADkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1606,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAOQJAAAAAAAA5QkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AkAAAAAAADkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1610,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAANMJAAAAAAAA1AkAAAAAAAAAAAAA1AkAAAAAAADeCQAAAAAAAAAAAADUCQAAAAAAANQJAAAAAAAACgAAACAgICAgICAgICDUCQAAAAAAANYJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wkAAAAAAADTCQAAAAAAAP///////+9/"
				],
				[
					1620,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AwAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACJBQAAAAAAAAEAAAA21AkAAAAAAADUCQAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAiQUAAAAAAACIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1622,
					1,
					"right_delete",
					null,
					"AQAAAIsFAAAAAAAAiwUAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAiwUAAAAAAACLBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1623,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIsFAAAAAAAAjAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwUAAAAAAACLBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1637,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AgAAAHQFAAAAAAAAdQUAAAAAAAAAAAAAdQUAAAAAAAB1BQAAAAAAAAIAAAAxNA",
					"AQAAAAAAAAABAAAAdAUAAAAAAAB2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1646,
					1,
					"right_delete",
					null,
					"AQAAAHkFAAAAAAAAeQUAAAAAAAAUAAAAcGFyKG1mcm93ID0gYygzLCAyKSk",
					"AQAAAAAAAAABAAAAjQUAAAAAAAB5BQAAAAAAAAAAAAAAADZA"
				],
				[
					1647,
					1,
					"insert",
					{
						"characters": "layout(matrix"
					},
					"DQAAAHkFAAAAAAAAegUAAAAAAAAAAAAAegUAAAAAAAB7BQAAAAAAAAAAAAB7BQAAAAAAAHwFAAAAAAAAAAAAAHwFAAAAAAAAfQUAAAAAAAAAAAAAfQUAAAAAAAB+BQAAAAAAAAAAAAB+BQAAAAAAAH8FAAAAAAAAAAAAAH8FAAAAAAAAgAUAAAAAAAAAAAAAgAUAAAAAAACBBQAAAAAAAAAAAACBBQAAAAAAAIIFAAAAAAAAAAAAAIIFAAAAAAAAgwUAAAAAAAAAAAAAgwUAAAAAAACEBQAAAAAAAAAAAACEBQAAAAAAAIUFAAAAAAAAAAAAAIUFAAAAAAAAhgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQUAAAAAAAB5BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1648,
					1,
					"insert",
					{
						"characters": "(c(1"
					},
					"BAAAAIYFAAAAAAAAhwUAAAAAAAAAAAAAhwUAAAAAAACIBQAAAAAAAAAAAACIBQAAAAAAAIkFAAAAAAAAAAAAAIkFAAAAAAAAigUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgUAAAAAAACGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1649,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIoFAAAAAAAAiwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigUAAAAAAACKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1650,
					1,
					"insert",
					{
						"characters": "\n2,"
					},
					"BgAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACOBQAAAAAAAAAAAACMBQAAAAAAAIwFAAAAAAAAAgAAACAgjAUAAAAAAACeBQAAAAAAAAAAAACeBQAAAAAAAJ8FAAAAAAAAAAAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwUAAAAAAACLBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1651,
					1,
					"insert",
					{
						"characters": "\n3,"
					},
					"BAAAAKAFAAAAAAAAoQUAAAAAAAAAAAAAoQUAAAAAAACzBQAAAAAAAAAAAACzBQAAAAAAALQFAAAAAAAAAAAAALQFAAAAAAAAtQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAUAAAAAAACgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1653,
					1,
					"insert",
					{
						"characters": " 4"
					},
					"AgAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwUAAAAAAACLBQAAAAAAAAAAAAAAgGtA"
				],
				[
					1655,
					1,
					"insert",
					{
						"characters": " 5"
					},
					"AgAAAKIFAAAAAAAAowUAAAAAAAAAAAAAowUAAAAAAACkBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogUAAAAAAACiBQAAAAAAAAAAAAAAQG5A"
				],
				[
					1657,
					1,
					"insert",
					{
						"characters": " 6)"
					},
					"AwAAALkFAAAAAAAAugUAAAAAAAAAAAAAugUAAAAAAAC7BQAAAAAAAAAAAAC7BQAAAAAAALwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQUAAAAAAAC5BQAAAAAAAAAAAAAAQG5A"
				],
				[
					1659,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKQFAAAAAAAApQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAUAAAAAAACkBQAAAAAAAAAAAAAAoG9A"
				],
				[
					1661,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAI0FAAAAAAAAjgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQUAAAAAAACNBQAAAAAAAAAAAAAAoG9A"
				],
				[
					1663,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4FAAAAAAAAvwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgUAAAAAAAC+BQAAAAAAAAAAAAAAoG9A"
				],
				[
					1664,
					1,
					"left_delete",
					null,
					"AQAAAL4FAAAAAAAAvgUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAvwUAAAAAAAC/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1665,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL4FAAAAAAAAvwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgUAAAAAAAC+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1666,
					1,
					"insert",
					{
						"characters": " nrow"
					},
					"BQAAAL8FAAAAAAAAwAUAAAAAAAAAAAAAwAUAAAAAAADBBQAAAAAAAAAAAADBBQAAAAAAAMIFAAAAAAAAAAAAAMIFAAAAAAAAwwUAAAAAAAAAAAAAwwUAAAAAAADEBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwUAAAAAAAC/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1667,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMQFAAAAAAAAxQUAAAAAAAAAAAAAxQUAAAAAAADGBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAUAAAAAAADEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1668,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYFAAAAAAAAxwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgUAAAAAAADGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1669,
					1,
					"insert",
					{
						"characters": "3,"
					},
					"AgAAAMcFAAAAAAAAyAUAAAAAAAAAAAAAyAUAAAAAAADJBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwUAAAAAAADHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1670,
					1,
					"insert",
					{
						"characters": " byrow"
					},
					"BgAAAMkFAAAAAAAAygUAAAAAAAAAAAAAygUAAAAAAADLBQAAAAAAAAAAAADLBQAAAAAAAMwFAAAAAAAAAAAAAMwFAAAAAAAAzQUAAAAAAAAAAAAAzQUAAAAAAADOBQAAAAAAAAAAAADOBQAAAAAAAM8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQUAAAAAAADJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1671,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8FAAAAAAAA0AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwUAAAAAAADPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1672,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAMoFAAAAAAAAygUAAAAAAAAGAAAAYnlyb3cg",
					"AQAAAAAAAAABAAAA0AUAAAAAAADQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1673,
					2,
					"left_delete",
					null,
					"AgAAAMkFAAAAAAAAyQUAAAAAAAABAAAAIMgFAAAAAAAAyAUAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAygUAAAAAAADKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1674,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMgFAAAAAAAAyQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAUAAAAAAADIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1675,
					1,
					"insert",
					{
						"characters": " byrow"
					},
					"BgAAAMkFAAAAAAAAygUAAAAAAAAAAAAAygUAAAAAAADLBQAAAAAAAAAAAADLBQAAAAAAAMwFAAAAAAAAAAAAAMwFAAAAAAAAzQUAAAAAAAAAAAAAzQUAAAAAAADOBQAAAAAAAAAAAADOBQAAAAAAAM8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQUAAAAAAADJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1676,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAM8FAAAAAAAA0AUAAAAAAAAAAAAA0AUAAAAAAADRBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwUAAAAAAADPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1677,
					1,
					"insert",
					{
						"characters": " TURE"
					},
					"BQAAANEFAAAAAAAA0gUAAAAAAAAAAAAA0gUAAAAAAADTBQAAAAAAAAAAAADTBQAAAAAAANQFAAAAAAAAAAAAANQFAAAAAAAA1QUAAAAAAAAAAAAA1QUAAAAAAADWBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QUAAAAAAADRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1678,
					3,
					"left_delete",
					null,
					"AwAAANUFAAAAAAAA1QUAAAAAAAABAAAARdQFAAAAAAAA1AUAAAAAAAABAAAAUtMFAAAAAAAA0wUAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAA1gUAAAAAAADWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": "RUE)"
					},
					"BAAAANMFAAAAAAAA1AUAAAAAAAAAAAAA1AUAAAAAAADVBQAAAAAAAAAAAADVBQAAAAAAANYFAAAAAAAAAAAAANYFAAAAAAAA1wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wUAAAAAAADTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1683,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANcFAAAAAAAA2AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAP///////+9/"
				],
				[
					1687,
					1,
					"cut",
					null,
					"AQAAAB8KAAAAAAAAHwoAAAAAAAAXAAAAICBwYXIobWZyb3cgPSBjKDEsIDEpKQo",
					"AQAAAAAAAAABAAAANQoAAAAAAAA1CgAAAAAAAAAAAAAAAPC/"
				],
				[
					1688,
					1,
					"cut",
					null,
					"AQAAAB8KAAAAAAAAHwoAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAHwoAAAAAAAAfCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1689,
					4,
					"cut",
					null,
					"BAAAAB8KAAAAAAAAHwoAAAAAAAABAAAACh8KAAAAAAAAHwoAAAAAAAABAAAACh8KAAAAAAAAHwoAAAAAAAABAAAACh8KAAAAAAAAHwoAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAHwoAAAAAAAAfCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1700,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGgHAAAAAAAAaQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAcAAAAAAABoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1701,
					1,
					"insert",
					{
						"characters": "\nxlab"
					},
					"BgAAAGkHAAAAAAAAagcAAAAAAAAAAAAAagcAAAAAAAB0BwAAAAAAAAAAAAB0BwAAAAAAAHUHAAAAAAAAAAAAAHUHAAAAAAAAdgcAAAAAAAAAAAAAdgcAAAAAAAB3BwAAAAAAAAAAAAB3BwAAAAAAAHgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQcAAAAAAABpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHgHAAAAAAAAeQcAAAAAAAAAAAAAeQcAAAAAAAB6BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAcAAAAAAAB4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1703,
					1,
					"insert",
					{
						"characters": " \"N\""
					},
					"BAAAAHoHAAAAAAAAewcAAAAAAAAAAAAAewcAAAAAAAB8BwAAAAAAAAAAAAB8BwAAAAAAAH0HAAAAAAAAAAAAAH0HAAAAAAAAfgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegcAAAAAAAB6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1704,
					2,
					"left_delete",
					null,
					"AgAAAH0HAAAAAAAAfQcAAAAAAAABAAAAInwHAAAAAAAAfAcAAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAAfgcAAAAAAAB+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1705,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAHwHAAAAAAAAfQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAcAAAAAAAB8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1712,
					1,
					"image_paste",
					null,
					"AQAAACkIAAAAAAAAPggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQgAAAAAAAApCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1715,
					1,
					"image_paste",
					null,
					"AQAAAMsIAAAAAAAA4AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywgAAAAAAADLCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1718,
					1,
					"image_paste",
					null,
					"AQAAAFoJAAAAAAAAbwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgkAAAAAAABaCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1721,
					1,
					"image_paste",
					null,
					"AQAAAP8JAAAAAAAAFAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wkAAAAAAAD/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					1724,
					1,
					"image_paste",
					null,
					"AQAAAIUKAAAAAAAAmgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQoAAAAAAACFCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1728,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAH0HAAAAAAAAfgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQcAAAAAAAB9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1729,
					1,
					"insert",
					{
						"characters": " cex"
					},
					"BAAAAH4HAAAAAAAAfwcAAAAAAAAAAAAAfwcAAAAAAACABwAAAAAAAAAAAACABwAAAAAAAIEHAAAAAAAAAAAAAIEHAAAAAAAAggcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgcAAAAAAAB+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1730,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIIHAAAAAAAAgwcAAAAAAAAAAAAAgwcAAAAAAACEBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggcAAAAAAACCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1731,
					1,
					"insert",
					{
						"characters": " 1.5"
					},
					"BAAAAIQHAAAAAAAAhQcAAAAAAAAAAAAAhQcAAAAAAACGBwAAAAAAAAAAAACGBwAAAAAAAIcHAAAAAAAAAAAAAIcHAAAAAAAAiAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAcAAAAAAACEBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1738,
					1,
					"cut",
					null,
					"AQAAAKkKAAAAAAAAqQoAAAAAAAB/AwAAZ2V0X2NvbG9ycyA8LSBmdW5jdGlvbihsb2FkaW5ncykKewogIHJvd25hbWVzKGxvYWRpbmdzKQogIGNvbnZlcnNpb25fbWFwIDwtIG1hdHJpeChjKCJeYWxjb2hvbCsiICAgICAgLCByZ2IoMjA4LzI1NSwgMTA5LzI1NSwgMTc2LzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIl5hcGF0aHkrIiAgICAgICAsIHJnYigxMzUvMjU1LCAxMzUvMjU1LCAxMzUvMjU1KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiXnp1bmcrIiAgICAgICAgICwgcmdiKCA5OS8yNTUsIDE2MS8yNTUsICA2Mi8yNTUpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJeZWF0KyIgICAgICAgICAgLCByZ2IoMTI3LzI1NSwgIDcxLzI1NSwgIDM2LzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIl5hbnhpZXR5KyIgICAgICAsIHJnYigxNzYvMjU1LCAgMjkvMjU1LCAgMzMvMjU1KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiXmltcHVsc2l2ZW5lc3MrIiwgcmdiKDExNi8yNTUsICA1Ni8yNTUsIDE0Mi8yNTUpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJeb2NpcisiICAgICAgICAgLCByZ2IoMjEzLzI1NSwgMTEzLzI1NSwgIDMzLzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIl5zY2hpem8rIiAgICAgICAsIHJnYigyMDcvMjU1LCAyMTcvMjU1LCAgNTgvMjU1KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiXmxpZWJvd2l0eisiICAgICwgcmdiKCA3Mi8yNTUsIDEwMi8yNTUsIDE2Ni8yNTUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwgbmNvbCA9IDIsIGJ5cm93ID0gVFJVRSkKICBjb2xvcnMgPC0gcmVnX21hcChyb3duYW1lcyhsb2FkaW5ncyksIGNvbnZlcnNpb25fbWFwKQogIGNvbG9ycw",
					"AQAAAAAAAAABAAAAKA4AAAAAAACpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1741,
					3,
					"right_delete",
					null,
					"AwAAAKkKAAAAAAAAqQoAAAAAAADYAQAACn0KIG9fZmlnMyA8LSBjKCkKCiAgbGVuZ3RoKGdyZXAoImFsY29ob2wiLCByb3duYW1lcyhsb2FkaW5ncykpKQogIGxlbmd0aChncmVwKCJhcGF0aHkiLCByb3duYW1lcyhsb2FkaW5ncykpKQogIGxlbmd0aChncmVwKCJ6dW5nIiwgcm93bmFtZXMobG9hZGluZ3MpKSkKICBsZW5ndGgoZ3JlcCgiZWF0Iiwgcm93bmFtZXMobG9hZGluZ3MpKSkKICBsZW5ndGgoZ3JlcCgiYW54aWV0eSIsIHJvd25hbWVzKGxvYWRpbmdzKSkpCiAgbGVuZ3RoKGdyZXAoImltcHVsc2l2ZW5lc3MiLCByb3duYW1lcyhsb2FkaW5ncykpKQogIGxlbmd0aChncmVwKCJvY2lyIiwgcm93bmFtZXMobG9hZGluZ3MpKSkKICBsZW5ndGgoZ3JlcCgic2NoaXpvIiwgcm93bmFtZXMobG9hZGluZ3MpKSkKICBsZW5ndGgoZ3JlcCgibGllYm93aXR6Iiwgcm93bmFtZXMobG9hZGluZ3MpKSkKCiAgbGVuZ3RoKG9fZmlnMykKCgoKICBpbnZpc2libGUoZGV2Lm9mZigpKakKAAAAAAAAqQoAAAAAAAABAAAACqkKAAAAAAAAqQoAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAgQwAAAAAAACpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1742,
					1,
					"left_delete",
					null,
					"AQAAAKgKAAAAAAAAqAoAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAqQoAAAAAAACpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1743,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAKgKAAAAAAAAqQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAoAAAAAAACoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1744,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKkKAAAAAAAAqgoAAAAAAAAAAAAAqgoAAAAAAACrCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQoAAAAAAACpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1745,
					1,
					"image_paste",
					null,
					"AQAAAKsKAAAAAAAAKg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwoAAAAAAACrCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1746,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAACoOAAAAAAAAKw4AAAAAAAAAAAAAKw4AAAAAAAAtDgAAAAAAAAAAAAAtDgAAAAAAAC4OAAAAAAAAAAAAACsOAAAAAAAAKw4AAAAAAAACAAAAICArDgAAAAAAACsOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKg4AAAAAAAAqDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1778,
					1,
					"insert",
					{
						"characters": ".lab"
					},
					"BAAAAIIHAAAAAAAAgwcAAAAAAAAAAAAAgwcAAAAAAACEBwAAAAAAAAAAAACEBwAAAAAAAIUHAAAAAAAAAAAAAIUHAAAAAAAAhgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggcAAAAAAACCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1790,
					4,
					"left_delete",
					null,
					"BAAAAHcHAAAAAAAAdwcAAAAAAAABAAAAYnYHAAAAAAAAdgcAAAAAAAABAAAAYXUHAAAAAAAAdQcAAAAAAAABAAAAbHQHAAAAAAAAdAcAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAeAcAAAAAAAB4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1791,
					1,
					"insert",
					{
						"characters": "ylab"
					},
					"BAAAAHQHAAAAAAAAdQcAAAAAAAAAAAAAdQcAAAAAAAB2BwAAAAAAAAAAAAB2BwAAAAAAAHcHAAAAAAAAAAAAAHcHAAAAAAAAeAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAcAAAAAAAB0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1796,
					4,
					"left_delete",
					null,
					"BAAAAHcHAAAAAAAAdwcAAAAAAAABAAAAYnYHAAAAAAAAdgcAAAAAAAABAAAAYXUHAAAAAAAAdQcAAAAAAAABAAAAbHQHAAAAAAAAdAcAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAeAcAAAAAAAB4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1829,
					1,
					"insert",
					{
						"characters": "xlab"
					},
					"BAAAAHQHAAAAAAAAdQcAAAAAAAAAAAAAdQcAAAAAAAB2BwAAAAAAAAAAAAB2BwAAAAAAAHcHAAAAAAAAAAAAAHcHAAAAAAAAeAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAcAAAAAAAB0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1831,
					1,
					"insert",
					{
						"characters": "names.arg"
					},
					"CgAAAHQHAAAAAAAAdQcAAAAAAAAAAAAAdQcAAAAAAAB1BwAAAAAAAAQAAAB4bGFidQcAAAAAAAB2BwAAAAAAAAAAAAB2BwAAAAAAAHcHAAAAAAAAAAAAAHcHAAAAAAAAeAcAAAAAAAAAAAAAeAcAAAAAAAB5BwAAAAAAAAAAAAB5BwAAAAAAAHoHAAAAAAAAAAAAAHoHAAAAAAAAewcAAAAAAAAAAAAAewcAAAAAAAB8BwAAAAAAAAAAAAB8BwAAAAAAAH0HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAcAAAAAAAB0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1837,
					3,
					"left_delete",
					null,
					"AwAAAIoHAAAAAAAAigcAAAAAAAABAAAAYokHAAAAAAAAiQcAAAAAAAABAAAAYYgHAAAAAAAAiAcAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAiwcAAAAAAACLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1838,
					1,
					"insert",
					{
						"characters": "axis"
					},
					"BAAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACKBwAAAAAAAAAAAACKBwAAAAAAAIsHAAAAAAAAAAAAAIsHAAAAAAAAjAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAcAAAAAAACIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1848,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJIHAAAAAAAAkwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgcAAAAAAACSBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1849,
					1,
					"insert",
					{
						"characters": " ylim"
					},
					"BQAAAJMHAAAAAAAAlAcAAAAAAAAAAAAAlAcAAAAAAACVBwAAAAAAAAAAAACVBwAAAAAAAJYHAAAAAAAAAAAAAJYHAAAAAAAAlwcAAAAAAAAAAAAAlwcAAAAAAACYBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwcAAAAAAACTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1850,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJgHAAAAAAAAmQcAAAAAAAAAAAAAmQcAAAAAAACaBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAcAAAAAAACYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1851,
					1,
					"insert",
					{
						"characters": " c(-5,"
					},
					"BgAAAJoHAAAAAAAAmwcAAAAAAAAAAAAAmwcAAAAAAACcBwAAAAAAAAAAAACcBwAAAAAAAJ0HAAAAAAAAAAAAAJ0HAAAAAAAAngcAAAAAAAAAAAAAngcAAAAAAACfBwAAAAAAAAAAAACfBwAAAAAAAKAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgcAAAAAAACaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1852,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKAHAAAAAAAAoQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAcAAAAAAACgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1853,
					3,
					"left_delete",
					null,
					"AwAAAKAHAAAAAAAAoAcAAAAAAAABAAAAIJ8HAAAAAAAAnwcAAAAAAAABAAAALJ4HAAAAAAAAngcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAoQcAAAAAAAChBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1854,
					1,
					"insert",
					{
						"characters": ".5,"
					},
					"AwAAAJ4HAAAAAAAAnwcAAAAAAAAAAAAAnwcAAAAAAACgBwAAAAAAAAAAAACgBwAAAAAAAKEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngcAAAAAAACeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1855,
					1,
					"insert",
					{
						"characters": " +.50"
					},
					"BQAAAKEHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAACjBwAAAAAAAAAAAACjBwAAAAAAAKQHAAAAAAAAAAAAAKQHAAAAAAAApQcAAAAAAAAAAAAApQcAAAAAAACmBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQcAAAAAAAChBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1856,
					1,
					"left_delete",
					null,
					"AQAAAKUHAAAAAAAApQcAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAApgcAAAAAAACmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1859,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKYHAAAAAAAApwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgcAAAAAAACmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1865,
					1,
					"left_delete",
					null,
					"AQAAAJ8HAAAAAAAAnwcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAoAcAAAAAAACgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1866,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAJ8HAAAAAAAAoAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwcAAAAAAACfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1868,
					1,
					"right_delete",
					null,
					"AQAAAKQHAAAAAAAApAcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAApAcAAAAAAACkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1869,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAKQHAAAAAAAApQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAcAAAAAAACkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1879,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKYHAAAAAAAApwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgcAAAAAAACmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1880,
					1,
					"insert",
					{
						"characters": " cex.main"
					},
					"CQAAAKcHAAAAAAAAqAcAAAAAAAAAAAAAqAcAAAAAAACpBwAAAAAAAAAAAACpBwAAAAAAAKoHAAAAAAAAAAAAAKoHAAAAAAAAqwcAAAAAAAAAAAAAqwcAAAAAAACsBwAAAAAAAAAAAACsBwAAAAAAAK0HAAAAAAAAAAAAAK0HAAAAAAAArgcAAAAAAAAAAAAArgcAAAAAAACvBwAAAAAAAAAAAACvBwAAAAAAALAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwcAAAAAAACnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1881,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALAHAAAAAAAAsQcAAAAAAAAAAAAAsQcAAAAAAACyBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAcAAAAAAACwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1882,
					1,
					"insert",
					{
						"characters": " 1.5"
					},
					"BAAAALIHAAAAAAAAswcAAAAAAAAAAAAAswcAAAAAAAC0BwAAAAAAAAAAAAC0BwAAAAAAALUHAAAAAAAAAAAAALUHAAAAAAAAtgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgcAAAAAAACyBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1889,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AgAAAJMHAAAAAAAAlAcAAAAAAAAAAAAAlAcAAAAAAACUBwAAAAAAABMAAAAgeWxpbSA9IGMoLS42LCArLjYp",
					"AQAAAAAAAAABAAAApgcAAAAAAACTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1890,
					1,
					"left_delete",
					null,
					"AQAAAJMHAAAAAAAAkwcAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAlAcAAAAAAACUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1891,
					1,
					"insert",
					{
						"characters": " y-a"
					},
					"BAAAAJMHAAAAAAAAlAcAAAAAAAAAAAAAlAcAAAAAAACVBwAAAAAAAAAAAACVBwAAAAAAAJYHAAAAAAAAAAAAAJYHAAAAAAAAlwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwcAAAAAAACTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1892,
					2,
					"left_delete",
					null,
					"AgAAAJYHAAAAAAAAlgcAAAAAAAABAAAAYZUHAAAAAAAAlQcAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAlwcAAAAAAACXBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1893,
					1,
					"insert",
					{
						"characters": "axt"
					},
					"AwAAAJUHAAAAAAAAlgcAAAAAAAAAAAAAlgcAAAAAAACXBwAAAAAAAAAAAACXBwAAAAAAAJgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQcAAAAAAACVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1894,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJgHAAAAAAAAmQcAAAAAAAAAAAAAmQcAAAAAAACaBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAcAAAAAAACYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1895,
					1,
					"insert",
					{
						"characters": " \"n\""
					},
					"BAAAAJoHAAAAAAAAmwcAAAAAAAAAAAAAmwcAAAAAAACcBwAAAAAAAAAAAACcBwAAAAAAAJ0HAAAAAAAAAAAAAJ0HAAAAAAAAngcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgcAAAAAAACaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1902,
					1,
					"insert",
					{
						"characters": "\naxiis"
					},
					"CQAAAK8HAAAAAAAAsAcAAAAAAAAAAAAAsAcAAAAAAAC6BwAAAAAAAAAAAACwBwAAAAAAALAHAAAAAAAACgAAACAgICAgICAgICCwBwAAAAAAALIHAAAAAAAAAAAAALIHAAAAAAAAswcAAAAAAAAAAAAAswcAAAAAAAC0BwAAAAAAAAAAAAC0BwAAAAAAALUHAAAAAAAAAAAAALUHAAAAAAAAtgcAAAAAAAAAAAAAtgcAAAAAAAC3BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwcAAAAAAACvBwAAAAAAAP///////+9/"
				],
				[
					1903,
					2,
					"left_delete",
					null,
					"AgAAALYHAAAAAAAAtgcAAAAAAAABAAAAc7UHAAAAAAAAtQcAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAtwcAAAAAAAC3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1904,
					1,
					"insert",
					{
						"characters": "s(2,"
					},
					"BAAAALUHAAAAAAAAtgcAAAAAAAAAAAAAtgcAAAAAAAC3BwAAAAAAAAAAAAC3BwAAAAAAALgHAAAAAAAAAAAAALgHAAAAAAAAuQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQcAAAAAAAC1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1905,
					1,
					"insert",
					{
						"characters": " at"
					},
					"AwAAALkHAAAAAAAAugcAAAAAAAAAAAAAugcAAAAAAAC7BwAAAAAAAAAAAAC7BwAAAAAAALwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQcAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1906,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALwHAAAAAAAAvQcAAAAAAAAAAAAAvQcAAAAAAAC+BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAcAAAAAAAC8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1907,
					1,
					"insert",
					{
						"characters": " c(0"
					},
					"BAAAAL4HAAAAAAAAvwcAAAAAAAAAAAAAvwcAAAAAAADABwAAAAAAAAAAAADABwAAAAAAAMEHAAAAAAAAAAAAAMEHAAAAAAAAwgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgcAAAAAAAC+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1908,
					1,
					"left_delete",
					null,
					"AQAAAMEHAAAAAAAAwQcAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAwgcAAAAAAADCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1909,
					1,
					"insert",
					{
						"characters": "-0.5,"
					},
					"BQAAAMEHAAAAAAAAwgcAAAAAAAAAAAAAwgcAAAAAAADDBwAAAAAAAAAAAADDBwAAAAAAAMQHAAAAAAAAAAAAAMQHAAAAAAAAxQcAAAAAAAAAAAAAxQcAAAAAAADGBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQcAAAAAAADBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1910,
					1,
					"insert",
					{
						"characters": " 0.0,"
					},
					"BQAAAMYHAAAAAAAAxwcAAAAAAAAAAAAAxwcAAAAAAADIBwAAAAAAAAAAAADIBwAAAAAAAMkHAAAAAAAAAAAAAMkHAAAAAAAAygcAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgcAAAAAAADGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1911,
					1,
					"insert",
					{
						"characters": " +0.5))"
					},
					"BwAAAMsHAAAAAAAAzAcAAAAAAAAAAAAAzAcAAAAAAADNBwAAAAAAAAAAAADNBwAAAAAAAM4HAAAAAAAAAAAAAM4HAAAAAAAAzwcAAAAAAAAAAAAAzwcAAAAAAADQBwAAAAAAAAAAAADQBwAAAAAAANEHAAAAAAAAAAAAANEHAAAAAAAA0gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1916,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANEHAAAAAAAA0gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QcAAAAAAADRBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1917,
					1,
					"insert",
					{
						"characters": " cex.axis"
					},
					"CQAAANIHAAAAAAAA0wcAAAAAAAAAAAAA0wcAAAAAAADUBwAAAAAAAAAAAADUBwAAAAAAANUHAAAAAAAAAAAAANUHAAAAAAAA1gcAAAAAAAAAAAAA1gcAAAAAAADXBwAAAAAAAAAAAADXBwAAAAAAANgHAAAAAAAAAAAAANgHAAAAAAAA2QcAAAAAAAAAAAAA2QcAAAAAAADaBwAAAAAAAAAAAADaBwAAAAAAANsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gcAAAAAAADSBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1918,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANsHAAAAAAAA3AcAAAAAAAAAAAAA3AcAAAAAAADdBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wcAAAAAAADbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1919,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAN0HAAAAAAAA3gcAAAAAAAAAAAAA3gcAAAAAAADfBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QcAAAAAAADdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1920,
					1,
					"left_delete",
					null,
					"AQAAAN4HAAAAAAAA3gcAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA3wcAAAAAAADfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1921,
					1,
					"insert",
					{
						"characters": "1.5"
					},
					"AwAAAN4HAAAAAAAA3wcAAAAAAAAAAAAA3wcAAAAAAADgBwAAAAAAAAAAAADgBwAAAAAAAOEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gcAAAAAAADeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1926,
					1,
					"left_delete",
					null,
					"AQAAAIQHAAAAAAAAhAcAAAAAAAAQAAAAY2V4LmF4aXMgPSAxLjUsIA",
					"AQAAAAAAAAABAAAAlAcAAAAAAACEBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1935,
					1,
					"insert",
					{
						"characters": " ylim"
					},
					"BQAAAI8HAAAAAAAAkAcAAAAAAAAAAAAAkAcAAAAAAACRBwAAAAAAAAAAAACRBwAAAAAAAJIHAAAAAAAAAAAAAJIHAAAAAAAAkwcAAAAAAAAAAAAAkwcAAAAAAACUBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwcAAAAAAACPBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1936,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACWBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAcAAAAAAACUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1937,
					1,
					"insert",
					{
						"characters": " c(-0.5,"
					},
					"CAAAAJYHAAAAAAAAlwcAAAAAAAAAAAAAlwcAAAAAAACYBwAAAAAAAAAAAACYBwAAAAAAAJkHAAAAAAAAAAAAAJkHAAAAAAAAmgcAAAAAAAAAAAAAmgcAAAAAAACbBwAAAAAAAAAAAACbBwAAAAAAAJwHAAAAAAAAAAAAAJwHAAAAAAAAnQcAAAAAAAAAAAAAnQcAAAAAAACeBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgcAAAAAAACWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1938,
					1,
					"insert",
					{
						"characters": " +0.5),"
					},
					"BwAAAJ4HAAAAAAAAnwcAAAAAAAAAAAAAnwcAAAAAAACgBwAAAAAAAAAAAACgBwAAAAAAAKEHAAAAAAAAAAAAAKEHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAACjBwAAAAAAAAAAAACjBwAAAAAAAKQHAAAAAAAAAAAAAKQHAAAAAAAApQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngcAAAAAAACeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1946,
					1,
					"right_delete",
					null,
					"AQAAAJwHAAAAAAAAnAcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAnAcAAAAAAACcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1947,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAJwHAAAAAAAAnQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAcAAAAAAACcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1951,
					1,
					"left_delete",
					null,
					"AQAAAKIHAAAAAAAAogcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAowcAAAAAAACjBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1952,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAKIHAAAAAAAAowcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogcAAAAAAACiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1962,
					1,
					"image_paste",
					null,
					"AgAAAJQIAAAAAAAAEwkAAAAAAAAAAAAAEwkAAAAAAAATCQAAAAAAABUAAAAKICAgICAgICAgIHhsYWIgPSAiIik",
					"AQAAAAAAAAABAAAAqQgAAAAAAACUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1965,
					1,
					"image_paste",
					null,
					"AgAAAKAJAAAAAAAAHwoAAAAAAAAAAAAAHwoAAAAAAAAfCgAAAAAAABUAAAAKICAgICAgICAgIHhsYWIgPSAiIik",
					"AQAAAAAAAAABAAAAtQkAAAAAAACgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1968,
					1,
					"image_paste",
					null,
					"AgAAAJkKAAAAAAAAGAsAAAAAAAAAAAAAGAsAAAAAAAAYCwAAAAAAABUAAAAKICAgICAgICAgIHhsYWIgPSAiIik",
					"AQAAAAAAAAABAAAArgoAAAAAAACZCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1971,
					1,
					"image_paste",
					null,
					"AgAAAKgLAAAAAAAAJwwAAAAAAAAAAAAAJwwAAAAAAAAnDAAAAAAAABUAAAAKICAgICAgICAgIHhsYWIgPSAiIik",
					"AQAAAAAAAAABAAAAvQsAAAAAAACoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1974,
					1,
					"image_paste",
					null,
					"AgAAAJgMAAAAAAAAFw0AAAAAAAAAAAAAFw0AAAAAAAAXDQAAAAAAABUAAAAKICAgICAgICAgIHhsYWIgPSAiIik",
					"AQAAAAAAAAABAAAArQwAAAAAAACYDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1977,
					1,
					"cut",
					null,
					"AQAAANkFAAAAAAAA2QUAAAAAAAD6AAAACiAgbG9hZGluZ3NfMV9zb3J0ZWRfc3BhY2VkIDwtIGxvYWRpbmdzXzIqMAogIGZvciAoaSBpbiAxOm5yb3cobG9hZGluZ3NfMikpCiAgewogICAgbiA8LSByb3duYW1lcyhsb2FkaW5nc18yKVtpXQogICAgaWR4IDwtIHdoaWNoKG4gPT0gcm93bmFtZXMobG9hZGluZ3NfMV9zb3J0ZWQpKQogICAgaWYgKGxlbmd0aChpZHgpID4gMCkgbG9hZGluZ3NfMV9zb3J0ZWRfc3BhY2VkW2ksIF0gPC0gbG9hZGluZ3NfMV9zb3J0ZWRbaWR4LCBdCiAgfQ",
					"AQAAAAAAAAABAAAA0wYAAAAAAADZBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1978,
					1,
					"right_delete",
					null,
					"AQAAANkFAAAAAAAA2QUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA2QUAAAAAAADZBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1980,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADQFAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAA2BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAUAAAAAAAA0BQAAAAAAAAAAAAAAAAAA"
				],
				[
					1982,
					1,
					"image_paste",
					null,
					"AQAAADUFAAAAAAAALwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQUAAAAAAAA1BQAAAAAAAAAAAAAAAAAA"
				],
				[
					1985,
					1,
					"cut",
					null,
					"AQAAADUFAAAAAAAANQUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAANQUAAAAAAAA1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1990,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJEBAAAAAAAAkgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQEAAAAAAACRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1991,
					1,
					"reindent",
					null,
					"AQAAAJIBAAAAAAAAlAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgEAAAAAAACSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1992,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAJQBAAAAAAAAlQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAEAAAAAAACUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1993,
					1,
					"insert",
					{
						"characters": " Preparing"
					},
					"CgAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACXAQAAAAAAAAAAAACXAQAAAAAAAJgBAAAAAAAAAAAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACaAQAAAAAAAAAAAACaAQAAAAAAAJsBAAAAAAAAAAAAAJsBAAAAAAAAnAEAAAAAAAAAAAAAnAEAAAAAAACdAQAAAAAAAAAAAACdAQAAAAAAAJ4BAAAAAAAAAAAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1994,
					1,
					"insert",
					{
						"characters": " lo"
					},
					"AwAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAChAQAAAAAAAKIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwEAAAAAAACfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1995,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAKABAAAAAAAAoAEAAAAAAAACAAAAbG8",
					"AQAAAAAAAAABAAAAogEAAAAAAACiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1996,
					1,
					"insert",
					{
						"characters": "loadings"
					},
					"CAAAAKABAAAAAAAAoQEAAAAAAAAAAAAAoQEAAAAAAACiAQAAAAAAAAAAAACiAQAAAAAAAKMBAAAAAAAAAAAAAKMBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAEAAAAAAACgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1997,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAKgBAAAAAAAAqQEAAAAAAAAAAAAAqQEAAAAAAACqAQAAAAAAAAAAAACqAQAAAAAAAKsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAEAAAAAAACoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1998,
					1,
					"insert",
					{
						"characters": " experiment"
					},
					"CwAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAACtAQAAAAAAAK4BAAAAAAAAAAAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAACwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACzAQAAAAAAALQBAAAAAAAAAAAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwEAAAAAAACrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2000,
					1,
					"right_delete",
					null,
					"AQAAAKwBAAAAAAAArAEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAArAEAAAAAAACsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2001,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAKwBAAAAAAAArQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAEAAAAAAACsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2003,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgEAAAAAAAC2AQAAAAAAAP///////+9/"
				],
				[
					2004,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALgBAAAAAAAAuQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAEAAAAAAAC4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2005,
					2,
					"left_delete",
					null,
					"AgAAALgBAAAAAAAAuAEAAAAAAAABAAAAILcBAAAAAAAAtwEAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAuQEAAAAAAAC5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2006,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAALcBAAAAAAAAuAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2007,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAALgBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAAC6AQAAAAAAAAAAAAC6AQAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAEAAAAAAAC4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2008,
					1,
					"insert",
					{
						"characters": " be"
					},
					"AwAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2009,
					1,
					"insert",
					{
						"characters": " comparable"
					},
					"CwAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAADAAQAAAAAAAMEBAAAAAAAAAAAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAMQBAAAAAAAAxQEAAAAAAAAAAAAAxQEAAAAAAADGAQAAAAAAAAAAAADGAQAAAAAAAMcBAAAAAAAAAAAAAMcBAAAAAAAAyAEAAAAAAAAAAAAAyAEAAAAAAADJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2010,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQEAAAAAAADJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2011,
					1,
					"insert",
					{
						"characters": " those"
					},
					"BgAAAMwBAAAAAAAAzQEAAAAAAAAAAAAAzQEAAAAAAADOAQAAAAAAAAAAAADOAQAAAAAAAM8BAAAAAAAAAAAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAADRAQAAAAAAANIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAEAAAAAAADMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2012,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAANIBAAAAAAAA0wEAAAAAAAAAAAAA0wEAAAAAAADUAQAAAAAAAAAAAADUAQAAAAAAANUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gEAAAAAAADSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2013,
					1,
					"insert",
					{
						"characters": " Experimetn"
					},
					"CwAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADXAQAAAAAAAAAAAADXAQAAAAAAANgBAAAAAAAAAAAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAADaAQAAAAAAANsBAAAAAAAAAAAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QEAAAAAAADVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2014,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAOABAAAAAAAA4QEAAAAAAAAAAAAA4QEAAAAAAADiAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AEAAAAAAADgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2015,
					4,
					"left_delete",
					null,
					"BAAAAOEBAAAAAAAA4QEAAAAAAAABAAAAMuABAAAAAAAA4AEAAAAAAAABAAAAIN8BAAAAAAAA3wEAAAAAAAABAAAAbt4BAAAAAAAA3gEAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA4gEAAAAAAADiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2016,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gEAAAAAAADeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2017,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAOABAAAAAAAA4QEAAAAAAAAAAAAA4QEAAAAAAADiAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AEAAAAAAADgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2057,
					1,
					"cut",
					null,
					"AQAAAJANAAAAAAAAkA0AAAAAAAAVAAAAICByb3duYW1lcyhsb2FkaW5ncykK",
					"AQAAAAAAAAABAAAAnA0AAAAAAACcDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2071,
					1,
					"cut",
					null,
					"AQAAAJANAAAAAAAAkA0AAAAAAAAGAwAAICBjb252ZXJzaW9uX21hcCA8LSBtYXRyaXgoYygiXmFsY29ob2wrIiAgICAgICwgcmdiKDIwOC8yNTUsIDEwOS8yNTUsIDE3Ni8yNTUpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJeYXBhdGh5KyIgICAgICAgLCByZ2IoMTM1LzI1NSwgMTM1LzI1NSwgMTM1LzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIl56dW5nKyIgICAgICAgICAsIHJnYiggOTkvMjU1LCAxNjEvMjU1LCAgNjIvMjU1KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiXmVhdCsiICAgICAgICAgICwgcmdiKDEyNy8yNTUsICA3MS8yNTUsICAzNi8yNTUpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJeYW54aWV0eSsiICAgICAgLCByZ2IoMTc2LzI1NSwgIDI5LzI1NSwgIDMzLzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIl5pbXB1bHNpdmVuZXNzKyIsIHJnYigxMTYvMjU1LCAgNTYvMjU1LCAxNDIvMjU1KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiXm9jaXIrIiAgICAgICAgICwgcmdiKDIxMy8yNTUsIDExMy8yNTUsICAzMy8yNTUpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJec2NoaXpvKyIgICAgICAgLCByZ2IoMjA3LzI1NSwgMjE3LzI1NSwgIDU4LzI1NSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIl5saWVib3dpdHorIiAgICAsIHJnYiggNzIvMjU1LCAxMDIvMjU1LCAxNjYvMjU1KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICksIG5jb2wgPSAyLCBieXJvdyA9IFRSVUUp",
					"AQAAAAAAAAABAAAAlhAAAAAAAACQDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2076,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGsNAAAAAAAAbA0AAAAAAAAAAAAAbA0AAAAAAABtDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaw0AAAAAAABrDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2077,
					1,
					"image_paste",
					null,
					"AQAAAG0NAAAAAAAAcxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQ0AAAAAAABtDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2080,
					1,
					"unindent",
					null,
					"CgAAAG0NAAAAAAAAbQ0AAAAAAAACAAAAICC7DQAAAAAAALsNAAAAAAAAAgAAACAgCQ4AAAAAAAAJDgAAAAAAAAIAAAAgIFcOAAAAAAAAVw4AAAAAAAACAAAAICClDgAAAAAAAKUOAAAAAAAAAgAAACAg8w4AAAAAAADzDgAAAAAAAAIAAAAgIEEPAAAAAAAAQQ8AAAAAAAACAAAAICCPDwAAAAAAAI8PAAAAAAAAAgAAACAg3Q8AAAAAAADdDwAAAAAAAAIAAAAgICoQAAAAAAAAKhAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAcxAAAAAAAABtDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2095,
					1,
					"insert",
					{
						"characters": "\nlegend("
					},
					"CQAAAGgNAAAAAAAAaQ0AAAAAAAAAAAAAaQ0AAAAAAABrDQAAAAAAAAAAAABrDQAAAAAAAGwNAAAAAAAAAAAAAGwNAAAAAAAAbQ0AAAAAAAAAAAAAbQ0AAAAAAABuDQAAAAAAAAAAAABuDQAAAAAAAG8NAAAAAAAAAAAAAG8NAAAAAAAAcA0AAAAAAAAAAAAAcA0AAAAAAABxDQAAAAAAAAAAAABxDQAAAAAAAHINAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaA0AAAAAAABoDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2096,
					1,
					"insert",
					{
						"characters": "\"btto"
					},
					"BQAAAHINAAAAAAAAcw0AAAAAAAAAAAAAcw0AAAAAAAB0DQAAAAAAAAAAAAB0DQAAAAAAAHUNAAAAAAAAAAAAAHUNAAAAAAAAdg0AAAAAAAAAAAAAdg0AAAAAAAB3DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcg0AAAAAAAByDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2097,
					3,
					"left_delete",
					null,
					"AwAAAHYNAAAAAAAAdg0AAAAAAAABAAAAb3UNAAAAAAAAdQ0AAAAAAAABAAAAdHQNAAAAAAAAdA0AAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAdw0AAAAAAAB3DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2098,
					1,
					"insert",
					{
						"characters": "ottom\","
					},
					"BwAAAHQNAAAAAAAAdQ0AAAAAAAAAAAAAdQ0AAAAAAAB2DQAAAAAAAAAAAAB2DQAAAAAAAHcNAAAAAAAAAAAAAHcNAAAAAAAAeA0AAAAAAAAAAAAAeA0AAAAAAAB5DQAAAAAAAAAAAAB5DQAAAAAAAHoNAAAAAAAAAAAAAHoNAAAAAAAAew0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA0AAAAAAAB0DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2099,
					1,
					"insert",
					{
						"characters": "\nfilll"
					},
					"CQAAAHsNAAAAAAAAfA0AAAAAAAAAAAAAfA0AAAAAAAB+DQAAAAAAAAAAAAB8DQAAAAAAAHwNAAAAAAAAAgAAACAgfA0AAAAAAACFDQAAAAAAAAAAAACFDQAAAAAAAIYNAAAAAAAAAAAAAIYNAAAAAAAAhw0AAAAAAAAAAAAAhw0AAAAAAACIDQAAAAAAAAAAAACIDQAAAAAAAIkNAAAAAAAAAAAAAIkNAAAAAAAAig0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAew0AAAAAAAB7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2100,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIoNAAAAAAAAiw0AAAAAAAAAAAAAiw0AAAAAAACMDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAig0AAAAAAACKDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2101,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwNAAAAAAAAjQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjA0AAAAAAACMDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2110,
					1,
					"right_delete",
					null,
					"AQAAAIkNAAAAAAAAiQ0AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAiQ0AAAAAAACJDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2112,
					1,
					"insert",
					{
						"characters": "conversion_map[,"
					},
					"EAAAAIwNAAAAAAAAjQ0AAAAAAAAAAAAAjQ0AAAAAAACODQAAAAAAAAAAAACODQAAAAAAAI8NAAAAAAAAAAAAAI8NAAAAAAAAkA0AAAAAAAAAAAAAkA0AAAAAAACRDQAAAAAAAAAAAACRDQAAAAAAAJINAAAAAAAAAAAAAJINAAAAAAAAkw0AAAAAAAAAAAAAkw0AAAAAAACUDQAAAAAAAAAAAACUDQAAAAAAAJUNAAAAAAAAAAAAAJUNAAAAAAAAlg0AAAAAAAAAAAAAlg0AAAAAAACXDQAAAAAAAAAAAACXDQAAAAAAAJgNAAAAAAAAAAAAAJgNAAAAAAAAmQ0AAAAAAAAAAAAAmQ0AAAAAAACaDQAAAAAAAAAAAACaDQAAAAAAAJsNAAAAAAAAAAAAAJsNAAAAAAAAnA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjA0AAAAAAACMDQAAAAAAAP///////+9/"
				],
				[
					2113,
					1,
					"insert",
					{
						"characters": "2])"
					},
					"AwAAAJwNAAAAAAAAnQ0AAAAAAAAAAAAAnQ0AAAAAAACeDQAAAAAAAAAAAACeDQAAAAAAAJ8NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnA0AAAAAAACcDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2119,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ4NAAAAAAAAnw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAng0AAAAAAACeDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2120,
					1,
					"insert",
					{
						"characters": "\nlegend"
					},
					"CAAAAJ8NAAAAAAAAoA0AAAAAAAAAAAAAoA0AAAAAAACpDQAAAAAAAAAAAACpDQAAAAAAAKoNAAAAAAAAAAAAAKoNAAAAAAAAqw0AAAAAAAAAAAAAqw0AAAAAAACsDQAAAAAAAAAAAACsDQAAAAAAAK0NAAAAAAAAAAAAAK0NAAAAAAAArg0AAAAAAAAAAAAArg0AAAAAAACvDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnw0AAAAAAACfDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2121,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAK8NAAAAAAAAsA0AAAAAAAAAAAAAsA0AAAAAAACxDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArw0AAAAAAACvDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2122,
					1,
					"insert",
					{
						"characters": " c()"
					},
					"BAAAALENAAAAAAAAsg0AAAAAAAAAAAAAsg0AAAAAAACzDQAAAAAAAAAAAACzDQAAAAAAALQNAAAAAAAAAAAAALQNAAAAAAAAtQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQ0AAAAAAACxDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2124,
					1,
					"insert",
					{
						"characters": "\"Alo"
					},
					"BAAAALQNAAAAAAAAtQ0AAAAAAAAAAAAAtQ0AAAAAAAC2DQAAAAAAAAAAAAC2DQAAAAAAALcNAAAAAAAAAAAAALcNAAAAAAAAuA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtA0AAAAAAAC0DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2125,
					1,
					"left_delete",
					null,
					"AQAAALcNAAAAAAAAtw0AAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAuA0AAAAAAAC4DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2126,
					1,
					"insert",
					{
						"characters": "coholism\","
					},
					"CgAAALcNAAAAAAAAuA0AAAAAAAAAAAAAuA0AAAAAAAC5DQAAAAAAAAAAAAC5DQAAAAAAALoNAAAAAAAAAAAAALoNAAAAAAAAuw0AAAAAAAAAAAAAuw0AAAAAAAC8DQAAAAAAAAAAAAC8DQAAAAAAAL0NAAAAAAAAAAAAAL0NAAAAAAAAvg0AAAAAAAAAAAAAvg0AAAAAAAC/DQAAAAAAAAAAAAC/DQAAAAAAAMANAAAAAAAAAAAAAMANAAAAAAAAwQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtw0AAAAAAAC3DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2127,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMENAAAAAAAAwg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQ0AAAAAAADBDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2128,
					1,
					"left_delete",
					null,
					"AQAAAMENAAAAAAAAwQ0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAwg0AAAAAAADCDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2129,
					1,
					"insert",
					{
						"characters": "\n\":"
					},
					"BgAAAMENAAAAAAAAwg0AAAAAAAAAAAAAwg0AAAAAAADLDQAAAAAAAAAAAADCDQAAAAAAAMINAAAAAAAACQAAACAgICAgICAgIMINAAAAAAAA1g0AAAAAAAAAAAAA1g0AAAAAAADXDQAAAAAAAAAAAADXDQAAAAAAANgNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQ0AAAAAAADBDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2130,
					1,
					"left_delete",
					null,
					"AQAAANcNAAAAAAAA1w0AAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA2A0AAAAAAADYDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2131,
					1,
					"insert",
					{
						"characters": "Apathy\","
					},
					"CAAAANcNAAAAAAAA2A0AAAAAAAAAAAAA2A0AAAAAAADZDQAAAAAAAAAAAADZDQAAAAAAANoNAAAAAAAAAAAAANoNAAAAAAAA2w0AAAAAAAAAAAAA2w0AAAAAAADcDQAAAAAAAAAAAADcDQAAAAAAAN0NAAAAAAAAAAAAAN0NAAAAAAAA3g0AAAAAAAAAAAAA3g0AAAAAAADfDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1w0AAAAAAADXDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2132,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN8NAAAAAAAA4A0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3w0AAAAAAADfDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2133,
					1,
					"left_delete",
					null,
					"AQAAAN8NAAAAAAAA3w0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA4A0AAAAAAADgDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2134,
					1,
					"insert",
					{
						"characters": "\n\"Depression"
					},
					"DQAAAN8NAAAAAAAA4A0AAAAAAAAAAAAA4A0AAAAAAAD0DQAAAAAAAAAAAAD0DQAAAAAAAPUNAAAAAAAAAAAAAPUNAAAAAAAA9g0AAAAAAAAAAAAA9g0AAAAAAAD3DQAAAAAAAAAAAAD3DQAAAAAAAPgNAAAAAAAAAAAAAPgNAAAAAAAA+Q0AAAAAAAAAAAAA+Q0AAAAAAAD6DQAAAAAAAAAAAAD6DQAAAAAAAPsNAAAAAAAAAAAAAPsNAAAAAAAA/A0AAAAAAAAAAAAA/A0AAAAAAAD9DQAAAAAAAAAAAAD9DQAAAAAAAP4NAAAAAAAAAAAAAP4NAAAAAAAA/w0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3w0AAAAAAADfDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2135,
					1,
					"insert",
					{
						"characters": "\","
					},
					"AgAAAP8NAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAABDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/w0AAAAAAAD/DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2136,
					1,
					"insert",
					{
						"characters": "\n\"Eating"
					},
					"CQAAAAEOAAAAAAAAAg4AAAAAAAAAAAAAAg4AAAAAAAAWDgAAAAAAAAAAAAAWDgAAAAAAABcOAAAAAAAAAAAAABcOAAAAAAAAGA4AAAAAAAAAAAAAGA4AAAAAAAAZDgAAAAAAAAAAAAAZDgAAAAAAABoOAAAAAAAAAAAAABoOAAAAAAAAGw4AAAAAAAAAAAAAGw4AAAAAAAAcDgAAAAAAAAAAAAAcDgAAAAAAAB0OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQ4AAAAAAAABDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2137,
					1,
					"insert",
					{
						"characters": " Disoc"
					},
					"BgAAAB0OAAAAAAAAHg4AAAAAAAAAAAAAHg4AAAAAAAAfDgAAAAAAAAAAAAAfDgAAAAAAACAOAAAAAAAAAAAAACAOAAAAAAAAIQ4AAAAAAAAAAAAAIQ4AAAAAAAAiDgAAAAAAAAAAAAAiDgAAAAAAACMOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQ4AAAAAAAAdDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2138,
					1,
					"left_delete",
					null,
					"AQAAACIOAAAAAAAAIg4AAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAIw4AAAAAAAAjDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2139,
					1,
					"insert",
					{
						"characters": "rders\","
					},
					"BwAAACIOAAAAAAAAIw4AAAAAAAAAAAAAIw4AAAAAAAAkDgAAAAAAAAAAAAAkDgAAAAAAACUOAAAAAAAAAAAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAAnDgAAAAAAACgOAAAAAAAAAAAAACgOAAAAAAAAKQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIg4AAAAAAAAiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2140,
					1,
					"insert",
					{
						"characters": "\n\"Generali"
					},
					"CwAAACkOAAAAAAAAKg4AAAAAAAAAAAAAKg4AAAAAAAA+DgAAAAAAAAAAAAA+DgAAAAAAAD8OAAAAAAAAAAAAAD8OAAAAAAAAQA4AAAAAAAAAAAAAQA4AAAAAAABBDgAAAAAAAAAAAABBDgAAAAAAAEIOAAAAAAAAAAAAAEIOAAAAAAAAQw4AAAAAAAAAAAAAQw4AAAAAAABEDgAAAAAAAAAAAABEDgAAAAAAAEUOAAAAAAAAAAAAAEUOAAAAAAAARg4AAAAAAAAAAAAARg4AAAAAAABHDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQ4AAAAAAAApDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2141,
					1,
					"insert",
					{
						"characters": "zed"
					},
					"AwAAAEcOAAAAAAAASA4AAAAAAAAAAAAASA4AAAAAAABJDgAAAAAAAAAAAABJDgAAAAAAAEoOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARw4AAAAAAABHDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2142,
					1,
					"insert",
					{
						"characters": " Anxiety\","
					},
					"CgAAAEoOAAAAAAAASw4AAAAAAAAAAAAASw4AAAAAAABMDgAAAAAAAAAAAABMDgAAAAAAAE0OAAAAAAAAAAAAAE0OAAAAAAAATg4AAAAAAAAAAAAATg4AAAAAAABPDgAAAAAAAAAAAABPDgAAAAAAAFAOAAAAAAAAAAAAAFAOAAAAAAAAUQ4AAAAAAAAAAAAAUQ4AAAAAAABSDgAAAAAAAAAAAABSDgAAAAAAAFMOAAAAAAAAAAAAAFMOAAAAAAAAVA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASg4AAAAAAABKDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2143,
					1,
					"insert",
					{
						"characters": "\nImpu"
					},
					"BgAAAFQOAAAAAAAAVQ4AAAAAAAAAAAAAVQ4AAAAAAABpDgAAAAAAAAAAAABpDgAAAAAAAGoOAAAAAAAAAAAAAGoOAAAAAAAAaw4AAAAAAAAAAAAAaw4AAAAAAABsDgAAAAAAAAAAAABsDgAAAAAAAG0OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVA4AAAAAAABUDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2144,
					1,
					"insert",
					{
						"characters": "lsivity\""
					},
					"CAAAAG0OAAAAAAAAbg4AAAAAAAAAAAAAbg4AAAAAAABvDgAAAAAAAAAAAABvDgAAAAAAAHAOAAAAAAAAAAAAAHAOAAAAAAAAcQ4AAAAAAAAAAAAAcQ4AAAAAAAByDgAAAAAAAAAAAAByDgAAAAAAAHMOAAAAAAAAAAAAAHMOAAAAAAAAdA4AAAAAAAAAAAAAdA4AAAAAAAB1DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQ4AAAAAAABtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2146,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAGkOAAAAAAAAag4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQ4AAAAAAABpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2150,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHYOAAAAAAAAdw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdg4AAAAAAAB2DgAAAAAAAAAAAAAAAPC/"
				],
				[
					2151,
					1,
					"insert",
					{
						"characters": "\n\"OCD\""
					},
					"BwAAAHcOAAAAAAAAeA4AAAAAAAAAAAAAeA4AAAAAAACMDgAAAAAAAAAAAACMDgAAAAAAAI0OAAAAAAAAAAAAAI0OAAAAAAAAjg4AAAAAAAAAAAAAjg4AAAAAAACPDgAAAAAAAAAAAACPDgAAAAAAAJAOAAAAAAAAAAAAAJAOAAAAAAAAkQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdw4AAAAAAAB3DgAAAAAAAAAAAAAAAPC/"
				],
				[
					2152,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJEOAAAAAAAAkg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQ4AAAAAAACRDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2153,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIOAAAAAAAAkw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkg4AAAAAAACSDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2154,
					1,
					"insert",
					{
						"characters": "\n\"Schizotyp"
					},
					"DAAAAJMOAAAAAAAAlA4AAAAAAAAAAAAAlA4AAAAAAACoDgAAAAAAAAAAAACoDgAAAAAAAKkOAAAAAAAAAAAAAKkOAAAAAAAAqg4AAAAAAAAAAAAAqg4AAAAAAACrDgAAAAAAAAAAAACrDgAAAAAAAKwOAAAAAAAAAAAAAKwOAAAAAAAArQ4AAAAAAAAAAAAArQ4AAAAAAACuDgAAAAAAAAAAAACuDgAAAAAAAK8OAAAAAAAAAAAAAK8OAAAAAAAAsA4AAAAAAAAAAAAAsA4AAAAAAACxDgAAAAAAAAAAAACxDgAAAAAAALIOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkw4AAAAAAACTDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2155,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAALIOAAAAAAAAsw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg4AAAAAAACyDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2156,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALMOAAAAAAAAtA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsw4AAAAAAACzDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2157,
					1,
					"left_delete",
					null,
					"AQAAALMOAAAAAAAAsw4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAtA4AAAAAAAC0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					2158,
					1,
					"insert",
					{
						"characters": "\","
					},
					"AgAAALMOAAAAAAAAtA4AAAAAAAAAAAAAtA4AAAAAAAC1DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsw4AAAAAAACzDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2159,
					1,
					"insert",
					{
						"characters": "\n\"Social"
					},
					"CQAAALUOAAAAAAAAtg4AAAAAAAAAAAAAtg4AAAAAAADKDgAAAAAAAAAAAADKDgAAAAAAAMsOAAAAAAAAAAAAAMsOAAAAAAAAzA4AAAAAAAAAAAAAzA4AAAAAAADNDgAAAAAAAAAAAADNDgAAAAAAAM4OAAAAAAAAAAAAAM4OAAAAAAAAzw4AAAAAAAAAAAAAzw4AAAAAAADQDgAAAAAAAAAAAADQDgAAAAAAANEOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQ4AAAAAAAC1DgAAAAAAAAAAAAAAAPC/"
				],
				[
					2160,
					1,
					"insert",
					{
						"characters": " Anxiety\""
					},
					"CQAAANEOAAAAAAAA0g4AAAAAAAAAAAAA0g4AAAAAAADTDgAAAAAAAAAAAADTDgAAAAAAANQOAAAAAAAAAAAAANQOAAAAAAAA1Q4AAAAAAAAAAAAA1Q4AAAAAAADWDgAAAAAAAAAAAADWDgAAAAAAANcOAAAAAAAAAAAAANcOAAAAAAAA2A4AAAAAAAAAAAAA2A4AAAAAAADZDgAAAAAAAAAAAADZDgAAAAAAANoOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0Q4AAAAAAADRDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2176,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGgNAAAAAAAAaQ0AAAAAAAAAAAAAaQ0AAAAAAABrDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaA0AAAAAAABoDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2178,
					1,
					"insert",
					{
						"characters": "\nplot("
					},
					"CAAAAGsNAAAAAAAAbA0AAAAAAAAAAAAAbA0AAAAAAABuDQAAAAAAAAAAAABpDQAAAAAAAGkNAAAAAAAAAgAAACAgbA0AAAAAAABtDQAAAAAAAAAAAABtDQAAAAAAAG4NAAAAAAAAAAAAAG4NAAAAAAAAbw0AAAAAAAAAAAAAbw0AAAAAAABwDQAAAAAAAAAAAABwDQAAAAAAAHENAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaw0AAAAAAABrDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2179,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAAHENAAAAAAAAcg0AAAAAAAAAAAAAcg0AAAAAAABzDQAAAAAAAAAAAABzDQAAAAAAAHQNAAAAAAAAAAAAAHQNAAAAAAAAdQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQ0AAAAAAABxDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2180,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHUNAAAAAAAAdg0AAAAAAAAAAAAAdg0AAAAAAAB3DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQ0AAAAAAAB1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2181,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHcNAAAAAAAAeA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdw0AAAAAAAB3DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2182,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAHYNAAAAAAAAdg0AAAAAAAACAAAAPSBxDQAAAAAAAHENAAAAAAAABQAAAHR5cGUg",
					"AQAAAAAAAAABAAAAeA0AAAAAAAB4DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2185,
					1,
					"image_paste",
					null,
					"AgAAAGwNAAAAAAAAxg0AAAAAAAAAAAAAxg0AAAAAAADGDQAAAAAAAAUAAABwbG90KA",
					"AQAAAAAAAAABAAAAcQ0AAAAAAABsDQAAAAAAAAAAAAAAADZA"
				],
				[
					2188,
					1,
					"indent",
					null,
					"AgAAAHwNAAAAAAAAfg0AAAAAAAAAAAAAlA0AAAAAAACWDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxg0AAAAAAAB8DQAAAAAAAAAAAAAAAAAA"
				],
				[
					2197,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAD4PAAAAAAAAPw8AAAAAAAAAAAAAPw8AAAAAAABTDwAAAAAAAAAAAAA/DwAAAAAAAD8PAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAgPw8AAAAAAABBDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPg8AAAAAAAA+DwAAAAAAAAAAAAAAAPC/"
				],
				[
					2198,
					1,
					"image_paste",
					null,
					"AQAAAEEPAAAAAAAAog8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQ8AAAAAAABBDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2201,
					1,
					"cut",
					null,
					"AQAAAD8PAAAAAAAAPw8AAAAAAAADAAAAICAK",
					"AQAAAAAAAAABAAAAQQ8AAAAAAABBDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2214,
					1,
					"image_paste",
					null,
					"AQAAAJ8PAAAAAAAAsQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnw8AAAAAAACfDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2219,
					1,
					"insert",
					{
						"characters": "transpare"
					},
					"CgAAAKoPAAAAAAAAqw8AAAAAAAAAAAAAqw8AAAAAAACrDwAAAAAAAAUAAAB3aGl0ZasPAAAAAAAArA8AAAAAAAAAAAAArA8AAAAAAACtDwAAAAAAAAAAAACtDwAAAAAAAK4PAAAAAAAAAAAAAK4PAAAAAAAArw8AAAAAAAAAAAAArw8AAAAAAACwDwAAAAAAAAAAAACwDwAAAAAAALEPAAAAAAAAAAAAALEPAAAAAAAAsg8AAAAAAAAAAAAAsg8AAAAAAACzDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqg8AAAAAAACvDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2222,
					1,
					"right_delete",
					null,
					"AQAAAKIPAAAAAAAAog8AAAAAAAATAAAAcGFyKGJnPSd0cmFuc3BhcmUnKQ",
					"AQAAAAAAAAABAAAAtQ8AAAAAAACiDwAAAAAAAAAAAAAAADZA"
				],
				[
					2223,
					1,
					"cut",
					null,
					"AQAAAKAPAAAAAAAAoA8AAAAAAAADAAAAICAK",
					"AQAAAAAAAAABAAAAog8AAAAAAACiDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2225,
					1,
					"cut",
					null,
					"AQAAAD8PAAAAAAAAPw8AAAAAAAASAAAAICBwYXIoYmc9J3doaXRlJykK",
					"AQAAAAAAAAABAAAAPw8AAAAAAAA/DwAAAAAAAAAAAAAAAAAA"
				],
				[
					2228,
					1,
					"cut",
					null,
					"AQAAAGoNAAAAAAAAag0AAAAAAAASAAAAICBwYXIoYmc9J3doaXRlJykK",
					"AQAAAAAAAAABAAAAeA0AAAAAAAB4DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2231,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAAIUNAAAAAAAAhg0AAAAAAAAAAAAAhg0AAAAAAACHDQAAAAAAAAAAAACHDQAAAAAAAIgNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQ0AAAAAAACFDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2234,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAAEsPAAAAAAAATA8AAAAAAAAAAAAATA8AAAAAAABNDwAAAAAAAAAAAABNDwAAAAAAAE4PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASw8AAAAAAABLDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2240,
					1,
					"right_delete",
					null,
					"AQAAAE8PAAAAAAAATw8AAAAAAAAPAAAAeWxpbSA9IGMoMCw1KSwg",
					"AQAAAAAAAAABAAAATw8AAAAAAABeDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2243,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADkPAAAAAAAAOg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQ8AAAAAAAA5DwAAAAAAAAAAAAAAAPC/"
				],
				[
					2255,
					1,
					"image_paste",
					null,
					"AgAAAGkNAAAAAAAArQ0AAAAAAAAAAAAArQ0AAAAAAACtDQAAAAAAAFIAAAAKICBwbG90KDEsMSwgdHlwZSA9ICduJywKICAgICAgIHlsaW0gPSBjKDAsNSksIHhsYWIgPSAnJywgeWxhYiA9ICcnLCBheGVzID0gRkFMU0Up",
					"AQAAAAAAAAABAAAAuw0AAAAAAABpDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2261,
					1,
					"insert",
					{
						"characters": ";left"
					},
					"BgAAALgNAAAAAAAAuQ0AAAAAAAAAAAAAuQ0AAAAAAAC5DQAAAAAAAAYAAABib3R0b225DQAAAAAAALoNAAAAAAAAAAAAALoNAAAAAAAAuw0AAAAAAAAAAAAAuw0AAAAAAAC8DQAAAAAAAAAAAAC8DQAAAAAAAL0NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuA0AAAAAAAC+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2262,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAALkNAAAAAAAAuQ0AAAAAAAAEAAAAbGVmdA",
					"AQAAAAAAAAABAAAAvQ0AAAAAAAC9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2263,
					1,
					"insert",
					{
						"characters": "lef"
					},
					"AwAAALkNAAAAAAAAug0AAAAAAAAAAAAAug0AAAAAAAC7DQAAAAAAAAAAAAC7DQAAAAAAALwNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQ0AAAAAAAC5DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2264,
					4,
					"left_delete",
					null,
					"BAAAALsNAAAAAAAAuw0AAAAAAAABAAAAZroNAAAAAAAAug0AAAAAAAABAAAAZbkNAAAAAAAAuQ0AAAAAAAABAAAAbLgNAAAAAAAAuA0AAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAvA0AAAAAAAC8DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2265,
					1,
					"insert",
					{
						"characters": "left"
					},
					"BAAAALgNAAAAAAAAuQ0AAAAAAAAAAAAAuQ0AAAAAAAC6DQAAAAAAAAAAAAC6DQAAAAAAALsNAAAAAAAAAAAAALsNAAAAAAAAvA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuA0AAAAAAAC4DQAAAAAAAAAAAAAAAPC/"
				],
				[
					2271,
					2,
					"image_paste",
					null,
					"CQAAAAUHAAAAAAAABQcAAAAAAAABAAAAMwUHAAAAAAAABgcAAAAAAAAAAAAA7QYAAAAAAADtBgAAAAAAAAEAAAAy7QYAAAAAAADuBgAAAAAAAAAAAADVBgAAAAAAANUGAAAAAAAAAQAAADHVBgAAAAAAANYGAAAAAAAAAAAAAAYHAAAAAAAABwcAAAAAAAAAAAAA7gYAAAAAAADvBgAAAAAAAAAAAADWBgAAAAAAANcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA1gYAAAAAAADVBgAAAAAAAAAAAAAAAPC/7gYAAAAAAADtBgAAAAAAAAAAAAAAAPC/BgcAAAAAAAAFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2272,
					1,
					"left_delete",
					null,
					"AwAAAAgHAAAAAAAACAcAAAAAAAABAAAAM+8GAAAAAAAA7wYAAAAAAAABAAAAMtYGAAAAAAAA1gYAAAAAAAABAAAAMQ",
					"AQAAAAAAAAADAAAA1wYAAAAAAADXBgAAAAAAAAAAAAAAAPC/8AYAAAAAAADwBgAAAAAAAAAAAAAAAPC/CQcAAAAAAAAJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2273,
					1,
					"insert",
					{
						"characters": ","
					},
					"AwAAAAYHAAAAAAAABwcAAAAAAAAAAAAA7gYAAAAAAADvBgAAAAAAAAAAAADWBgAAAAAAANcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA1gYAAAAAAADWBgAAAAAAAAAAAAAAAPC/7gYAAAAAAADuBgAAAAAAAAAAAAAAAPC/BgcAAAAAAAAGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2274,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAAkHAAAAAAAACgcAAAAAAAAAAAAA8AYAAAAAAADxBgAAAAAAAAAAAADXBgAAAAAAANgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA1wYAAAAAAADXBgAAAAAAAAAAAAAAAPC/8AYAAAAAAADwBgAAAAAAAAAAAAAAAPC/CQcAAAAAAAAJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2275,
					1,
					"image_paste",
					null,
					"AwAAAAwHAAAAAAAADQcAAAAAAAAAAAAA8gYAAAAAAADzBgAAAAAAAAAAAADYBgAAAAAAANkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA2AYAAAAAAADYBgAAAAAAAAAAAAAAAPC/8gYAAAAAAADyBgAAAAAAAAAAAAAAAPC/DAcAAAAAAAAMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2276,
					1,
					"insert",
					{
						"characters": ","
					},
					"AwAAAA8HAAAAAAAAEAcAAAAAAAAAAAAA9AYAAAAAAAD1BgAAAAAAAAAAAADZBgAAAAAAANoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA2QYAAAAAAADZBgAAAAAAAAAAAAAAAPC/9AYAAAAAAAD0BgAAAAAAAAAAAAAAAPC/DwcAAAAAAAAPBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2277,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAABIHAAAAAAAAEwcAAAAAAAAAAAAA9gYAAAAAAAD3BgAAAAAAAAAAAADaBgAAAAAAANsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA2gYAAAAAAADaBgAAAAAAAAAAAAAAAPC/9gYAAAAAAAD2BgAAAAAAAAAAAAAAAPC/EgcAAAAAAAASBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2278,
					1,
					"image_paste",
					null,
					"AwAAABUHAAAAAAAAFgcAAAAAAAAAAAAA+AYAAAAAAAD5BgAAAAAAAAAAAADbBgAAAAAAANwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA2wYAAAAAAADbBgAAAAAAAAAAAAAAAPC/+AYAAAAAAAD4BgAAAAAAAAAAAAAAAPC/FQcAAAAAAAAVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2283,
					1,
					"image_paste",
					null,
					"AwAAABsHAAAAAAAAHAcAAAAAAAAAAAAA/QYAAAAAAAD+BgAAAAAAAAAAAADfBgAAAAAAAOAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA3wYAAAAAAADfBgAAAAAAAAAAAAAAAPC//QYAAAAAAAD9BgAAAAAAAAAAAAAAAPC/GwcAAAAAAAAbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2284,
					1,
					"left_delete",
					null,
					"AwAAAB0HAAAAAAAAHQcAAAAAAAABAAAANv4GAAAAAAAA/gYAAAAAAAABAAAANd8GAAAAAAAA3wYAAAAAAAABAAAANA",
					"AQAAAAAAAAADAAAA4AYAAAAAAADgBgAAAAAAAAAAAAAAAPC//wYAAAAAAAD/BgAAAAAAAAAAAAAAAPC/HgcAAAAAAAAeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2285,
					1,
					"insert",
					{
						"characters": ","
					},
					"AwAAABsHAAAAAAAAHAcAAAAAAAAAAAAA/QYAAAAAAAD+BgAAAAAAAAAAAADfBgAAAAAAAOAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA3wYAAAAAAADfBgAAAAAAAAAAAAAAAPC//QYAAAAAAAD9BgAAAAAAAAAAAAAAAPC/GwcAAAAAAAAbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2286,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAB4HAAAAAAAAHwcAAAAAAAAAAAAA/wYAAAAAAAAABwAAAAAAAAAAAADgBgAAAAAAAOEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA4AYAAAAAAADgBgAAAAAAAAAAAAAAAPC//wYAAAAAAAD/BgAAAAAAAAAAAAAAAPC/HgcAAAAAAAAeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2287,
					1,
					"image_paste",
					null,
					"AwAAACEHAAAAAAAAIgcAAAAAAAAAAAAAAQcAAAAAAAACBwAAAAAAAAAAAADhBgAAAAAAAOIGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA4QYAAAAAAADhBgAAAAAAAAAAAAAAAPC/AQcAAAAAAAABBwAAAAAAAAAAAAAAAPC/IQcAAAAAAAAhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2288,
					1,
					"insert",
					{
						"characters": ","
					},
					"AwAAACQHAAAAAAAAJQcAAAAAAAAAAAAAAwcAAAAAAAAEBwAAAAAAAAAAAADiBgAAAAAAAOMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA4gYAAAAAAADiBgAAAAAAAAAAAAAAAPC/AwcAAAAAAAADBwAAAAAAAAAAAAAAAPC/JAcAAAAAAAAkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2289,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAACcHAAAAAAAAKAcAAAAAAAAAAAAABQcAAAAAAAAGBwAAAAAAAAAAAADjBgAAAAAAAOQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA4wYAAAAAAADjBgAAAAAAAAAAAAAAAPC/BQcAAAAAAAAFBwAAAAAAAAAAAAAAAPC/JwcAAAAAAAAnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2290,
					1,
					"image_paste",
					null,
					"AwAAACoHAAAAAAAAKwcAAAAAAAAAAAAABwcAAAAAAAAIBwAAAAAAAAAAAADkBgAAAAAAAOUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA5AYAAAAAAADkBgAAAAAAAAAAAAAAAPC/BwcAAAAAAAAHBwAAAAAAAAAAAAAAAPC/KgcAAAAAAAAqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2291,
					1,
					"insert",
					{
						"characters": ","
					},
					"AwAAAC0HAAAAAAAALgcAAAAAAAAAAAAACQcAAAAAAAAKBwAAAAAAAAAAAADlBgAAAAAAAOYGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA5QYAAAAAAADlBgAAAAAAAAAAAAAAAPC/CQcAAAAAAAAJBwAAAAAAAAAAAAAAAPC/LQcAAAAAAAAtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2292,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAADAHAAAAAAAAMQcAAAAAAAAAAAAACwcAAAAAAAAMBwAAAAAAAAAAAADmBgAAAAAAAOcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAA5gYAAAAAAADmBgAAAAAAAAAAAAAAAPC/CwcAAAAAAAALBwAAAAAAAAAAAAAAAPC/MAcAAAAAAAAwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2294,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAAOcGAAAAAAAA6AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wYAAAAAAADnBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2297,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAA4HAAAAAAAADwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgcAAAAAAAAOBwAAAAAAAAAAAAAAwHhA"
				],
				[
					2300,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAADUHAAAAAAAANgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQcAAAAAAAA1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2310,
					2,
					"image_paste",
					null,
					"AwAAAJYNAAAAAAAA2g0AAAAAAAAAAAAA2g0AAAAAAADaDQAAAAAAAEQAAAAKICBwbG90KDEsIDEsIHR5cGUgPSAnbicsCiAgICAgICB4bGFiID0gJycsIHlsYWIgPSAnJywgYXhlcyA9IEZBTFNFKdoNAAAAAAAAHg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2g0AAAAAAACWDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2322,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAI8PAAAAAAAAkA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjw8AAAAAAACPDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2323,
					1,
					"insert",
					{
						"characters": "\nxpd"
					},
					"BwAAAJAPAAAAAAAAkQ8AAAAAAAAAAAAAkQ8AAAAAAAClDwAAAAAAAAAAAACRDwAAAAAAAJEPAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAgkQ8AAAAAAACaDwAAAAAAAAAAAACaDwAAAAAAAJsPAAAAAAAAAAAAAJsPAAAAAAAAnA8AAAAAAAAAAAAAnA8AAAAAAACdDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkA8AAAAAAACQDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2324,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAJ0PAAAAAAAAng8AAAAAAAAAAAAAng8AAAAAAACfDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQ8AAAAAAACdDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2325,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ8PAAAAAAAAoA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnw8AAAAAAACfDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2326,
					2,
					"left_delete",
					null,
					"AgAAAJ8PAAAAAAAAnw8AAAAAAAABAAAAIJ4PAAAAAAAAng8AAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAoA8AAAAAAACgDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2327,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAJ4PAAAAAAAAnw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAng8AAAAAAACeDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2328,
					1,
					"insert",
					{
						"characters": " TRUE,"
					},
					"BgAAAJ8PAAAAAAAAoA8AAAAAAAAAAAAAoA8AAAAAAAChDwAAAAAAAAAAAAChDwAAAAAAAKIPAAAAAAAAAAAAAKIPAAAAAAAAow8AAAAAAAAAAAAAow8AAAAAAACkDwAAAAAAAAAAAACkDwAAAAAAAKUPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnw8AAAAAAACfDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2329,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUPAAAAAAAApg8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQ8AAAAAAAClDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2330,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKYPAAAAAAAApw8AAAAAAAAAAAAApw8AAAAAAACwDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApg8AAAAAAACmDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2331,
					1,
					"left_delete",
					null,
					"AQAAAK8PAAAAAAAArw8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAsA8AAAAAAACwDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2332,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAK8PAAAAAAAAsQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArw8AAAAAAACvDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2333,
					1,
					"left_delete",
					null,
					"AQAAAK8PAAAAAAAArw8AAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAsQ8AAAAAAACxDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2334,
					1,
					"insert",
					{
						"characters": " cex"
					},
					"BAAAAK8PAAAAAAAAsA8AAAAAAAAAAAAAsA8AAAAAAACxDwAAAAAAAAAAAACxDwAAAAAAALIPAAAAAAAAAAAAALIPAAAAAAAAsw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArw8AAAAAAACvDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2335,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALMPAAAAAAAAtA8AAAAAAAAAAAAAtA8AAAAAAAC1DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsw8AAAAAAACzDwAAAAAAAAAAAAAAAPC/"
				],
				[
					2336,
					1,
					"insert",
					{
						"characters": " ."
					},
					"AgAAALUPAAAAAAAAtg8AAAAAAAAAAAAAtg8AAAAAAAC3DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQ8AAAAAAAC1DwAAAAAAAAAAAAAAAPC/"
				],
				[
					2337,
					1,
					"left_delete",
					null,
					"AQAAALYPAAAAAAAAtg8AAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAtw8AAAAAAAC3DwAAAAAAAAAAAAAAAPC/"
				],
				[
					2338,
					1,
					"insert",
					{
						"characters": "1.5"
					},
					"AwAAALYPAAAAAAAAtw8AAAAAAAAAAAAAtw8AAAAAAAC4DwAAAAAAAAAAAAC4DwAAAAAAALkPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtg8AAAAAAAC2DwAAAAAAAAAAAAAAAPC/"
				],
				[
					2347,
					1,
					"insert",
					{
						"characters": "\nmar"
					},
					"BwAAAB4OAAAAAAAAHw4AAAAAAAAAAAAAHw4AAAAAAAAmDgAAAAAAAAAAAAAfDgAAAAAAAB8OAAAAAAAABwAAACAgICAgICAfDgAAAAAAACEOAAAAAAAAAAAAACEOAAAAAAAAIg4AAAAAAAAAAAAAIg4AAAAAAAAjDgAAAAAAAAAAAAAjDgAAAAAAACQOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHg4AAAAAAAAeDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2348,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAACEOAAAAAAAAIQ4AAAAAAAADAAAAbWFy",
					"AQAAAAAAAAABAAAAJA4AAAAAAAAkDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2349,
					1,
					"insert",
					{
						"characters": "par(mar"
					},
					"BwAAACEOAAAAAAAAIg4AAAAAAAAAAAAAIg4AAAAAAAAjDgAAAAAAAAAAAAAjDgAAAAAAACQOAAAAAAAAAAAAACQOAAAAAAAAJQ4AAAAAAAAAAAAAJQ4AAAAAAAAmDgAAAAAAAAAAAAAmDgAAAAAAACcOAAAAAAAAAAAAACcOAAAAAAAAKA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQ4AAAAAAAAhDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2351,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAACUOAAAAAAAAJg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQ4AAAAAAAAlDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2353,
					1,
					"insert",
					{
						"characters": "\")"
					},
					"AgAAACkOAAAAAAAAKg4AAAAAAAAAAAAAKg4AAAAAAAArDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQ4AAAAAAAApDgAAAAAAAP///////+9/"
				],
				[
					2355,
					1,
					"insert",
					{
						"characters": "marl"
					},
					"BAAAACEOAAAAAAAAIg4AAAAAAAAAAAAAIg4AAAAAAAAjDgAAAAAAAAAAAAAjDgAAAAAAACQOAAAAAAAAAAAAACQOAAAAAAAAJQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQ4AAAAAAAAhDgAAAAAAAAAAAAAAADZA"
				],
				[
					2356,
					1,
					"left_delete",
					null,
					"AQAAACQOAAAAAAAAJA4AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAJQ4AAAAAAAAlDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2357,
					1,
					"insert",
					{
						"characters": ".default"
					},
					"CAAAACQOAAAAAAAAJQ4AAAAAAAAAAAAAJQ4AAAAAAAAmDgAAAAAAAAAAAAAmDgAAAAAAACcOAAAAAAAAAAAAACcOAAAAAAAAKA4AAAAAAAAAAAAAKA4AAAAAAAApDgAAAAAAAAAAAAApDgAAAAAAACoOAAAAAAAAAAAAACoOAAAAAAAAKw4AAAAAAAAAAAAAKw4AAAAAAAAsDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJA4AAAAAAAAkDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2358,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACwOAAAAAAAALQ4AAAAAAAAAAAAALQ4AAAAAAAAuDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA4AAAAAAAAsDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2359,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC4OAAAAAAAALw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALg4AAAAAAAAuDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2360,
					2,
					"left_delete",
					null,
					"AgAAAC4OAAAAAAAALg4AAAAAAAABAAAAIC0OAAAAAAAALQ4AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAALw4AAAAAAAAvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2361,
					1,
					"insert",
					{
						"characters": "<-"
					},
					"AQAAAC0OAAAAAAAALw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQ4AAAAAAAAtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2362,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC8OAAAAAAAAMA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALw4AAAAAAAAvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2369,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADoOAAAAAAAAOw4AAAAAAAAAAAAAOw4AAAAAAAA9DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOg4AAAAAAAA6DgAAAAAAAP///////+9/"
				],
				[
					2370,
					1,
					"image_paste",
					null,
					"AQAAAD0OAAAAAAAARw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQ4AAAAAAAA9DgAAAAAAAAAAAAAAAPC/"
				],
				[
					2372,
					1,
					"left_delete",
					null,
					"AQAAAEUOAAAAAAAARQ4AAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAARg4AAAAAAABGDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2374,
					1,
					"left_delete",
					null,
					"AQAAAEEOAAAAAAAAQQ4AAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAQg4AAAAAAABCDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2377,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEQOAAAAAAAARQ4AAAAAAAAAAAAARQ4AAAAAAABGDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARA4AAAAAAABEDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2378,
					1,
					"insert",
					{
						"characters": " c()"
					},
					"BAAAAEYOAAAAAAAARw4AAAAAAAAAAAAARw4AAAAAAABIDgAAAAAAAAAAAABIDgAAAAAAAEkOAAAAAAAAAAAAAEkOAAAAAAAASg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARg4AAAAAAABGDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2380,
					1,
					"insert",
					{
						"characters": "5.1,"
					},
					"BAAAAEkOAAAAAAAASg4AAAAAAAAAAAAASg4AAAAAAABLDgAAAAAAAAAAAABLDgAAAAAAAEwOAAAAAAAAAAAAAEwOAAAAAAAATQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQ4AAAAAAABJDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2381,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAE0OAAAAAAAATg4AAAAAAAAAAAAATg4AAAAAAABPDgAAAAAAAAAAAABPDgAAAAAAAFAOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQ4AAAAAAABNDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2382,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAOAAAAAAAAUQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUA4AAAAAAABQDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2383,
					1,
					"insert",
					{
						"characters": "4.1,"
					},
					"BAAAAFEOAAAAAAAAUg4AAAAAAAAAAAAAUg4AAAAAAABTDgAAAAAAAAAAAABTDgAAAAAAAFQOAAAAAAAAAAAAAFQOAAAAAAAAVQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQ4AAAAAAABRDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2384,
					1,
					"insert",
					{
						"characters": " 2.1"
					},
					"BAAAAFUOAAAAAAAAVg4AAAAAAAAAAAAAVg4AAAAAAABXDgAAAAAAAAAAAABXDgAAAAAAAFgOAAAAAAAAAAAAAFgOAAAAAAAAWQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQ4AAAAAAABVDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2388,
					1,
					"insert",
					{
						"characters": "\npar(mar"
					},
					"CwAAADsQAAAAAAAAPBAAAAAAAAAAAAAAPBAAAAAAAABDEAAAAAAAAAAAAAA8EAAAAAAAADwQAAAAAAAABwAAACAgICAgICA8EAAAAAAAAD4QAAAAAAAAAAAAAD4QAAAAAAAAPxAAAAAAAAAAAAAAPxAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAAEEQAAAAAAAAAAAAAEEQAAAAAAAAQhAAAAAAAAAAAAAAQhAAAAAAAABDEAAAAAAAAAAAAABDEAAAAAAAAEQQAAAAAAAAAAAAAEQQAAAAAAAARRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxAAAAAAAAA7EAAAAAAAAAAAAAAAAPC/"
				],
				[
					2389,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEUQAAAAAAAARhAAAAAAAAAAAAAARhAAAAAAAABHEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARRAAAAAAAABFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2390,
					1,
					"insert",
					{
						"characters": " mar.default)"
					},
					"DQAAAEcQAAAAAAAASBAAAAAAAAAAAAAASBAAAAAAAABJEAAAAAAAAAAAAABJEAAAAAAAAEoQAAAAAAAAAAAAAEoQAAAAAAAASxAAAAAAAAAAAAAASxAAAAAAAABMEAAAAAAAAAAAAABMEAAAAAAAAE0QAAAAAAAAAAAAAE0QAAAAAAAAThAAAAAAAAAAAAAAThAAAAAAAABPEAAAAAAAAAAAAABPEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAURAAAAAAAAAAAAAAURAAAAAAAABSEAAAAAAAAAAAAABSEAAAAAAAAFMQAAAAAAAAAAAAAFMQAAAAAAAAVBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARxAAAAAAAABHEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2399,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AgAAALQGAAAAAAAAtQYAAAAAAAAAAAAAtQYAAAAAAAC1BgAAAAAAAAEAAAA0",
					"AQAAAAAAAAABAAAAtAYAAAAAAAC1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2413,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPYPAAAAAAAA9w8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9g8AAAAAAAD2DwAAAAAAAAAAAAAAAPC/"
				],
				[
					2414,
					1,
					"insert",
					{
						"characters": "\nboder"
					},
					"BwAAAPcPAAAAAAAA+A8AAAAAAAAAAAAA+A8AAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAAEEAAAAAAAAAAAAAAEEAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9w8AAAAAAAD3DwAAAAAAAAAAAAAAAPC/"
				],
				[
					2415,
					3,
					"left_delete",
					null,
					"AwAAAAUQAAAAAAAABRAAAAAAAAABAAAAcgQQAAAAAAAABBAAAAAAAAABAAAAZQMQAAAAAAAAAxAAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAABhAAAAAAAAAGEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2416,
					1,
					"insert",
					{
						"characters": "rder"
					},
					"BAAAAAMQAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2417,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAcQAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAJEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxAAAAAAAAAHEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2418,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAAkQAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAALEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRAAAAAAAAAJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2438,
					1,
					"right_delete",
					null,
					"AwAAACgHAAAAAAAAKAcAAAAAAAAGAAAAIDMsIDYsAQcAAAAAAAABBwAAAAAAAAYAAAAgMiwgNSzaBgAAAAAAANoGAAAAAAAABgAAACAxLCA0LA",
					"AQAAAAAAAAADAAAA2gYAAAAAAADgBgAAAAAAAAAAAAAAAPC/AQcAAAAAAAAHBwAAAAAAAAAAAAAAAPC/KAcAAAAAAAAuBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2449,
					1,
					"cut",
					null,
					"AQAAAFgQAAAAAAAAWBAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAWBAAAAAAAABYEAAAAAAAAAAAAAAAAPC/"
				],
				[
					2457,
					1,
					"cut",
					null,
					"AQAAAHITAAAAAAAAchMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAchMAAAAAAAByEwAAAAAAAAAAAAAAgFtA"
				],
				[
					2465,
					1,
					"cut",
					null,
					"AQAAAE0FAAAAAAAATQUAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAATgUAAAAAAABNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2467,
					1,
					"image_paste",
					null,
					"AQAAAEoFAAAAAAAASwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgUAAAAAAABKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2468,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEsFAAAAAAAATAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwUAAAAAAABLBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2469,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAUAAAAAAABMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2471,
					2,
					"right_delete",
					null,
					"AgAAAE4FAAAAAAAATgUAAAAAAAABAAAALE4FAAAAAAAATgUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAATgUAAAAAAABOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2519,
					2,
					"right_delete",
					null,
					"AgAAAMQEAAAAAAAAxAQAAAAAAAAyAAAACiAgY29sbmFtZXMobG9hZGluZ3NfMSkgPC0gYygiQ29tcHVsIiwgIlNXIiwgIkFEIinEBAAAAAAAAMQEAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAA9gQAAAAAAADEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2521,
					1,
					"right_delete",
					null,
					"AQAAAMQEAAAAAAAAxAQAAAAAAAAqAAAAICBjb3IobG9hZGluZ3NfMVtzXzEsXSwgbG9hZGluZ3NfMltzXzIsXSkK",
					"AQAAAAAAAAABAAAAxAQAAAAAAADuBAAAAAAAAAAAAAAAAAAA"
				],
				[
					2524,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACcFAAAAAAAAKAUAAAAAAAAAAAAAKAUAAAAAAAAqBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwUAAAAAAAAnBQAAAAAAAP///////+9/"
				],
				[
					2525,
					1,
					"image_paste",
					null,
					"AQAAACoFAAAAAAAAWQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgUAAAAAAAAqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2541,
					1,
					"right_delete",
					null,
					"AQAAAPkEAAAAAAAA+QQAAAAAAABgAAAAY29yKGxvYWRpbmdzXzFfc29ydGVkW3NfMSxdLCBsb2FkaW5nc18yW3NfMixdKQogIGNvbG5hbWVzKGxvYWRpbmdzXzIpIDwtIGMoIkFEIiwgIkNvbXB1bCIsICJTVyIp",
					"AQAAAAAAAAABAAAA+QQAAAAAAABZBQAAAAAAAP///////+9/"
				],
				[
					2551,
					1,
					"image_paste",
					null,
					"AQAAAPkEAAAAAAAAKAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QQAAAAAAAD5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2556,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA9wQAAAAAAAD5BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gQAAAAAAAD2BAAAAAAAAP///////+9/"
				],
				[
					2557,
					1,
					"image_paste",
					null,
					"AQAAAPkEAAAAAAAAKAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QQAAAAAAAD5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2565,
					1,
					"image_paste",
					null,
					"AgAAAAIFAAAAAAAAEwUAAAAAAAAAAAAAEwUAAAAAAAATBQAAAAAAAAoAAABsb2FkaW5nc18y",
					"AQAAAAAAAAABAAAAAgUAAAAAAAAMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2568,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADAFAAAAAAAAMQUAAAAAAAAAAAAAMQUAAAAAAAAyBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAUAAAAAAAAwBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2575,
					1,
					"reindent",
					null,
					"AQAAADAFAAAAAAAAMgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAUAAAAAAAAwBQAAAAAAAAAAAAAAMHxA"
				],
				[
					2576,
					1,
					"image_paste",
					null,
					"AQAAADIFAAAAAAAAWQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgUAAAAAAAAyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2584,
					2,
					"right_delete",
					null,
					"AgAAADAFAAAAAAAAMAUAAAAAAAApAAAAICBjb3IobG9hZGluZ3NfMVtzXzEsXSwgbG9hZGluZ3NfMltzXzIsXSkwBQAAAAAAADAFAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAWQUAAAAAAAAwBQAAAAAAAAAAAAAAAAAA"
				],
				[
					2593,
					2,
					"cut",
					null,
					"AgAAADAFAAAAAAAAMAUAAAAAAAAyAAAACiAgY29sbmFtZXMobG9hZGluZ3NfMikgPC0gYygiQUQiLCAiQ29tcHVsIiwgIlNXIikwBQAAAAAAADAFAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAYgUAAAAAAAAwBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2642,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC8FAAAAAAAAMAUAAAAAAAAAAAAAMAUAAAAAAAAyBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwUAAAAAAAAvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2643,
					1,
					"image_paste",
					null,
					"AQAAADIFAAAAAAAAQwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgUAAAAAAAAyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2644,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AgAAAEMFAAAAAAAARAUAAAAAAAAAAAAARAUAAAAAAABGBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwUAAAAAAABDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2645,
					1,
					"insert",
					{
						"characters": " loadings"
					},
					"CQAAAEYFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABIBQAAAAAAAAAAAABIBQAAAAAAAEkFAAAAAAAAAAAAAEkFAAAAAAAASgUAAAAAAAAAAAAASgUAAAAAAABLBQAAAAAAAAAAAABLBQAAAAAAAEwFAAAAAAAAAAAAAEwFAAAAAAAATQUAAAAAAAAAAAAATQUAAAAAAABOBQAAAAAAAAAAAABOBQAAAAAAAE8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2646,
					1,
					"insert",
					{
						"characters": "_1"
					},
					"AgAAAE8FAAAAAAAAUAUAAAAAAAAAAAAAUAUAAAAAAABRBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwUAAAAAAABPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2654,
					1,
					"cut",
					null,
					"AQAAADAFAAAAAAAAMAUAAAAAAAAiAAAAICBsb2FkaW5nc18xX3NvcnRlZCA8LSBsb2FkaW5nc18xCg",
					"AQAAAAAAAAABAAAAQwUAAAAAAABDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2659,
					1,
					"cut",
					null,
					"AQAAADMEAAAAAAAAMwQAAAAAAACQAAAACiAgIyBSb3dzIGFyZSBFeHBlcmltZW50IDEsIENvbHVtbnMgYXJlIEV4cGVyaW1lbnQgMgogIGNvbG5hbWVzKGxvYWRpbmdzXzIpIDwtIGMoIkFEIiwgIkNvbXB1bCIsICJTVyIpCiAgY29yKGxvYWRpbmdzXzFbc18xLF0sIGxvYWRpbmdzXzJbc18yLF0p",
					"AQAAAAAAAAABAAAAwwQAAAAAAAAzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2662,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAADYEAAAAAAAAOAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgQAAAAAAAA2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2663,
					1,
					"left_delete",
					null,
					"AQAAADYEAAAAAAAANgQAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2664,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAADYEAAAAAAAANwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgQAAAAAAAA2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2665,
					1,
					"insert",
					{
						"characters": " Factors"
					},
					"CAAAADcEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA5BAAAAAAAAAAAAAA5BAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOwQAAAAAAAAAAAAAOwQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAD0EAAAAAAAAAAAAAD0EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA/BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2666,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAAD8EAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABBBAAAAAAAAAAAAABBBAAAAAAAAEIEAAAAAAAAAAAAAEIEAAAAAAAAQwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwQAAAAAAAA/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2667,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAEAEAAAAAAAAQAQAAAAAAAADAAAAYXJl",
					"AQAAAAAAAAABAAAAQwQAAAAAAABDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2668,
					1,
					"insert",
					{
						"characters": "have"
					},
					"BAAAAEAEAAAAAAAAQQQAAAAAAAAAAAAAQQQAAAAAAABCBAAAAAAAAAAAAABCBAAAAAAAAEMEAAAAAAAAAAAAAEMEAAAAAAAARAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAAPC/"
				],
				[
					2669,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAEQEAAAAAAAARQQAAAAAAAAAAAAARQQAAAAAAABGBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAQAAAAAAABEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2670,
					1,
					"insert",
					{
						"characters": " different"
					},
					"CgAAAEYEAAAAAAAARwQAAAAAAAAAAAAARwQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEkEAAAAAAAAAAAAAEkEAAAAAAAASgQAAAAAAAAAAAAASgQAAAAAAABLBAAAAAAAAAAAAABLBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAATQQAAAAAAAAAAAAATQQAAAAAAABOBAAAAAAAAAAAAABOBAAAAAAAAE8EAAAAAAAAAAAAAE8EAAAAAAAAUAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgQAAAAAAABGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2671,
					1,
					"insert",
					{
						"characters": " sorting"
					},
					"CAAAAFAEAAAAAAAAUQQAAAAAAAAAAAAAUQQAAAAAAABSBAAAAAAAAAAAAABSBAAAAAAAAFMEAAAAAAAAAAAAAFMEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABVBAAAAAAAAAAAAABVBAAAAAAAAFYEAAAAAAAAAAAAAFYEAAAAAAAAVwQAAAAAAAAAAAAAVwQAAAAAAABYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAQAAAAAAABQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2672,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAFgEAAAAAAAAWQQAAAAAAAAAAAAAWQQAAAAAAABaBAAAAAAAAAAAAABaBAAAAAAAAFsEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAQAAAAAAABYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2673,
					1,
					"insert",
					{
						"characters": " Experiment"
					},
					"CwAAAFsEAAAAAAAAXAQAAAAAAAAAAAAAXAQAAAAAAABdBAAAAAAAAAAAAABdBAAAAAAAAF4EAAAAAAAAAAAAAF4EAAAAAAAAXwQAAAAAAAAAAAAAXwQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGEEAAAAAAAAAAAAAGEEAAAAAAAAYgQAAAAAAAAAAAAAYgQAAAAAAABjBAAAAAAAAAAAAABjBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAZQQAAAAAAAAAAAAAZQQAAAAAAABmBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwQAAAAAAABbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2674,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAGYEAAAAAAAAZwQAAAAAAAAAAAAAZwQAAAAAAABoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgQAAAAAAABmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2675,
					1,
					"insert",
					{
						"characters": " because"
					},
					"CAAAAGgEAAAAAAAAaQQAAAAAAAAAAAAAaQQAAAAAAABqBAAAAAAAAAAAAABqBAAAAAAAAGsEAAAAAAAAAAAAAGsEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABtBAAAAAAAAAAAAABtBAAAAAAAAG4EAAAAAAAAAAAAAG4EAAAAAAAAbwQAAAAAAAAAAAAAbwQAAAAAAABwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAQAAAAAAABoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2676,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAHAEAAAAAAAAcQQAAAAAAAAAAAAAcQQAAAAAAAByBAAAAAAAAAAAAAByBAAAAAAAAHMEAAAAAAAAAAAAAHMEAAAAAAAAdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAQAAAAAAABwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2677,
					1,
					"insert",
					{
						"characters": " factor"
					},
					"BwAAAHQEAAAAAAAAdQQAAAAAAAAAAAAAdQQAAAAAAAB2BAAAAAAAAAAAAAB2BAAAAAAAAHcEAAAAAAAAAAAAAHcEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB5BAAAAAAAAAAAAAB5BAAAAAAAAHoEAAAAAAAAAAAAAHoEAAAAAAAAewQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAQAAAAAAAB0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2678,
					1,
					"insert",
					{
						"characters": " analysis"
					},
					"CQAAAHsEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAAB9BAAAAAAAAAAAAAB9BAAAAAAAAH4EAAAAAAAAAAAAAH4EAAAAAAAAfwQAAAAAAAAAAAAAfwQAAAAAAACABAAAAAAAAAAAAACABAAAAAAAAIEEAAAAAAAAAAAAAIEEAAAAAAAAggQAAAAAAAAAAAAAggQAAAAAAACDBAAAAAAAAAAAAACDBAAAAAAAAIQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewQAAAAAAAB7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2679,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAIQEAAAAAAAAhQQAAAAAAAAAAAAAhQQAAAAAAACGBAAAAAAAAAAAAACGBAAAAAAAAIcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2680,
					1,
					"insert",
					{
						"characters": " agnostic"
					},
					"CQAAAIcEAAAAAAAAiAQAAAAAAAAAAAAAiAQAAAAAAACJBAAAAAAAAAAAAACJBAAAAAAAAIoEAAAAAAAAAAAAAIoEAAAAAAAAiwQAAAAAAAAAAAAAiwQAAAAAAACMBAAAAAAAAAAAAACMBAAAAAAAAI0EAAAAAAAAAAAAAI0EAAAAAAAAjgQAAAAAAAAAAAAAjgQAAAAAAACPBAAAAAAAAAAAAACPBAAAAAAAAJAEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwQAAAAAAACHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2681,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAEAAAAAAAAkQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2682,
					1,
					"wrap_lines",
					null,
					"AgAAAHsEAAAAAAAAfAQAAAAAAAABAAAAIHwEAAAAAAAAgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQQAAAAAAACRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2683,
					1,
					"insert",
					{
						"characters": "to"
					},
					"AgAAAJUEAAAAAAAAlgQAAAAAAAAAAAAAlgQAAAAAAACXBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQQAAAAAAACVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2684,
					1,
					"insert",
					{
						"characters": " which"
					},
					"BgAAAJcEAAAAAAAAmAQAAAAAAAAAAAAAmAQAAAAAAACZBAAAAAAAAAAAAACZBAAAAAAAAJoEAAAAAAAAAAAAAJoEAAAAAAAAmwQAAAAAAAAAAAAAmwQAAAAAAACcBAAAAAAAAAAAAACcBAAAAAAAAJ0EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwQAAAAAAACXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2685,
					1,
					"insert",
					{
						"characters": " order"
					},
					"BgAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAACfBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAAoQQAAAAAAAAAAAAAoQQAAAAAAACiBAAAAAAAAAAAAACiBAAAAAAAAKMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQQAAAAAAACdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2686,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAKMEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAAClBAAAAAAAAAAAAAClBAAAAAAAAKYEAAAAAAAAAAAAAKYEAAAAAAAApwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowQAAAAAAACjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2687,
					1,
					"insert",
					{
						"characters": " authors"
					},
					"CAAAAKcEAAAAAAAAqAQAAAAAAAAAAAAAqAQAAAAAAACpBAAAAAAAAAAAAACpBAAAAAAAAKoEAAAAAAAAAAAAAKoEAAAAAAAAqwQAAAAAAAAAAAAAqwQAAAAAAACsBAAAAAAAAAAAAACsBAAAAAAAAK0EAAAAAAAAAAAAAK0EAAAAAAAArgQAAAAAAAAAAAAArgQAAAAAAACvBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwQAAAAAAACnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2688,
					1,
					"insert",
					{
						"characters": " found"
					},
					"BgAAAK8EAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAACxBAAAAAAAAAAAAACxBAAAAAAAALIEAAAAAAAAAAAAALIEAAAAAAAAswQAAAAAAAAAAAAAswQAAAAAAAC0BAAAAAAAAAAAAAC0BAAAAAAAALUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwQAAAAAAACvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2689,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAC3BAAAAAAAALgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2690,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAALgEAAAAAAAAuQQAAAAAAAAAAAAAuQQAAAAAAAC6BAAAAAAAAAAAAAC6BAAAAAAAALsEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAQAAAAAAAC4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2691,
					1,
					"insert",
					{
						"characters": " Experiment"
					},
					"CwAAALsEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAAC9BAAAAAAAAAAAAAC9BAAAAAAAAL4EAAAAAAAAAAAAAL4EAAAAAAAAvwQAAAAAAAAAAAAAvwQAAAAAAADABAAAAAAAAAAAAADABAAAAAAAAMEEAAAAAAAAAAAAAMEEAAAAAAAAwgQAAAAAAAAAAAAAwgQAAAAAAADDBAAAAAAAAAAAAADDBAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAxQQAAAAAAAAAAAAAxQQAAAAAAADGBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwQAAAAAAAC7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2692,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAMYEAAAAAAAAxwQAAAAAAAAAAAAAxwQAAAAAAADIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgQAAAAAAADGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					2696,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAALUEAAAAAAAAtQQAAAAAAAADAAAAIGl0",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					2697,
					1,
					"wrap_lines",
					null,
					"AwAAAHsEAAAAAAAAfAQAAAAAAAAFAAAACiAgIyB7BAAAAAAAAHwEAAAAAAAAAQAAACB8BAAAAAAAAIAEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "Utilities/map.R",
			"settings":
			{
				"buffer_size": 598,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHoBAAAAAAAAewEAAAAAAAAAAAAAewEAAAAAAAB8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"image_paste",
					null,
					"AQAAAHwBAAAAAAAATQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAEAAAAAAAB8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "grep_"
					},
					"BQAAAHwBAAAAAAAAfQEAAAAAAAAAAAAAfQEAAAAAAAB+AQAAAAAAAAAAAAB+AQAAAAAAAH8BAAAAAAAAAAAAAH8BAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACBAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAEAAAAAAAB8AQAAAAAAAAAAAAAAAAAA"
				],
				[
					11,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAHwBAAAAAAAAfAEAAAAAAAAFAAAAZ3JlcF8",
					"AQAAAAAAAAABAAAAgQEAAAAAAACBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "reg_"
					},
					"BAAAAHwBAAAAAAAAfQEAAAAAAAAAAAAAfQEAAAAAAAB+AQAAAAAAAAAAAAB+AQAAAAAAAH8BAAAAAAAAAAAAAH8BAAAAAAAAgAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAEAAAAAAAB8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "grep(from_i"
					},
					"CwAAADMCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA1AgAAAAAAAAAAAAA1AgAAAAAAADYCAAAAAAAAAAAAADYCAAAAAAAANwIAAAAAAAAAAAAANwIAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOgIAAAAAAAAAAAAAOgIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADwCAAAAAAAAAAAAADwCAAAAAAAAPQIAAAAAAAAAAAAAPQIAAAAAAAA+AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD4CAAAAAAAAPwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgIAAAAAAAA+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8CAAAAAAAAQAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwIAAAAAAAA/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					2,
					"delete_word",
					{
						"forward": true
					},
					"AgAAAEECAAAAAAAAQQIAAAAAAAADAAAAID09QQIAAAAAAABBAgAAAAAAAAcAAAAgZnJvbV9p",
					"AQAAAAAAAAABAAAAQQIAAAAAAABBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEECAAAAAAAAQgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQIAAAAAAABBAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Microsoft Windows [Version 10.0.19045.4717]                                                                  \n(c) Microsoft Corporation. All rights reserved.                                                              \n                                                                                                             \nC:\\Users\\saschameyen\\Desktop\\Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen>R --no-save                    \n                                                                                                             \nR version 4.4.0 (2024-04-24 ucrt) -- \"Puppy Cup\"                                                             \nCopyright (C) 2024 The R Foundation for Statistical Computing                                                \nPlatform: x86_64-w64-mingw32/x64                                                                             \n                                                                                                             \nR is free software and comes with ABSOLUTELY NO WARRANTY.                                                    \nYou are welcome to redistribute it under certain conditions.                                                 \nType 'license()' or 'licence()' for distribution details.                                                    \n                                                                                                             \n  Natural language support but running in an English locale                                                  \n                                                                                                             \nR is a collaborative project with many contributors.                                                         \nType 'contributors()' for more information and                                                               \n'citation()' on how to cite R or R packages in publications.                                                 \n                                                                                                             \nType 'demo()' for some demos, 'help()' for on-line help, or                                                  \n'help.start()' for an HTML browser interface to help.                                                        \nType 'q()' to quit R.                                                                                        \n                                                                                                             \n> options(width = 150)                                                                                       \n>                                                                                                            \n> # Clear workspace and load all scripts and packages ------------------------$                              \n> rm(list = ls())                                                                                            \n> source('Utilities/load_all_scripts_in_project.R')                                                          \n                                                                                                             \nSourcing all analysis scripts.                                                                               \nSourcing 01/39: Scripts/1_get_matlab_files/get_mat_files.R                                                   \nSourcing 02/39: Scripts/1_get_matlab_files/get_number_of_participants.R                                      \nSourcing 03/39: Scripts/1_get_matlab_files/get_variable_labels_for_dat.R                                     \nSourcing 04/39: Scripts/2_reproduce_summary_data_exp_1/combine_reproduced_dat.R                              \nSourcing 05/39: Scripts/2_reproduce_summary_data_exp_1/fit_meta_d_MLE.R                                      \nSourcing 06/39: Scripts/2_reproduce_summary_data_exp_1/get_factor_analysis_dat.R                             \nSourcing 07/39: Scripts/2_reproduce_summary_data_exp_1/get_full_perceptual_task_dat_exp_1.R                  \nSourcing 08/39: Scripts/2_reproduce_summary_data_exp_1/get_full_questionnaire_dat_exp_1.R                    \nSourcing 09/39: Scripts/2_reproduce_summary_data_exp_1/get_perceptual_task_summary_information.R             \nSourcing 10/39: Scripts/2_reproduce_summary_data_exp_1/reproduce_factor_analysis_results.R                   \nSourcing 11/39: Scripts/2_reproduce_summary_data_exp_1/reproduce_individual_meta_fit.R                       \nSourcing 12/39: Scripts/2_reproduce_summary_data_exp_1/reproduce_summary_data_exp_1.R                        \nSourcing 13/39: Scripts/3_reproduce_summary_data_exp_2/get_full_perceptual_task_dat_exp_2.R                  \nSourcing 14/39: Scripts/3_reproduce_summary_data_exp_2/get_full_questionnaire_dat_exp_2.R                    \nSourcing 15/39: Scripts/3_reproduce_summary_data_exp_2/reproduce_individual_meta_fit.R                       \nSourcing 16/39: Scripts/3_reproduce_summary_data_exp_2/reproduce_summary_data_exp_2.R                        \nSourcing 17/39: Scripts/4_validation/get_regression_coefficients.R                                           \nSourcing 18/39: Scripts/4_validation/validate_DDM_fit.R                                                      \nSourcing 19/39: Scripts/4_validation/validate_difficulty_binning.R                                           \nSourcing 20/39: Scripts/4_validation/validate_exclusions.R                                                   \nSourcing 21/39: Scripts/4_validation/validate_factor_analysis.R                                              \nSourcing 22/39: Scripts/4_validation/validate_factor_analysis_overfit.R                                      \nSourcing 23/39: Scripts/4_validation/validate_loading_similarity_exp_1_vs_2.R                                \nSourcing 24/39: Scripts/4_validation/validate_m_ratio.R                                                      \nSourcing 25/39: Scripts/4_validation/validate_missing_metacognitive_efficiency_analysis_in_exp_1.R           \nSourcing 26/39: Scripts/4_validation/validate_model_comparison.R                                             \nSourcing 27/39: Scripts/4_validation/validate_mturk_sample.R                                                 \nSourcing 28/39: Scripts/4_validation/validate_original_vs_reproduced_data_exp_2.R                            \nSourcing 29/39: Scripts/4_validation/validate_perceptual_task_summary_statistics.R                           \nSourcing 30/39: Scripts/4_validation/validate_power_analysis.R                                               \nSourcing 31/39: Scripts/4_validation/validate_regression_exp_2.R                                             \nSourcing 32/39: Scripts/4_validation/validate_staircase_procedure.R                                          \nSourcing 33/39: Scripts/4_validation/z_transform.R                                                           \nSourcing 34/39: Scripts/extract_original_summary_data.R                                                      \nSourcing 35/39: Utilities/cache_results.R                                                                    \nSourcing 36/39: Utilities/get_sem.R                                                                          \nSourcing 37/39: Utilities/load_required_packages.R                                                           \nSourcing 38/39: Utilities/map.R                                                                              \nSourcing 39/39: Utilities/save_plot.R                                                                        \n                                                                                                             \n                                                                                                             \n> load_required_packages()                                                                                   \nLoading required package: ggplot2                                                                            \nLoading required package: gridExtra                                                                          \nLoading required package: lme4                                                                               \nLoading required package: Matrix                                                                             \nLoading required package: plyr                                                                               \nLoading required package: psych                                                                              \n                                                                                                             \nAttaching package: 'psych'                                                                                   \n                                                                                                             \nThe following objects are masked from 'package:ggplot2':                                                     \n                                                                                                             \n    %+%, alpha                                                                                               \n                                                                                                             \nLoading required package: GPArotation                                                                        \n                                                                                                             \nAttaching package: 'GPArotation'                                                                             \n                                                                                                             \nThe following objects are masked from 'package:psych':                                                       \n                                                                                                             \n    equamax, varimin                                                                                         \n                                                                                                             \nLoading required package: paran                                                                              \nLoading required package: MASS                                                                               \nLoading required package: reshape                                                                            \n                                                                                                             \nAttaching package: 'reshape'                                                                                 \n                                                                                                             \nThe following objects are masked from 'package:plyr':                                                        \n                                                                                                             \n    rename, round_any                                                                                        \n                                                                                                             \nThe following object is masked from 'package:Matrix':                                                        \n                                                                                                             \n    expand                                                                                                   \n                                                                                                             \nLoading required package: polycor                                                                            \n                                                                                                             \nAttaching package: 'polycor'                                                                                 \n                                                                                                             \nThe following object is masked from 'package:psych':                                                         \n                                                                                                             \n    polyserial                                                                                               \n                                                                                                             \nLoading required package: nFactors                                                                           \nLoading required package: lattice                                                                            \n                                                                                                             \nAttaching package: 'nFactors'                                                                                \n                                                                                                             \nThe following object is masked from 'package:lattice':                                                       \n                                                                                                             \n    parallel                                                                                                 \n                                                                                                             \nLoading required package: R.matlab                                                                           \nR.matlab v3.7.0 (2022-08-25 21:52:34 UTC) successfully loaded. See ?R.matlab for help.                       \n                                                                                                             \nAttaching package: 'R.matlab'                                                                                \n                                                                                                             \nThe following objects are masked from 'package:base':                                                        \n                                                                                                             \n    getOption, isOpen                                                                                        \n                                                                                                             \nLoading required package: doBy                                                                               \nLoading required package: pwr                                                                                \nLoading required package: gmgm                                                                               \n                                                                                                             \nAttaching package: 'gmgm'                                                                                    \n                                                                                                             \nThe following object is masked from 'package:psych':                                                         \n                                                                                                             \n    ellipses                                                                                                 \n                                                                                                             \nThe following objects are masked from 'package:stats':                                                       \n                                                                                                             \n    density, reorder                                                                                         \n                                                                                                             \nThe following object is masked from 'package:base':                                                          \n                                                                                                             \n    structure                                                                                                \n                                                                                                             \nLoading required package: parallel                                                                           \n>                                                                                                            \n> # Experiment 1 Data Reproduction -------------------------------------------$                              \n> full_perceptual_task_dat_exp_1 <- cache_results(\"get_full_perceptual_task_da$                              \n>                                                                                                            \n> reproduced_dat_exp_1 <- cache_results(\"reproduce_summary_data_exp_1()\")                                    \n> reproduced_dat_exp_1 <- reproduce_factor_analysis_results(reproduced_dat = r$                              \n>                                                                                                            \n> # Experiment 2 Data Reproduction -------------------------------------------$                              \n> original_dat_exp_2 <- cache_results(\"extract_original_summary_data()\")                                     \n>                                                                                                            \n> full_perceptual_task_dat_exp_2 <- cache_results(\"get_full_perceptual_task_da$                              \n>                                                                                                            \n> reproduced_dat_exp_2 <- cache_results(\"reproduce_summary_data_exp_2()\")                                    \n> reproduced_dat_exp_2 <- reproduce_factor_analysis_results(reproduced_dat = r$                              \n>                                                                                                            \n> # The authors gave labels to the three factors in Experiment 2                                             \n> factor_indices <- ncol(reproduced_dat_exp_2)-(2:0)                                                         \n> names(reproduced_dat_exp_2)[factor_indices] <- c(\"AD\", \"Compul\", \"SW\")                                     \n>                                                                                                            \n> # According to a factor loading comparion, the factors in Experiment 1 are                                 \n> # ordered differently                                                                                      \n> loading_correlations <- validate_loading_similarity_exp_1_vs_2(reproduced_da$                              \n+                                                                reproduced_da$                              \n> factor_indices <- ncol(reproduced_dat_exp_1)-(2:0)                                                         \n> names(reproduced_dat_exp_1)[factor_indices] <- c(\"Compul\", \"SW\", \"AD\")                                     \n>                                                                                                            \n> # Summary of Available Data ------------------------------------------------$                              \n>                                                                                                            \n> # Now we have reproduced the data of Experiment 1 with the perceptual task                                 \n> # information (one row one trial, many rows for each participant) as well as                               \n> # the participant data (one row per participant, aggregated values from the                                \n> # perceptual task plus questionnaire information.                                                          \n> head(full_perceptual_task_dat_exp_1)                                                                       \n  i_participant age gender (f=1/m=0) subj_id   rt correct stimdevi target_left raw_confid new_confid         \n1             1  35                0 1023212  906       0       43           1          7          3         \n2             1  35                0 1023212  626       0       15           1          9          4         \n3             1  35                0 1023212 1253       1       13           1          5          2         \n4             1  35                0 1023212  634       1        2           1          8          4         \n5             1  35                0 1023212  731       1       49           1          7          3         \n6             1  35                0 1023212  567       1       52           1          8          4         \n> head(reproduced_dat_exp_1)                                                                                 \n  subj_id age gender mean_confidence var_stimdevi  accuracy   m_ratio i_participant catch_question confidence​‌​\n_check_high confidence_check_low iq                                                                          \n1 1023212  35      0        3.201923     412.2947 0.6586538 0.6722452           251              2           \n         11                    1  9                                                                          \n2 1039851  26      0        4.004926     409.6282 0.7339901 1.5028903           379              2           \n         11                    1  6                                                                          \n3 1045062  31      0        3.411483     411.8265 0.7990431 1.0179483           339              2           \n         11                    1 12                                                                          \n4 1048237  41      1        2.839024     406.1235 0.7268293 0.5597061           380              2           \n         11                    1 13                                                                          \n5 1051828  36      1        3.927885     411.0405 0.7740385 1.1514776           381              2           \n         11                    2  4                                                                          \n6 1055022  30      1        3.473684     408.7831 0.7799043 0.9177658           180              2           \n         11                    1 12                                                                          \n  iq_raw.1 iq_raw.2 iq_raw.3 iq_raw.4 iq_raw.5 iq_raw.6 iq_raw.7 iq_raw.8 iq_raw.9 iq_raw.10 iq_raw.11 iq_raw​‌​\n.12 iq_raw.13 iq_raw.14 iq_raw.15                                                                            \n1        4        4        4        2        6        3        3        1        5         2         2       \n  4         2         3         7                                                                            \n2        3        3        4        6        6        1        3        5        5         4         2       \n  4         7         3         4                                                                            \n3        4        4        4        6        6        3        4        4        5         2         2       \n  4         4         4         1                                                                            \n4        4        4        4        6        6        3        4        4        5         2         2       \n  4         3         7         1                                                                            \n5        5        4        4        5        5        3        4        1        4         5         4       \n  6         8         8         1                                                                            \n6        4        4        4        6        6        3        4        4        5         4         2       \n  4         6         2         1                                                                            \n  iq_raw.16 zung zung_raw.1 zung_raw.2 zung_raw.3 zung_raw.4 zung_raw.5 zung_raw.6 zung_raw.7 zung_raw.8 zung​‌​\n_raw.9 zung_raw.10 zung_raw.11                                                                               \n1         5   41          1          4          1          1          4          1          1          2     \n     1           2           3                                                                               \n2         6   33          1          3          1          1          2          1          3          1     \n     1           2           2                                                                               \n3         2   27          1          4          1          1          1          2          2          1     \n     1           1           1                                                                               \n4         2   20          1          1          1          1          1          1          1          1     \n     1           1           1                                                                               \n5         6   40          2          3          1          1          3          1          1          1     \n     2           4           3                                                                               \n6         4   28          1          2          1          2          1          4          1          1     \n     1           1           2                                                                               \n  zung_raw.12 zung_raw.13 zung_raw.14 zung_raw.15 zung_raw.16 zung_raw.17 zung_raw.18 zung_raw.19 zung_raw.20​‌​\n anxiety anxiety_raw.1 anxiety_raw.2                                                                         \n1           2           2           2           3           3           3           2           1           2​‌​\n       3             0             0                                                                         \n2           2           2           1           2           1           2           2           1           2​‌​\n       3             1             0                                                                         \n3           1           1           1           1           1           1           3           1           1​‌​\n       0             0             0                                                                         \n4           1           1           1           1           1           1           1           1           1​‌​\n       0             0             0                                                                         \n5           3           4           1           2           1           1           1           1           4​‌​\n      12             0             3                                                                         \n6           1           2           1           1           2           1           1           1           1​‌​\n       1             0             0                                                                         \n  anxiety_raw.3 anxiety_raw.4 anxiety_raw.5 anxiety_raw.6 anxiety_raw.7 impulsiveness impulsiveness_raw.1 imp​‌​\nulsiveness_raw.2 impulsiveness_raw.3                                                                         \n1             1             1             0             1             0            59                   2    \n               2                   2                                                                         \n2             1             0             0             1             0            53                   1    \n               2                   3                                                                         \n3             0             0             0             0             0            66                   3    \n               2                   2                                                                         \n4             0             0             0             0             0            38                   1    \n               1                   1                                                                         \n5             3             2             3             1             0            44                   1    \n               2                   2                                                                         \n6             0             1             0             0             0            59                   1    \n               2                   3                                                                         \n  impulsiveness_raw.4 impulsiveness_raw.5 impulsiveness_raw.6 impulsiveness_raw.7 impulsiveness_raw.8 impulsi​‌​\nveness_raw.9 impulsiveness_raw.10                                                                            \n1                   2                   2                   1                   1                   2        \n           2                    1                                                                            \n2                   3                   1                   1                   2                   2        \n           2                    1                                                                            \n3                   3                   2                   1                   4                   2        \n           2                    4                                                                            \n4                   3                   1                   1                   1                   1        \n           1                    1                                                                            \n5                   2                   1                   1                   1                   1        \n           1                    1                                                                            \n6                   1                   2                   3                   3                   2        \n           2                    2                                                                            \n  impulsiveness_raw.11 impulsiveness_raw.12 impulsiveness_raw.13 impulsiveness_raw.14 impulsiveness_raw.15 im​‌​\npulsiveness_raw.16 impulsiveness_raw.17                                                                      \n1                    2                    3                    2                    2                    4   \n                 1                    1                                                                      \n2                    1                    2                    1                    2                    3   \n                 1                    1                                                                      \n3                    1                    3                    4                    1                    4   \n                 1                    2                                                                      \n4                    1                    1                    3                    1                    1   \n                 2                    1                                                                      \n5                    4                    1                    1                    2                    3   \n                 1                    1                                                                      \n6                    2                    1                    4                    1                    1   \n                 4                    2                                                                      \n  impulsiveness_raw.18 impulsiveness_raw.19 impulsiveness_raw.20 impulsiveness_raw.21 impulsiveness_raw.22 im​‌​\npulsiveness_raw.23 impulsiveness_raw.24                                                                      \n1                    3                    1                    4                    1                    1   \n                 4                    2                                                                      \n2                    2                    1                    2                    2                    2   \n                 2                    2                                                                      \n3                    1                    3                    3                    1                    2   \n                 1                    1                                                                      \n4                    1                    1                    1                    2                    1   \n                 1                    2                                                                      \n5                    4                    1                    1                    1                    1   \n                 1                    1                                                                      \n6                    1                    2                    1                    4                    1   \n                 3                    2                                                                      \n  impulsiveness_raw.25 impulsiveness_raw.26 impulsiveness_raw.27 impulsiveness_raw.28 impulsiveness_raw.29 im​‌​\npulsiveness_raw.30 ocir ocir_raw.1                                                                           \n1                    1                    2                    2                    2                    3   \n                 1    8          0                                                                           \n2                    1                    2                    2                    1                    3   \n                 2   12          1                                                                           \n3                    1                    1                    3                    1                    3   \n                 4    0          0                                                                           \n4                    2                    1                    1                    1                    1   \n                 1    0          0                                                                           \n5                    1                    3                    1                    1                    1   \n                 1   34          1                                                                           \n6                    1                    3                    1                    2                    1   \n                 1    9          0                                                                           \n  ocir_raw.2 ocir_raw.3 ocir_raw.4 ocir_raw.5 ocir_raw.6 ocir_raw.7 ocir_raw.8 ocir_raw.9 ocir_raw.10 ocir_ra​‌​\nw.11 ocir_raw.12 ocir_raw.13 ocir_raw.14                                                                     \n1          1          1          0          0          0          0          2          0           0        \n   0           0           0           3                                                                     \n2          1          1          2          1          0          0          0          1           0        \n   0           2           2           0                                                                     \n3          0          0          0          0          0          0          0          0           0        \n   0           0           0           0                                                                     \n4          0          0          0          0          0          0          0          0           0        \n   0           0           0           0                                                                     \n5          3          4          0          3          3          0          0          4           0        \n   4           3           0           0                                                                     \n6          2          0          0          0          1          2          1          0           0        \n   0           0           2           1                                                                     \n  ocir_raw.15 ocir_raw.16 ocir_raw.17 ocir_raw.18 schizo schizo_raw.1 schizo_raw.2 schizo_raw.3 schizo_raw.4 \nschizo_raw.5 schizo_raw.6 schizo_raw.7                                                                       \n1           1           0           0           0     10            0            0            0            0 \n           0            0            0                                                                       \n2           0           1           0           0      9            0            0            0            0 \n           0            0            0                                                                       \n3           0           0           0           0      8            0            0            0            0 \n           0            0            0                                                                       \n4           0           0           0           0      1            0            0            0            0 \n           0            0            0                                                                       \n5           4           1           4           0     11            0            1            1            0 \n           0            0            0                                                                       \n6           0           0           0           0      7            0            0            0            0 \n           0            0            1                                                                       \n  schizo_raw.8 schizo_raw.9 schizo_raw.10 schizo_raw.11 schizo_raw.12 schizo_raw.13 schizo_raw.14 schizo_raw.​‌​\n15 schizo_raw.16 schizo_raw.17                                                                               \n1            0            0             0             0             0             1             0            \n 0             1             0                                                                               \n2            0            0             0             0             0             0             0            \n 1             0             1                                                                               \n3            0            0             0             0             0             0             1            \n 0             0             1                                                                               \n4            0            0             0             0             0             0             0            \n 0             0             0                                                                               \n5            1            1             0             0             0             1             0            \n 0             0             1                                                                               \n6            0            0             0             0             0             0             0            \n 0             0             1                                                                               \n  schizo_raw.18 schizo_raw.19 schizo_raw.20 schizo_raw.21 schizo_raw.22 schizo_raw.23 schizo_raw.24 schizo_ra​‌​\nw.25 schizo_raw.26 schizo_raw.27                                                                             \n1             0             0             0             0             0             0             1          \n   0             1             0                                                                             \n2             1             0             0             0             0             0             0          \n   1             0             0                                                                             \n3             0             1             0             0             0             0             0          \n   0             0             1                                                                             \n4             0             0             0             0             0             0             0          \n   0             0             0                                                                             \n5             1             1             0             1             0             0             0          \n   0             0             0                                                                             \n6             0             1             0             1             0             0             0          \n   0             0             1                                                                             \n  schizo_raw.28 schizo_raw.29 schizo_raw.30 schizo_raw.31 schizo_raw.32 schizo_raw.33 schizo_raw.34 schizo_ra​‌​\nw.35 schizo_raw.36 schizo_raw.37                                                                             \n1             1             0             1             0             0             1             0          \n   0             0             0                                                                             \n2             0             1             0             0             1             0             0          \n   0             1             1                                                                             \n3             0             0             0             0             1             0             1          \n   0             1             0                                                                             \n4             0             1             0             0             0             0             0          \n   0             0             0                                                                             \n5             0             0             0             0             0             0             0          \n   0             0             0                                                                             \n6             0             0             0             0             1             0             1          \n   0             0             0                                                                             \n  schizo_raw.38 schizo_raw.39 schizo_raw.40 schizo_raw.41 schizo_raw.42 schizo_raw.43 liebowitz liebowitz_raw​‌​\n.1 liebowitz_raw.2 liebowitz_raw.3                                                                           \n1             0             1             0             1             1             0        32             2​‌​\n.0             1.0             0.0                                                                           \n2             0             1             0             0             0             0        27             0​‌​\n.0             0.0             0.0                                                                           \n3             0             0             1             0             0             0        13             0​‌​\n.0             0.0             0.0                                                                           \n4             0             0             0             0             0             0        15             1​‌​\n.5             0.0             0.0                                                                           \n5             0             0             0             1             1             0        61             0​‌​\n.0             0.5             0.0                                                                           \n6             0             0             0             0             0             0        40             0​‌​\n.5             0.5             0.0                                                                           \n  liebowitz_raw.4 liebowitz_raw.5 liebowitz_raw.6 liebowitz_raw.7 liebowitz_raw.8 liebowitz_raw.9 liebowitz_r​‌​\naw.10 liebowitz_raw.11 liebowitz_raw.12                                                                      \n1             0.0             0.0             1.5             1.0             1.0             1.0            \n  1.0              1.0              1.0                                                                      \n2             0.0             1.0             1.0             1.0             0.0             0.0            \n  1.0              1.0              1.0                                                                      \n3             0.0             0.0             0.0             0.0             0.5             0.0            \n  0.0              0.0              0.0                                                                      \n4             1.5             0.0             0.0             0.0             0.0             0.0            \n  0.0              0.0              0.0                                                                      \n5             0.0             2.0             3.0             2.5             2.0             2.5            \n  2.0              1.5              2.0                                                                      \n6             0.0             0.0             0.5             1.0             2.0             1.5            \n  1.5              1.0              1.5                                                                      \n  liebowitz_raw.13 liebowitz_raw.14 liebowitz_raw.15 liebowitz_raw.16 liebowitz_raw.17 liebowitz_raw.18 liebo​‌​\nwitz_raw.19 liebowitz_raw.20                                                                                 \n1              0.5              0.5              1.0              1.0              0.5              0.0      \n        0.0              1.0                                                                                 \n2              0.0              1.5              1.5              2.0              0.5              1.0      \n        0.0              1.0                                                                                 \n3              1.0              0.0              1.0              0.5              0.5              0.0      \n        0.5              0.0                                                                                 \n4              0.0              0.0              1.5              0.0              0.0              1.5      \n        0.0              0.0                                                                                 \n5              0.0              2.5              3.0              1.5              1.0              0.5      \n        0.0              2.0                                                                                 \n6              0.0              0.5              1.0              0.5              0.0              1.5      \n        1.0              0.5                                                                                 \n  liebowitz_raw.21 liebowitz_raw.22 liebowitz_raw.23 liebowitz_raw.24     Compul          SW          AD     \n1              1.0              0.0              0.0              0.0 -0.4225381 -0.09651359  0.12807343     \n2              0.0              0.0              0.0              0.0 -0.3486508 -0.41740274 -0.30714160     \n3              1.5              0.0              0.0              1.0 -1.2916064 -1.14295894  1.23487322     \n4              1.5              0.0              0.0              0.0 -1.1365194 -1.09132303 -1.16647231     \n5              0.5              0.0              0.0              1.5  1.6782366  0.49240997 -2.00561221     \n6              2.5              0.0              0.0              2.5 -0.4706908 -0.34208960 -0.08638983     \n>                                                                                                            \n> # We have the same for Experiment 2. In addition, we have the original data                                \n> # that was produced from their code.                                                                       \n> head(full_perceptual_task_dat_exp_2)                                                                       \n  i_participant age gender (f=1/m=0) subj_id  rt correct stimdevi target_left new_confid                     \n1             1  32                0 1015841 451       1     4.45           1          4                     \n2             1  32                0 1015841 489       1     4.45           0          4                     \n3             1  32                0 1015841 367       1     4.35           0          5                     \n4             1  32                0 1015841 340       1     4.35           1          4                     \n5             1  32                0 1015841 801       0     4.25           0          2                     \n6             1  32                0 1015841 508       1     4.35           0          3                     \n> head(reproduced_dat_exp_2)                                                                                 \n  subj_id age gender mean_confidence var_stimdevi  accuracy   m_ratio i_participant catch_question confidence​‌​\n_check_high confidence_check_low iq                                                                          \n1 1015841  32      0        4.153110   0.15470326 0.7655502 1.0414854           385              2           \n          6                    1 11                                                                          \n2 1030622  46      1        1.391304   0.11138080 0.7342995 0.3043196           124              2           \n          5                    1 12                                                                          \n3 1103437  35      1        4.100962   0.08604980 0.7644231 1.2290758            23              2           \n          6                    1 11                                                                          \n4 1144714  27      1        3.601942   0.08226119 0.7184466 0.7073440           497              2           \n          6                    1  7                                                                          \n5 1149809  50      0        3.917874   0.12258806 0.7439614 0.8804001           276              2           \n          6                    1 11                                                                          \n6 1171324  27      0        3.889952   0.07024338 0.7416268 0.5583264           299              2           \n          5                    2  8                                                                          \n  iq_raw.1 iq_raw.2 iq_raw.3 iq_raw.4 iq_raw.5 iq_raw.6 iq_raw.7 iq_raw.8 iq_raw.9 iq_raw.10 iq_raw.11 iq_raw​‌​\n.12 iq_raw.13 iq_raw.14 iq_raw.15                                                                            \n1        4        4        4        6        6        3        4        2        5         2         2       \n  4         6         7         1                                                                            \n2        4        4        4        6        6        3        4        4        5         2         2       \n  4         8         7         1                                                                            \n3        4        4        4        4        6        3        4        5        5         4         2       \n  4         2         2         6                                                                            \n4        4        4        4        6        6        1        5        4        6         5         3       \n  3         8         8         6                                                                            \n5        4        4        4        6        6        3        4        4        5         1         2       \n  4         8         7         1                                                                            \n6        4        4        4        5        6        3        4        5        5         1         2       \n  2         4         4         4                                                                            \n  iq_raw.16 alcohol alcohol_raw.1 alcohol_raw.2 alcohol_raw.3 alcohol_raw.4 alcohol_raw.5 alcohol_raw.6 alcoh​‌​\nol_raw.7 alcohol_raw.8 alcohol_raw.9                                                                         \n1         2       3             3             0             0             0             0             0      \n       0             0             0                                                                         \n2         2       0             0             0             0             0             0             0      \n       0             0             0                                                                         \n3         3       2             2             0             0             0             0             0      \n       0             0             0                                                                         \n4         8       6             2             2             2             0             0             0      \n       0             0             0                                                                         \n5         8       2             1             0             1             0             0             0      \n       0             0             0                                                                         \n6         4      12             3             2             2             0             0             1      \n       0             0             0                                                                         \n  alcohol_raw.10 apathy apathy_raw.1 apathy_raw.2 apathy_raw.3 apathy_raw.4 apathy_raw.5 apathy_raw.6 apathy_​‌​\nraw.7 apathy_raw.8 apathy_raw.9                                                                              \n1              0     34            2            2            3            2            2            1        \n    3            1            3                                                                              \n2              0     23            1            1            1            1            2            1        \n    2            1            2                                                                              \n3              0     28            1            2            2            1            1            1        \n    4            2            1                                                                              \n4              0     42            3            2            2            2            2            2        \n    3            2            2                                                                              \n5              0     24            2            2            2            1            1            2        \n    2            1            1                                                                              \n6              4     29            3            4            1            1            1            1        \n    1            4            1                                                                              \n  apathy_raw.10 apathy_raw.11 apathy_raw.12 apathy_raw.13 apathy_raw.14 apathy_raw.15 apathy_raw.16 apathy_ra​‌​\nw.17 apathy_raw.18 zung zung_raw.1                                                                           \n1             1             1             3             2             2             2             1          \n   2             1   29          1                                                                           \n2             1             1             2             2             1             1             1          \n   1             1   28          1                                                                           \n3             1             1             1             2             1             1             3          \n   2             1   25          1                                                                           \n4             2             2             1             2             3             3             3          \n   3             3   44          2                                                                           \n5             1             2             1             1             1             1             1          \n   1             1   33          1                                                                           \n6             1             1             1             1             1             1             4          \n   1             1   43          4                                                                           \n  zung_raw.2 zung_raw.3 zung_raw.4 zung_raw.5 zung_raw.6 zung_raw.7 zung_raw.8 zung_raw.9 zung_raw.10 zung_ra​‌​\nw.11 zung_raw.12 zung_raw.13 zung_raw.14                                                                     \n1          3          1          1          1          1          1          1          1           1        \n   2           2           1           3                                                                     \n2          4          1          3          1          1          2          1          2           2        \n   1           1           1           1                                                                     \n3          4          1          2          1          1          2          1          1           1        \n   1           1           1           1                                                                     \n4          4          1          3          3          2          2          1          1           3        \n   3           2           2           2                                                                     \n5          3          1          2          1          2          1          1          1           1        \n   2           1           3           2                                                                     \n6          4          1          4          1          1          1          1          1           4        \n   4           1           4           4                                                                     \n  zung_raw.15 zung_raw.16 zung_raw.17 zung_raw.18 zung_raw.19 zung_raw.20 eat eat_raw.1 eat_raw.2 eat_raw.3 e​‌​\nat_raw.4 eat_raw.5 eat_raw.6 eat_raw.7                                                                       \n1           1           2           2           2           1           1   3         0         0         0  \n       0         0         0         0                                                                       \n2           1           1           1           1           1           1  22         3         0         2  \n       0         1         0         0                                                                       \n3           1           1           1           1           1           1   2         0         0         0  \n       0         0         0         0                                                                       \n4           1           2           2           2           3           3   8         1         0         0  \n       0         0         0         1                                                                       \n5           1           4           2           2           1           1   3         0         0         0  \n       0         0         0         1                                                                       \n6           3           1           1           1           1           1  16         0         0         0  \n       0         2         3         0                                                                       \n  eat_raw.8 eat_raw.9 eat_raw.10 eat_raw.11 eat_raw.12 eat_raw.13 eat_raw.14 eat_raw.15 eat_raw.16 eat_raw.17​‌​\n eat_raw.18 eat_raw.19 eat_raw.20                                                                            \n1         0         0          0          0          0          0          0          2          0          0​‌​\n          0          1          0                                                                            \n2         0         0          2          2          3          0          0          0          1          0​‌​\n          0          2          0                                                                            \n3         0         0          0          0          0          0          0          0          0          0​‌​\n          0          2          0                                                                            \n4         0         0          0          1          0          0          0          0          2          1​‌​\n          0          0          0                                                                            \n5         0         0          0          0          0          0          0          0          1          0​‌​\n          0          0          0                                                                            \n6         0         0          0          0          3          0          0          2          0          0​‌​\n          0          2          2                                                                            \n  eat_raw.21 eat_raw.22 eat_raw.23 eat_raw.24 eat_raw.25 eat_raw.26 anxiety anxiety_raw.1 anxiety_raw.2 anxie​‌​\nty_raw.3 anxiety_raw.4 anxiety_raw.5                                                                         \n1          0          0          0          0          0          0      37             2             1      \n       3             2             2                                                                         \n2          3          2          1          0          0          0      29             1             2      \n       1             2             1                                                                         \n3          0          0          0          0          0          0      21             1             1      \n       1             1             1                                                                         \n4          0          0          2          0          0          0      42             2             2      \n       2             2             2                                                                         \n5          0          0          0          0          1          0      25             2             1      \n       2             1             1                                                                         \n6          0          2          0          0          0          0      53             3             4      \n       3             4             2                                                                         \n  anxiety_raw.6 anxiety_raw.7 anxiety_raw.8 anxiety_raw.9 anxiety_raw.10 anxiety_raw.11 anxiety_raw.12 anxiet​‌​\ny_raw.13 anxiety_raw.14 anxiety_raw.15                                                                       \n1             3             2             2             2              2              1              2       \n       2              2              1                                                                       \n2             3             2             1             2              1              1              2       \n       2              2              1                                                                       \n3             2             1             1             1              1              1              1       \n       1              1              1                                                                       \n4             2             3             1             2              2              1              3       \n       3              3              2                                                                       \n5             2             2             1             1              2              1              1       \n       1              1              1                                                                       \n6             4             1             4             4              4              1              1       \n       2              1              3                                                                       \n  anxiety_raw.16 anxiety_raw.17 anxiety_raw.18 anxiety_raw.19 anxiety_raw.20 impulsiveness impulsiveness_raw.​‌​\n1 impulsiveness_raw.2                                                                                        \n1              2              2              1              2              1            52                   \n2                   2                                                                                        \n2              1              1              1              1              1            60                   \n1                   1                                                                                        \n3              1              1              1              1              1            56                   \n2                   4                                                                                        \n4              3              1              2              2              2            74                   \n2                   2                                                                                        \n5              1              1              1              1              1            56                   \n2                   1                                                                                        \n6              4              2              2              2              2            63                   \n1                   1                                                                                        \n  impulsiveness_raw.3 impulsiveness_raw.4 impulsiveness_raw.5 impulsiveness_raw.6 impulsiveness_raw.7 impulsi​‌​\nveness_raw.8 impulsiveness_raw.9                                                                             \n1                   3                   3                   1                   1                   3        \n           2                   1                                                                             \n2                   3                   4                   1                   1                   1        \n           2                   1                                                                             \n3                   4                   4                   1                   1                   4        \n           2                   2                                                                             \n4                   2                   3                   3                   2                   3        \n           3                   3                                                                             \n5                   2                   3                   1                   2                   2        \n           2                   2                                                                             \n6                   4                   2                   1                   2                   1        \n           1                   2                                                                             \n  impulsiveness_raw.10 impulsiveness_raw.11 impulsiveness_raw.12 impulsiveness_raw.13 impulsiveness_raw.14 im​‌​\npulsiveness_raw.15 impulsiveness_raw.16                                                                      \n1                    2                    2                    2                    2                    1   \n                 2                    1                                                                      \n2                    3                    4                    1                    2                    1   \n                 3                    1                                                                      \n3                    1                    1                    1                    4                    1   \n                 2                    2                                                                      \n4                    3                    2                    3                    4                    3   \n                 2                    3                                                                      \n5                    2                    1                    2                    2                    1   \n                 2                    2                                                                      \n6                    1                    2                    1                    1                    1   \n                 1                    4                                                                      \n  impulsiveness_raw.17 impulsiveness_raw.18 impulsiveness_raw.19 impulsiveness_raw.20 impulsiveness_raw.21 im​‌​\npulsiveness_raw.22 impulsiveness_raw.23                                                                      \n1                    2                    1                    2                    2                    2   \n                 1                    1                                                                      \n2                    1                    4                    1                    1                    2   \n                 2                    1                                                                      \n3                    1                    1                    2                    1                    2   \n                 2                    1                                                                      \n4                    1                    2                    2                    2                    3   \n                 1                    3                                                                      \n5                    2                    1                    2                    2                    2   \n                 2                    2                                                                      \n6                    4                    4                    3                    2                    4   \n                 2                    1                                                                      \n  impulsiveness_raw.24 impulsiveness_raw.25 impulsiveness_raw.26 impulsiveness_raw.27 impulsiveness_raw.28 im​‌​\npulsiveness_raw.29 impulsiveness_raw.30                                                                      \n1                    1                    3                    1                    2                    1   \n                 1                    2                                                                      \n2                    3                    1                    1                    3                    4   \n                 3                    3                                                                      \n3                    1                    1                    1                    2                    1   \n                 1                    3                                                                      \n4                    2                    2                    3                    2                    2   \n                 3                    3                                                                      \n5                    2                    1                    1                    2                    3   \n                 3                    2                                                                      \n6                    3                    1                    4                    4                    3   \n                 1                    1                                                                      \n  ocir ocir_raw.1 ocir_raw.2 ocir_raw.3 ocir_raw.4 ocir_raw.5 ocir_raw.6 ocir_raw.7 ocir_raw.8 ocir_raw.9 oci​‌​\nr_raw.10 ocir_raw.11 ocir_raw.12                                                                             \n1    3          1          0          0          1          0          0          0          0          0    \n       0           0           0                                                                             \n2    6          0          1          1          1          0          0          0          1          0    \n       0           0           0                                                                             \n3    1          0          0          0          0          0          0          0          0          0    \n       0           0           0                                                                             \n4    4          1          0          0          0          0          1          1          0          0    \n       0           1           0                                                                             \n5    5          1          0          0          0          1          0          1          0          1    \n       0           0           0                                                                             \n6   18          3          1          2          0          0          0          0          0          2    \n       0           2           1                                                                             \n  ocir_raw.13 ocir_raw.14 ocir_raw.15 ocir_raw.16 ocir_raw.17 ocir_raw.18 schizo schizo_raw.1 schizo_raw.2 sc​‌​\nhizo_raw.3 schizo_raw.4 schizo_raw.5                                                                         \n1           1           0           0           0           0           0      1            0            0   \n         0            0            0                                                                         \n2           0           0           2           0           0           0      8            0            0   \n         0            0            0                                                                         \n3           0           0           0           1           0           0     12            0            1   \n         0            0            0                                                                         \n4           0           0           0           0           0           0      4            0            0   \n         0            0            0                                                                         \n5           0           0           0           0           0           1      4            0            0   \n         0            0            0                                                                         \n6           1           0           1           3           1           1     28            0            1   \n         1            1            1                                                                         \n  schizo_raw.6 schizo_raw.7 schizo_raw.8 schizo_raw.9 schizo_raw.10 schizo_raw.11 schizo_raw.12 schizo_raw.13​‌​\n schizo_raw.14 schizo_raw.15                                                                                 \n1            0            0            0            0             0             0             0             0​‌​\n             0             0                                                                                 \n2            0            0            0            0             0             0             1             1​‌​\n             0             1                                                                                 \n3            1            1            0            0             0             1             0             0​‌​\n             0             0                                                                                 \n4            0            0            0            0             0             0             0             0​‌​\n             0             0                                                                                 \n5            0            1            0            1             0             0             1             0​‌​\n             0             0                                                                                 \n6            0            1            1            1             0             1             1             1​‌​\n             1             1                                                                                 \n  schizo_raw.16 schizo_raw.17 schizo_raw.18 schizo_raw.19 schizo_raw.20 schizo_raw.21 schizo_raw.22 schizo_ra​‌​\nw.23 schizo_raw.24 schizo_raw.25                                                                             \n1             0             0             0             0             0             0             0          \n   0             0             0                                                                             \n2             1             0             0             0             0             0             0          \n   0             0             0                                                                             \n3             1             0             0             0             0             0             0          \n   0             0             1                                                                             \n4             0             0             0             0             0             0             0          \n   0             0             0                                                                             \n5             0             0             0             0             0             0             0          \n   0             0             0                                                                             \n6             1             1             1             1             0             1             0          \n   1             1             0                                                                             \n  schizo_raw.26 schizo_raw.27 schizo_raw.28 schizo_raw.29 schizo_raw.30 schizo_raw.31 schizo_raw.32 schizo_ra​‌​\nw.33 schizo_raw.34 schizo_raw.35                                                                             \n1             0             0             0             0             0             0             0          \n   0             0             0                                                                             \n2             0             0             0             1             0             0             0          \n   1             0             0                                                                             \n3             0             0             0             0             1             0             0          \n   1             1             0                                                                             \n4             1             1             0             0             0             0             0          \n   0             0             0                                                                             \n5             0             0             0             0             0             0             0          \n   0             0             0                                                                             \n6             0             1             1             1             0             1             0          \n   0             1             0                                                                             \n  schizo_raw.36 schizo_raw.37 schizo_raw.38 schizo_raw.39 schizo_raw.40 schizo_raw.41 schizo_raw.42 schizo_ra​‌​\nw.43 liebowitz liebowitz_raw.1                                                                               \n1             0             0             0             0             1             0             0          \n   0        14             0.0                                                                               \n2             1             0             0             0             0             1             0          \n   0        34             0.5                                                                               \n3             1             0             0             0             1             0             0          \n   1        54             1.5                                                                               \n4             0             0             0             1             1             0             0          \n   0        77             1.0                                                                               \n5             0             0             0             0             0             1             0          \n   0        33             0.5                                                                               \n6             1             0             1             0             1             1             0          \n   0        36             0.5                                                                               \n  liebowitz_raw.2 liebowitz_raw.3 liebowitz_raw.4 liebowitz_raw.5 liebowitz_raw.6 liebowitz_raw.7 liebowitz_r​‌​\naw.8 liebowitz_raw.9 liebowitz_raw.10                                                                        \n1             0.0             0.0             0.0             0.5             0.0             0.0            \n 1.0             1.0              0.0                                                                        \n2             1.0             0.0             0.0             1.5             3.0             1.5            \n 0.5             0.0              1.0                                                                        \n3             0.0             0.0             0.0             1.5             3.0             0.5            \n 0.5             2.5              3.0                                                                        \n4             2.0             0.0             0.0             2.5             1.0             1.0            \n 3.0             2.0              1.5                                                                        \n5             0.5             0.5             0.0             0.0             1.0             0.5            \n 0.5             1.0              1.0                                                                        \n6             0.0             1.0             0.0             0.0             3.0             0.0            \n 1.0             0.0              1.0                                                                        \n  liebowitz_raw.11 liebowitz_raw.12 liebowitz_raw.13 liebowitz_raw.14 liebowitz_raw.15 liebowitz_raw.16 liebo​‌​\nwitz_raw.17 liebowitz_raw.18                                                                                 \n1              0.0              0.5              0.0              0.0              0.0              0.0      \n        0.0              0.5                                                                                 \n2              0.0              0.0              0.0              0.5              1.5              1.5      \n        0.5              1.0                                                                                 \n3              1.5              1.0              0.0              0.5              2.0              0.5      \n        0.0              3.0                                                                                 \n4              1.5              1.0              2.0              1.5              1.0              3.0      \n        1.0              1.5                                                                                 \n5              1.0              2.0              0.0              0.5              1.0              0.5      \n        1.0              1.0                                                                                 \n6              1.0              1.0              0.0              0.0              1.0              3.0      \n        0.0              1.0                                                                                 \n  liebowitz_raw.19 liebowitz_raw.20 liebowitz_raw.21 liebowitz_raw.22 liebowitz_raw.23 liebowitz_raw.24      \n   AD     Compul          SW                                                                                 \n1              0.0              0.0              1.0              0.0              1.0              1.5 -0.12​‌​\n63712 -1.0465277 -1.19863855                                                                                 \n2              0.0              1.0              1.0              0.5              0.0              0.5 -1.30​‌​\n97687 -0.1967283 -0.00137155                                                                                 \n3              0.0              1.0              3.0              1.0              0.5              0.5 -1.00​‌​\n65824 -0.7567273 -0.12112407                                                                                 \n4              2.5              2.0              3.0              1.5              1.0              2.0  0.63​‌​\n05883 -0.5729659  0.38403954                                                                                 \n5              0.5              0.0              0.5              1.0              1.0              1.0 -0.75​‌​\n90258 -0.6533186 -0.58158803                                                                                 \n6              1.0              1.0              1.0              0.0              0.0              1.5  0.16​‌​\n37318  1.7838541 -0.40565007                                                                                 \n> head(original_dat_exp_2)                                                                                   \n       id age gender confMean  accuracy    mRatio anxiety eat apathy alcohol zung ocir leb iq bis schizo     \n   a         t   v_inter     v_delta                                                                         \n1 1015841  32      0 4.153110 0.7655502 1.0479822      37   3     34       3   29    3  14 11  52      1 1.10​‌​\n8100 0.4311574 1.1131439  0.02094840                                                                         \n2 1030622  46      1 1.391304 0.7342995 0.9740851      29  22     23       0   28    6  34 12  60      8 1.20​‌​\n3199 0.4793236 0.9111311  0.19132034                                                                         \n3 1103437  35      1 4.100962 0.7644231 1.0925834      21   2     28       2   25    1  54 11  56     12 1.19​‌​\n4258 0.3944112 1.1480653 -0.06391835                                                                         \n4 1144714  27      1 3.601942 0.7184466 0.6973681      42   8     42       6   44    4  77  7  74      4 1.93​‌​\n6678 0.3325144 0.1842692  0.29429705                                                                         \n5 1149809  50      0 3.917874 0.7439614 0.8720411      25   3     24       2   33    5  33 11  56      4 1.21​‌​\n9901 0.5780827 0.9387755  0.01434270                                                                         \n6 1171324  27      0 3.889952 0.7416268 0.5467073      53  16     29      12   43   18  36  8  63     28 1.48​‌​\n1527 0.4439481 0.8754697  0.31192224                                                                         \n       age.sc confMean.sc accuracy.sc    zung.sc anxiety.sc    ocir.sc       leb.sc       iq.sc  schizo.sc   \n   bis.sc     eat.sc  apathy.sc                                                                              \n1 -0.33728848  0.40854028   1.9438123 -0.7175535 -0.1792384 -1.0469798 -0.963816600  0.87221011 -2.2640883 -0​‌​\n.44302864 -0.5567252  0.3260282                                                                              \n2  0.98637381 -3.01195280   0.1856110 -0.8357937 -0.9130240 -0.4289831 -0.004180197  1.16043380 -0.2290564  0​‌​\n.24608900  1.4393531 -1.0105955                                                                              \n3 -0.05364656  0.34395441   1.8803968 -1.2176548 -1.8852121 -1.8124384  0.507731137  0.87221011  0.2684789 -0​‌​\n.08615366 -0.8850102 -0.3379163                                                                              \n4 -0.81002501 -0.27408101  -0.7062921  0.6871705  0.2025356 -0.8005572  0.903428565 -0.28068464 -1.0243377  1​‌​\n.25602098  0.3686580  1.0486301                                                                              \n5  1.36456304  0.11720120   0.7291969 -0.2821745 -1.3600626 -0.5992153 -0.037011031  0.87221011 -1.0243377 -0​‌​\n.08615366 -0.5567252 -0.8650568                                                                              \n6 -0.81002501  0.08261954   0.5978519  0.6097073  0.9031901  0.6737155  0.058757354  0.00753905  1.3540618  0​‌​\n.48104333  1.0944090 -0.2179165                                                                              \n  alcohol.sc       a.sc        t.sc v_inter.sc  v_delta.sc         AD     Compul          SW                 \n1  0.1892565 -1.2155845 -0.31726058  1.0814371 -1.05776600 -0.1263712 -1.0465277 -1.19863855                 \n2 -1.4100624 -0.9458786  0.02068257  0.4807164 -0.46924789 -1.3097687 -0.1967283 -0.00137155                 \n3 -0.1426322 -0.9712366 -0.57507895  1.1852821 -1.35092235 -1.0065824 -0.7567273 -0.12112407                 \n4  0.8348655  1.1343031 -1.00935830 -1.6807365 -0.11353405  0.6305883 -0.5729659  0.38403954                 \n5 -0.1426322 -0.8985118  0.71359527  0.5629217 -1.08058415 -0.7590258 -0.6533186 -0.58158803                 \n6  1.5490293 -0.1565277 -0.22751866  0.3746709 -0.05265113  0.1637318  1.7838541 -0.40565007                 \n> reproduced_dat_exp_1                                                                                       \n    subj_id age gender mean_confidence var_stimdevi  accuracy      m_ratio i_participant catch_question confi​‌​\ndence_check_high confidence_check_low iq                                                                     \n1   1023212  35      0        3.201923     412.2947 0.6586538  0.672245204           251              2      \n              11                    1  9                                                                     \n2   1039851  26      0        4.004926     409.6282 0.7339901  1.502890297           379              2      \n              11                    1  6                                                                     \n3   1045062  31      0        3.411483     411.8265 0.7990431  1.017948273           339              2      \n              11                    1 12                                                                     \n4   1048237  41      1        2.839024     406.1235 0.7268293  0.559706077           380              2      \n              11                    1 13                                                                     \n5   1051828  36      1        3.927885     411.0405 0.7740385  1.151477623           381              2      \n              11                    2  4                                                                     \n6   1055022  30      1        3.473684     408.7831 0.7799043  0.917765795           180              2      \n              11                    1 12                                                                     \n7   1070782  32      1        3.234146     407.9253 0.6878049  0.765063723            76              2      \n               9                    3  4                                                                     \n8   1073582  44      1        3.409524     410.2033 0.7428571  0.975733137           181              2      \n              11                    1 10                                                                     \n9   1077383  33      0        3.495238     410.2033 0.8238095  0.837471673           419              2      \n              11                    1 11                                                                     \n10  1078057  53      1        3.438095     410.2033 0.7428571  1.181253180           182              2      \n              11                    1  9                                                                     \n11  1083579  33      0        3.033816     411.3152 0.7198068  0.323780561           382              2      \n              11                    1 11                                                                     \n12  1090522  21      1        3.320574     410.8603 0.8038278  1.122486630           156              2      \n               9                    1  2                                                                     \n13  1101389  24      1        3.110048     411.8265 0.6602871  0.836842598            97              2      \n              11                    1  7                                                                     \n14  1109723  30      0        3.091346     407.8499 0.7115385  1.007653408           256              2      \n              11                    1  5                                                                     \n15  1118958  60      0        4.495192     408.3508 0.7067308  1.010997922           294              2      \n               9                    4  2                                                                     \n16  1152799  40      1        3.711538     411.0011 0.6778846  0.503592379           420              2      \n              11                    1  8                                                                     \n17  1153177  29      0        3.766990     414.0904 0.7330097  0.790992816           456              2      \n              11                    1  7                                                                     \n18  1196569  44      1        2.631579     412.1646 0.6411483  1.060943784           421              2      \n              11                    1 11                                                                     \n19  1197000  28      1        3.567961     411.3279 0.6990291  0.938555850           340              2      \n              11                    1 12                                                                     \n20  1227512  29      1        3.531401     407.8033 0.7922705  0.529680649           422              2      \n              11                    2  9                                                                     \n21  1230311  35      0        3.419048     410.2033 0.7666667  0.648387432           457              2      \n              11                    1 15                                                                     \n22  1258622  39      1        3.595122     408.5517 0.6243902  2.509773195           295              2      \n              11                    1  6                                                                     \n23  1271331  53      0        3.458937     406.5101 0.5797101  1.205970020           126              2      \n              11                    1  4                                                                     \n24  1295121  34      1        4.363636     411.1598 0.6076555  1.352929836           484              2      \n              11                    3  5                                                                     \n25  1317518  40      0        3.290476     410.2033 0.7761905  0.547870451           183              2      \n              11                    1  6                                                                     \n26  1321158  34      0        3.893204     402.9041 0.7475728  0.482952841           423              2      \n              11                    1  9                                                                     \n27  1326581  27      0        4.272727     407.9716 0.6889952  0.698550323           371              2      \n              11                    1 11                                                                     \n28  1337403  28      0        3.471154     411.8064 0.6923077  1.265310655           480              2      \n              11                    1  8                                                                     \n29  1362008  29      0        4.147619     410.2033 0.7047619  1.125557793           493              2      \n              11                    1  6                                                                     \n30  1363563  27      1        4.110048     412.1646 0.7177033  1.002136204           341              2      \n              11                    1  9                                                                     \n31  1369996  35      0        3.487923     408.1364 0.7246377  0.986760037             8              2      \n              11                    1  6                                                                     \n32  1385313  61      0        3.125604     411.2765 0.7632850  0.199488127           383              2      \n              11                    1 11                                                                     \n33  1412443  56      1        3.404762     410.2033 0.7285714  0.810416074            98              2      \n              11                    2 11                                                                     \n34  1437292  35      0        4.658654     411.0553 0.6538462  1.239906608           127              2      \n              11                    3  8                                                                     \n35  1455851  32      1        4.490291     412.5243 0.6407767  0.250442748           257              2      \n              11                    1  6                                                                     \n36  1497406  33      1        3.604762     410.2033 0.7428571  1.222615446           458              2      \n              11                    1  6                                                                     \n37  1519714  23      1        3.502415     415.8899 0.7246377  0.646377975           424              2      \n              11                    3  5                                                                     \n38  1520091  51      1        3.350962     413.7551 0.7548077  0.983123396            77              2      \n              11                    2 10                                                                     \n39  1573492  29      1        3.325359     411.0149 0.7464115  0.566493148           342              2      \n              11                    1  5                                                                     \n40  1612737  31      1        3.476190     410.2033 0.6666667  1.226681139           184              2      \n              11                    3  7                                                                     \n41  1619140  28      0        3.004785     408.7831 0.6076555  0.701762082           219              2      \n               9                    3  3                                                                     \n42  1673893  35      0        2.669856     406.4257 0.7464115  0.969342816           343              2      \n              11                    1  5                                                                     \n43  1682815  56      1        3.464115     411.2951 0.6889952  0.483392054            99              2      \n              11                    1  8                                                                     \n44  1694168  52      1        3.782609     414.3639 0.7584541  0.966123535           157              2      \n              11                    1 14                                                                     \n45  1711016  35      1        3.418269     406.8430 0.6826923  0.526867079            78              2      \n              11                    1  9                                                                     \n46  1718497  55      0        2.928230     407.3822 0.7224880  0.297141017           258              2      \n              11                    1 10                                                                     \n47  1727806  26      0        2.661836     411.0470 0.8067633  0.413274037           384              2      \n              11                    1  8                                                                     \n48  1740458  50      0        3.631579     411.5366 0.7942584  0.428871399            32              2      \n              11                    1 15                                                                     \n49  1760872  61      0        2.928230     411.6429 0.7129187  0.895627656           100              2      \n              11                    1  9                                                                     \n50  1792604  57      1        3.360577     410.2131 0.7451923  0.612987819            79              2      \n              11                    1  8                                                                     \n51  1794282  37      1        3.597087     411.7717 0.7572816  0.611316813           158              2      \n              11                    1  9                                                                     \n52  1826833  30      0        3.487923     405.7689 0.7053140  1.374966240             9              2      \n              11                    1 10                                                                     \n53  1833340  30      0        3.191388     411.4207 0.8133971  0.857673625           459              2      \n              11                    1  9                                                                     \n54  1848676  29      0        3.131068     410.3420 0.7184466  0.268483295           296              2      \n              11                    1  8                                                                     \n55  1872696  32      1        4.121951     414.2319 0.6829268  1.185802826           332              2      \n              11                    1  8                                                                     \n56  1877177  47      1        3.709524     410.2033 0.7000000  1.162529073           259              2      \n              11                    1 15                                                                     \n57  1886070  19      0        3.850962     412.2646 0.8269231  0.724711098           159              2      \n              11                    1  7                                                                     \n58  1899570  32      1        4.165049     410.2386 0.6747573  1.389503976           385              2      \n              11                    1  2                                                                     \n59  1920110  25      0        3.932692     406.8501 0.7211538  1.022431892           160              2      \n              11                    1  6                                                                     \n60  1935217  28      1        3.824390     414.8270 0.8146341  0.647212376           128              2      \n              11                    1 12                                                                     \n61  1983955  31      1        4.233010     408.6218 0.7766990  0.468563081           297              2      \n              11                    1  9                                                                     \n62  2009509  25      0        3.733010     410.9795 0.7669903  1.055900201           101              2      \n              11                    1  3                                                                     \n63  2033059  26      1        3.585714     410.2033 0.7809524  0.611125066           161              2      \n              11                    1 10                                                                     \n64  2047659  30      0        3.461538     410.2131 0.7259615  0.248880330           481              2      \n              11                    1  6                                                                     \n65  2061073  35      1        2.768116     412.8548 0.6908213  0.675855740           425              2      \n              11                    1  4                                                                     \n66  2070571  21      0        3.373786     407.5081 0.7718447  0.380721400           344              2      \n              11                    3  9                                                                     \n67  2073294  34      0        3.434146     419.0453 0.6682927  1.412114244           298              2      \n              11                    1  5                                                                     \n68  2100552  33      1        3.483092     410.3095 0.8599034  0.535041942           129              2      \n              11                    1  9                                                                     \n69  2149044  31      0        3.634615     413.1395 0.7548077  0.591721665           386              2      \n              11                    1 13                                                                     \n70  2149690  46      1        2.025641     412.2062 0.6153846 -0.034679525             1              2      \n              11                    1  7                                                                     \n71  2173609  45      1        3.567961     411.0911 0.7475728  1.219752751           460              2      \n              11                    1  6                                                                     \n72  2180510  43      1        3.804762     410.2033 0.7666667  1.027013248           485              2      \n              11                    1  7                                                                     \n73  2218848  33      1        2.605769     405.5906 0.7500000  0.501185459           299              2      \n              11                    1  5                                                                     \n74  2227745  29      1        3.028571     410.2033 0.7047619  1.086589383           461              2      \n              11                    1 10                                                                     \n75  2240470  23      1        2.870192     409.5800 0.7451923  0.906525571           300              2      \n              11                    2  6                                                                     \n76  2241041  35      1        3.509804     410.4858 0.6960784  0.717053120           102              2      \n               9                    4  2                                                                     \n77  2254139  29      0        3.086538     408.9928 0.6778846  0.863434017           301              2      \n              11                    1 10                                                                     \n78  2255107  22      0        3.352381     410.2033 0.6857143  1.129770655            33              2      \n              11                    1  7                                                                     \n79  2310017  25      1        3.091787     414.0262 0.6859903  0.810510186           462              2      \n              11                    1  5                                                                     \n80  2355524  65      1        3.466346     408.0160 0.7355769  0.768172103           345              2      \n              11                    1 10                                                                     \n81  2368375  24      1        3.565217     408.4873 0.6473430  1.026845691           302              2      \n              11                    1 10                                                                     \n82  2420227  38      1        3.483092     404.3998 0.6521739  0.541650039           260              2      \n              11                    1 10                                                                     \n83  2423251  38      0        3.263158     407.3822 0.6124402  1.037748527           130              2      \n              11                    1  0                                                                     \n84  2455597  56      1        4.990476     410.2033 0.6714286  0.881926558           346              2      \n              11                    1  3                                                                     \n85  2487613  31      1        4.551220     414.3911 0.7365854  1.101368377           463              2      \n              11                    1  9                                                                     \n86  2541321  33      1        3.254808     408.9847 0.8125000  0.719615587            10              2      \n              11                    1 11                                                                     \n87  2578895  28      0        3.533981     410.3425 0.8155340  0.454748969           162              2      \n              11                    1  2                                                                     \n88  2582961  65      0        3.404878     407.2528 0.5902439  0.947206219           347              2      \n              11                    1  6                                                                     \n89  2604784  24      0        3.519231     409.4216 0.7932692  0.454053177           185              2      \n              11                    1 10                                                                     \n90  2607844  29      0        3.796117     408.4102 0.7038835  0.764807624           387              2      \n              11                    3                                                                        \n>                                                                                                            \n>   loadings_1 <- reproduce_factor_analysis_results(reproduced_dat = reproduce$                              \n+                                                    should_return_loadings = $                              \n>                                                                                                            \n>   loadings_2 <- reproduce_factor_analysis_results(reproduced_dat = reproduce$                              \n+                                                    should_return_loadings = $                              \n>                                                                                                            \n>   items_in_both_experiments <- intersect(rownames(loadings_1),                                             \n+                                          rownames(loadings_2))                                             \n>   s_1 <- rownames(loadings_1) %in% items_in_both_experiments                                               \n>   s_2 <- rownames(loadings_2) %in% items_in_both_experiments                                               \n>                                                                                                            \n>   # Rows are Experiment 1, Columns are Experiment 2                                                        \n>   colnames(loadings_2) <- c(\"AD\", \"Compul\", \"SW\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n             AD     Compul         SW                                                                        \nML1  0.08698779  0.6820229 -0.1864245                                                                        \nML2 -0.02462814 -0.5296278  0.8983969                                                                        \nML3  0.67875787 -0.1723325 -0.5017810                                                                        \n>                                                                                                            \n>   colnames(loadings_1) <- c(\"Compul\", \"SW\", \"AD\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \n>                                                                                                            \n>   loadings_1_sorted <- loadings_1[, c(3, 1, 2)]                                                            \n>   cor(loadings_1_sorted[s_1,], loadings_2[s_2,])                                                           \n                AD     Compul         SW                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \n> if (dev.cur() != 1) dev.off()                                                                              \n>   dev.new(width = 14, height = 7)                                                                          \n>   layout(matrix(c(1, 4,                                                                                    \n+                   2, 5,                                                                                    \n+                   3, 6), nrow = 3, byrow = TRUE))                                                          \n>                                                                                                            \n>   loadings_1_sorted_spaced <- loadings_2*0                                                                 \n>   for (i in 1:nrow(loadings_2))                                                                            \n+   {                                                                                                        \n+     n <- rownames(loadings_2)[i]                                                                           \n+     idx <- which(n == rownames(loadings_1_sorted))                                                         \n+     if (length(idx) > 0) loadings_1_sorted_spaced[i, ] <- loadings_1_sorted[$                              \n+   }                                                                                                        \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+            = \"\", cex.lab = 1.5)                                                                            \nError: unexpected '=' in:                                                                                    \n\"          col = get_colors(loadings_1_sorted_spaced),                                                       \n           =\"                                                                                                \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           xlab = \"\")                                                                                       \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           xlab = \"\")                                                                                       \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           xlab = \"\")                                                                                       \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           xlab = \"\")                                                                                       \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           xlab = \"\")                                                                                       \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+            = \"\", cex.lab = 1.5)                                                                            \nError: unexpected '=' in:                                                                                    \n\"          col = get_colors(loadings_1_sorted_spaced),                                                       \n           =\"                                                                                                \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", cex.lab = 1.5)                                                                   \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", cex.axis = 1.5)                                                                  \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", cex.axis = 1.5, ylim = c(-.5, +.5))                                              \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", cex.axis = 1.5, ylim = c(-.6, +.6))                                              \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", cex.axis = 1.5, ylim = c(-.6, +.6), cex.main = 1.5)                              \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", cex.axis = 1.5, yaxt = \"n\", cex.main = 1.5)                                      \n>   axis(2, at = c(-0.5, 0.0, +0.5))                                                                         \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", cex.main = 1.5)                                                      \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.5, +0.5), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           xlab = \"\")                                                                                       \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   loadings_1 <- reproduce_factor_analysis_results(reproduced_dat = reproduce$                              \n+                                                    should_return_loadings = $                              \n>                                                                                                            \n>   loadings_2 <- reproduce_factor_analysis_results(reproduced_dat = reproduce$                              \n+                                                    should_return_loadings = $                              \n>                                                                                                            \n>   items_in_both_experiments <- intersect(rownames(loadings_1),                                             \n+                                          rownames(loadings_2))                                             \n>   s_1 <- rownames(loadings_1) %in% items_in_both_experiments                                               \n>   s_2 <- rownames(loadings_2) %in% items_in_both_experiments                                               \n>                                                                                                            \n>   # Rows are Experiment 1, Columns are Experiment 2                                                        \n>   colnames(loadings_2) <- c(\"AD\", \"Compul\", \"SW\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n             AD     Compul         SW                                                                        \nML1  0.08698779  0.6820229 -0.1864245                                                                        \nML2 -0.02462814 -0.5296278  0.8983969                                                                        \nML3  0.67875787 -0.1723325 -0.5017810                                                                        \n>                                                                                                            \n>   colnames(loadings_1) <- c(\"Compul\", \"SW\", \"AD\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \n>                                                                                                            \n>   loadings_1_sorted <- loadings_1[, c(3, 1, 2)]                                                            \n>   cor(loadings_1_sorted[s_1,], loadings_2[s_2,])                                                           \n                AD     Compul         SW                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \n>                                                                                                            \n>   loadings_1_sorted_spaced <- loadings_2*0                                                                 \n>   for (i in 1:nrow(loadings_2))                                                                            \n+   {                                                                                                        \n+     n <- rownames(loadings_2)[i]                                                                           \n+     idx <- which(n == rownames(loadings_1_sorted))                                                         \n+     if (length(idx) > 0) loadings_1_sorted_spaced[i, ] <- loadings_1_sorted[$                              \n+   }                                                                                                        \n>                                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                                            \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 14, height = 7)                                                                          \n>   layout(matrix(c(1, 4,                                                                                    \n+                   2, 5,                                                                                    \n+                   3, 6), nrow = 3, byrow = TRUE))                                                          \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   legend(\"bottom\",                                                                                         \n+          fill = conversion_map[,2])                                                                        \nError in legend(\"bottom\", fill = conversion_map[, 2]) :                                                      \n  argument \"legend\" is missing, with no default                                                              \n>   legend(\"bottom\",                                                                                         \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"))                                                                     \nError: object 'conversion_map' not found                                                                     \n> conversion_map <- matrix(c(\"^alcohol+\"      , rgb(208/255, 109/255, 176/255),                              \n+                            \"^apathy+\"       , rgb(135/255, 135/255, 135/255),                              \n+                            \"^zung+\"         , rgb( 99/255, 161/255,  62/255),                              \n+                            \"^eat+\"          , rgb(127/255,  71/255,  36/255),                              \n+                            \"^anxiety+\"      , rgb(176/255,  29/255,  33/255),                              \n+                            \"^impulsiveness+\", rgb(116/255,  56/255, 142/255),                              \n+                            \"^ocir+\"         , rgb(213/255, 113/255,  33/255),                              \n+                            \"^schizo+\"       , rgb(207/255, 217/255,  58/255),                              \n+                            \"^liebowitz+\"    , rgb( 72/255, 102/255, 166/255)                               \n+                            ), ncol = 2, byrow = TRUE)                                                      \n>   legend(\"bottom\",                                                                                         \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"))                                                                     \n> par(\"bg\")                                                                                                  \n[1] \"transparent\"                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                                            \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 14, height = 7)                                                                          \n>   layout(matrix(c(1, 1, 1, 4, 4, 4, 7,                                                                     \n+                   2, 2, 2, 5, 5, 5, 8,                                                                     \n+                   3, 3, 3, 6, 6, 6, 9), nrow = 3, byrow = TRUE))                                           \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   legend(\"left\",                                                                                           \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"))                                                                     \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>                                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                                            \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 14, height = 7)                                                                          \n>   layout(matrix(c(1, 1, 1, 4, 4, 4, 7,                                                                     \n+                   2, 2, 2, 5, 5, 5, 8,                                                                     \n+                   3, 3, 3, 6, 6, 6, 9), nrow = 3, byrow = TRUE))                                           \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   legend(\"left\",                                                                                           \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"),                                                                     \n+          xpd = TRUE,                                                                                       \n+          cex = 1.5)                                                                                        \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n> par(\"mar\")                                                                                                 \n[1] 5.1 4.1 4.1 2.1                                                                                          \n>  if (dev.cur() != 1) dev.off()                                                                             \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 14, height = 7)                                                                          \n>   layout(matrix(c(1, 1, 1, 4, 4, 4, 7,                                                                     \n+                   2, 2, 2, 5, 5, 5, 8,                                                                     \n+                   3, 3, 3, 6, 6, 6, 9), nrow = 3, byrow = TRUE))                                           \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   mar.default <- par(\"mar\")                                                                                \n>   par(mar = c(5.1, 0, 4.1, 2.1))                                                                           \n>   legend(\"left\",                                                                                           \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"),                                                                     \n+          xpd = TRUE,                                                                                       \n+          cex = 1.5)                                                                                        \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   par(mar = mar.default)                                                                                   \n>  colnames(loadings_2) <- c(\"AD\", \"Compul\", \"SW\")                                                           \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \n>                                                                                                            \n>   colnames(loadings_1) <- c(\"Compul\", \"SW\", \"AD\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \n>                                                                                                            \n>   loadings_1_sorted <- loadings_1[, c(3, 1, 2)]                                                            \n>   cor(loadings_1_sorted[s_1,], loadings_2[s_2,])                                                           \n                AD     Compul         SW                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \n>                                                                                                            \n>   loadings_1_sorted_spaced <- loadings_2*0                                                                 \n>   for (i in 1:nrow(loadings_2))                                                                            \n+   {                                                                                                        \n+     n <- rownames(loadings_2)[i]                                                                           \n+     idx <- which(n == rownames(loadings_1_sorted))                                                         \n+     if (length(idx) > 0) loadings_1_sorted_spaced[i, ] <- loadings_1_sorted[$                              \n+   }                                                                                                        \n>                                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                                            \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 16, height = 7)                                                                          \n>   layout(matrix(c(1, 1, 1, 4, 4, 4, 7,                                                                     \n+                   2, 2, 2, 5, 5, 5, 8,                                                                     \n+                   3, 3, 3, 6, 6, 6, 9), nrow = 3, byrow = TRUE))                                           \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   mar.default <- par(\"mar\")                                                                                \n>   par(mar = c(5.1, 0, 4.1, 2.1))                                                                           \n>   legend(\"left\",                                                                                           \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"),                                                                     \n+          xpd = TRUE,                                                                                       \n+          cex = 1.5)                                                                                        \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   par(mar = mar.default)                                                                                   \n>                                                                                                            \n>   loadings_1_sorted_spaced <- loadings_2*0                                                                 \n>   for (i in 1:nrow(loadings_2))                                                                            \n+   {                                                                                                        \n+     n <- rownames(loadings_2)[i]                                                                           \n+     idx <- which(n == rownames(loadings_1_sorted))                                                         \n+     if (length(idx) > 0) loadings_1_sorted_spaced[i, ] <- loadings_1_sorted[$                              \n+   }                                                                                                        \n>                                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                                            \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 16, height = 7)                                                                          \n>   layout(matrix(c(1, 1, 1, 4, 4, 4, 7,                                                                     \n+                   2, 2, 2, 5, 5, 5, 8,                                                                     \n+                   3, 3, 3, 6, 6, 6, 9), nrow = 3, byrow = TRUE))                                           \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   mar.default <- par(\"mar\")                                                                                \n>   par(mar = c(5.1, 0, 4.1, 2.1))                                                                           \n>   legend(\"left\",                                                                                           \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"),                                                                     \n+          xpd = TRUE,                                                                                       \n+          cex = 1.5,                                                                                        \n+          border = 0)                                                                                       \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   par(mar = mar.default)                                                                                   \n> ?legend                                                                                                    \nstarting httpd help server ... done                                                                          \n> eval(parse(\"C:\\\\Users\\\\saschameyen\\\\Desktop\\\\Error_Reviews_Rouault_et_al_201$                              \n>                                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                                            \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 16, height = 7)                                                                          \n>   layout(matrix(c(1, 1, 4, 4, 7,                                                                           \n+                   2, 2, 5, 5, 8,                                                                           \n+                   3, 3, 6, 6, 9), nrow = 3, byrow = TRUE))                                                 \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   mar.default <- par(\"mar\")                                                                                \n>   par(mar = c(5.1, 0, 4.1, 2.1))                                                                           \n>   legend(\"left\",                                                                                           \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"),                                                                     \n+          xpd = TRUE,                                                                                       \n+          cex = 1.5,                                                                                        \n+          border = 0)                                                                                       \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   par(mar = mar.default)                                                                                   \n> eval(parse(\"C:\\\\Users\\\\saschameyen\\\\Desktop\\\\Error_Reviews_Rouault_et_al_201$                              \n> eval(parse(\"C:\\\\Users\\\\saschameyen\\\\Desktop\\\\Error_Reviews_Rouault_et_al_201$                              \n>   plot(original_dat_exp_2$AD, reproduced_dat_exp_2$AD)                                                     \n>   plot(original_dat_exp_2$Compul, reproduced_dat_exp_2$Compul)                                             \n>   plot(original_dat_exp_2$SW, reproduced_dat_exp_2$SW)                                                     \n>                                                                                                            \n>   # Preparing loadings of Experiment 1 to be comparable to those of Experime$                              \n>   loadings_1 <- reproduce_factor_analysis_results(reproduced_dat = reproduce$                              \n+                                                    should_return_loadings = $                              \n>                                                                                                            \n>   loadings_2 <- reproduce_factor_analysis_results(reproduced_dat = reproduce$                              \n+                                                    should_return_loadings = $                              \n>                                                                                                            \n>   items_in_both_experiments <- intersect(rownames(loadings_1),                                             \n+                                          rownames(loadings_2))                                             \n>   s_1 <- rownames(loadings_1) %in% items_in_both_experiments                                               \n>   s_2 <- rownames(loadings_2) %in% items_in_both_experiments                                               \n>                                                                                                            \n>   # Rows are Experiment 1, Columns are Experiment 2                                                        \n>   colnames(loadings_2) <- c(\"AD\", \"Compul\", \"SW\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n             AD     Compul         SW                                                                        \nML1  0.08698779  0.6820229 -0.1864245                                                                        \nML2 -0.02462814 -0.5296278  0.8983969                                                                        \nML3  0.67875787 -0.1723325 -0.5017810                                                                        \n>                                                                                                            \n>   colnames(loadings_1) <- c(\"Compul\", \"SW\", \"AD\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \n>                                                                                                            \n>   loadings_1_sorted <- loadings_1[, c(1, 3, 2)]                                                            \n>   cor(loadings_1_sorted[s_1,], loadings_2[s_2,])                                                           \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \n>                                                                                                            \n>   loadings_1_sorted_spaced <- loadings_2*0                                                                 \n>   for (i in 1:nrow(loadings_2))                                                                            \n+   {                                                                                                        \n+     n <- rownames(loadings_2)[i]                                                                           \n+     idx <- which(n == rownames(loadings_1_sorted))                                                         \n+     if (length(idx) > 0) loadings_1_sorted_spaced[i, ] <- loadings_1_sorted[$                              \n+   }                                                                                                        \n>                                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                                            \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 16, height = 7)                                                                          \n>   layout(matrix(c(1, 1, 4, 4, 7,                                                                           \n+                   2, 2, 5, 5, 8,                                                                           \n+                   3, 3, 6, 6, 9), nrow = 3, byrow = TRUE))                                                 \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   mar.default <- par(\"mar\")                                                                                \n>   par(mar = c(5.1, 0, 4.1, 2.1))                                                                           \n>   legend(\"left\",                                                                                           \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"),                                                                     \n+          xpd = TRUE,                                                                                       \n+          cex = 1.5,                                                                                        \n+          border = 0)                                                                                       \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   par(mar = mar.default)                                                                                   \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \n>   cor(loadings_1_sorted[s_1,], loadings_2[s_2,])                                                           \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \n>   colnames(loadings_2) <- c(\"AD\", \"Compul\", \"SW\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n                AD     Compul         SW                                                                     \nCompul  0.08698779  0.6820229 -0.1864245                                                                     \nSW     -0.02462814 -0.5296278  0.8983969                                                                     \nAD      0.67875787 -0.1723325 -0.5017810                                                                     \n>   loadings_1_sorted <- loadings_1[, c(1, 3, 2)]                                                            \n>   colnames(loadings_1_sorted) <- c(\"AD\", \"Compul\", \"SW\")                                                   \n> # Preparing loadings of Experiment 1 to be comparable to those of Experiment$                              \n>   loadings_1 <- reproduce_factor_analysis_results(reproduced_dat = reproduce$                              \n+                                                    should_return_loadings = $                              \n>                                                                                                            \n>   loadings_2 <- reproduce_factor_analysis_results(reproduced_dat = reproduce$                              \n+                                                    should_return_loadings = $                              \n>                                                                                                            \n>   items_in_both_experiments <- intersect(rownames(loadings_1),                                             \n+                                          rownames(loadings_2))                                             \n>   s_1 <- rownames(loadings_1) %in% items_in_both_experiments                                               \n>   s_2 <- rownames(loadings_2) %in% items_in_both_experiments                                               \n>                                                                                                            \n>   # Rows are Experiment 1, Columns are Experiment 2                                                        \n>   colnames(loadings_2) <- c(\"AD\", \"Compul\", \"SW\")                                                          \n>   cor(loadings_1[s_1,], loadings_2[s_2,])                                                                  \n             AD     Compul         SW                                                                        \nML1  0.08698779  0.6820229 -0.1864245                                                                        \nML2 -0.02462814 -0.5296278  0.8983969                                                                        \nML3  0.67875787 -0.1723325 -0.5017810                                                                        \n>                                                                                                            \n>   loadings_1_sorted <- loadings_1[, c(1, 3, 2)]                                                            \n>   colnames(loadings_1_sorted) <- c(\"AD\", \"Compul\", \"SW\")                                                   \n>   loadings_1_sorted_spaced <- loadings_2*0                                                                 \n>   for (i in 1:nrow(loadings_2))                                                                            \n+   {                                                                                                        \n+     n <- rownames(loadings_2)[i]                                                                           \n+     idx <- which(n == rownames(loadings_1_sorted))                                                         \n+     if (length(idx) > 0) loadings_1_sorted_spaced[i, ] <- loadings_1_sorted[$                              \n+   }                                                                                                        \n>                                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                                            \nnull device                                                                                                  \n          1                                                                                                  \n>   dev.new(width = 16, height = 7)                                                                          \n>   layout(matrix(c(1, 1, 4, 4, 7,                                                                           \n+                   2, 2, 5, 5, 8,                                                                           \n+                   3, 3, 6, 6, 9), nrow = 3, byrow = TRUE))                                                 \n>                                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   barplot(loadings_2[, 1],                                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                                      \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 2],                                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",                               \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>   barplot(loadings_2[, 3],                                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                                              \n+           col = get_colors(loadings_2),                                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                                         \n>                                                                                                            \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   mar.default <- par(\"mar\")                                                                                \n>   par(mar = c(5.1, 0, 4.1, 2.1))                                                                           \n>   legend(\"left\",                                                                                           \n+          fill = conversion_map[,2],                                                                        \n+          legend = c(\"Alcoholism\",                                                                          \n+                     \"Apathy\",                                                                              \n+                     \"Depression\",                                                                          \n+                     \"Eating Disorders\",                                                                    \n+                     \"Generalized Anxiety\",                                                                 \n+                     \"Impulsivity\",                                                                         \n+                     \"OCD\",                                                                                 \n+                     \"Schizotypy\",                                                                          \n+                     \"Social Anxiety\"),                                                                     \n+          xpd = TRUE,                                                                                       \n+          cex = 1.5,                                                                                        \n+          border = 0)                                                                                       \n>   plot(1, 1, type = 'n',                                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                                 \n>   par(mar = mar.default)                                                                                   \n>   loadings_1_sorted <- loadings_1                                                                          \n>                                                                                            \n>   loadings_1_sorted_spaced <- loadings_2*0                                                 \n>   for (i in 1:nrow(loadings_2))                                                            \n+   {                                                                                        \n+     n <- rownames(loadings_2)[i]                                                           \n+     idx <- which(n == rownames(loadings_1_sorted))                                         \n+     if (length(idx) > 0) loadings_1_sorted_spaced[i, ] <- loadings_1_sorted[$              \n+   }                                                                                        \n>                                                                                            \n>   if (dev.cur() != 1) dev.off()                                                            \nnull device                                                                                  \n          1                                                                                  \n>   dev.new(width = 16, height = 7)                                                          \n>   layout(matrix(c(1, 1, 4, 4, 7,                                                           \n+                   2, 2, 5, 5, 8,                                                           \n+                   3, 3, 6, 6, 9), nrow = 3, byrow = TRUE))                                 \n>                                                                                            \n>   barplot(loadings_1_sorted_spaced[, 1],                                                   \n+           main = \"Exp. 1: Factor Anxious-Depression\",                                      \n+           col = get_colors(loadings_1_sorted_spaced),                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                         \n>   barplot(loadings_1_sorted_spaced[, 2],                                                   \n+           main = \"Exp. 1: Factor Compulsive Behavior and Intrusive Thought\",               \n+           col = get_colors(loadings_1_sorted_spaced),                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                         \n>   barplot(loadings_1_sorted_spaced[, 3],                                                   \n+           main = \"Exp. 1: Social Withdrawal\",                                              \n+           col = get_colors(loadings_1_sorted_spaced),                                      \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                         \n>                                                                                            \n>   barplot(loadings_2[, 1],                                                                 \n+           main = \"Exp. 2: Factor Anxious-Depression\",                                      \n+           col = get_colors(loadings_2),                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                         \n>   barplot(loadings_2[, 2],                                                                 \n+           main = \"Exp. 2: Factor Compulsive Behavior and Intrusive Thought\",               \n+           col = get_colors(loadings_2),                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                         \n>   barplot(loadings_2[, 3],                                                                 \n+           main = \"Exp. 2: Social Withdrawal\",                                              \n+           col = get_colors(loadings_2),                                                    \n+           names.arg = \"\", yaxt = \"n\", ylim = c(-0.6, +0.6), cex.main = 1.5)                \n>   axis(2, at = c(-0.5, 0.0, +0.5), cex.axis = 1.5)                                         \n>                                                                                            \n>   plot(1, 1, type = 'n',                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                 \n>   plot(1, 1, type = 'n',                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                 \n>   mar.default <- par(\"mar\")                                                                \n>   par(mar = c(5.1, 0, 4.1, 2.1))                                                           \n>   legend(\"left\",                                                                           \n+          fill = conversion_map[,2],                                                        \n+          legend = c(\"Alcoholism\",                                                          \n+                     \"Apathy\",                                                              \n+                     \"Depression\",                                                          \n+                     \"Eating Disorders\",                                                    \n+                     \"Generalized Anxiety\",                                                 \n+                     \"Impulsivity\",                                                         \n+                     \"OCD\",                                                                 \n+                     \"Schizotypy\",                                                          \n+                     \"Social Anxiety\"),                                                     \n+          xpd = TRUE,                                                                       \n+          cex = 1.5,                                                                        \n+          border = 0)                                                                       \n>   plot(1, 1, type = 'n',                                                                   \n+        xlab = '', ylab = '', axes = FALSE)                                                 \n>   par(mar = mar.default)                                                                   \n> validate_factor_analysis(reproduced_dat_exp_1,                                                                                           \n+                          original_dat_exp_2,                                                                                             \n+                          reproduced_dat_exp_2)                                                                                           \n>                                                                                                                                          \n> # Clear workspace and load all scripts and packages ------------------------$                                                            \n> rm(list = ls())                                                                                                                          \n> source('Utilities/load_all_scripts_in_project.R')                                                                                        \n                                                                                                                                           \nSourcing all analysis scripts.                                                                                                             \nSourcing 01/39: Scripts/1_get_matlab_files/get_mat_files.R                                                                                 \nSourcing 02/39: Scripts/1_get_matlab_files/get_number_of_participants.R                                                                    \nSourcing 03/39: Scripts/1_get_matlab_files/get_variable_labels_for_dat.R                                                                   \nSourcing 04/39: Scripts/2_reproduce_summary_data_exp_1/combine_reproduced_dat.R                                                            \nSourcing 05/39: Scripts/2_reproduce_summary_data_exp_1/fit_meta_d_MLE.R                                                                    \nSourcing 06/39: Scripts/2_reproduce_summary_data_exp_1/get_factor_analysis_dat.R                                                           \nSourcing 07/39: Scripts/2_reproduce_summary_data_exp_1/get_full_perceptual_task_dat_exp_1.R                                                \nSourcing 08/39: Scripts/2_reproduce_summary_data_exp_1/get_full_questionnaire_dat_exp_1.R                                                  \nSourcing 09/39: Scripts/2_reproduce_summary_data_exp_1/get_perceptual_task_summary_information.R                                           \nSourcing 10/39: Scripts/2_reproduce_summary_data_exp_1/reproduce_factor_analysis_results.R                                                 \nSourcing 11/39: Scripts/2_reproduce_summary_data_exp_1/reproduce_individual_meta_fit.R                                                     \nSourcing 12/39: Scripts/2_reproduce_summary_data_exp_1/reproduce_summary_data_exp_1.R                                                      \nSourcing 13/39: Scripts/3_reproduce_summary_data_exp_2/get_full_perceptual_task_dat_exp_2.R                                                \nSourcing 14/39: Scripts/3_reproduce_summary_data_exp_2/get_full_questionnaire_dat_exp_2.R                                                  \nSourcing 15/39: Scripts/3_reproduce_summary_data_exp_2/reproduce_individual_meta_fit.R                                                     \nSourcing 16/39: Scripts/3_reproduce_summary_data_exp_2/reproduce_summary_data_exp_2.R                                                      \nSourcing 17/39: Scripts/4_validation/get_regression_coefficients.R                                                                         \nSourcing 18/39: Scripts/4_validation/validate_DDM_fit.R                                                                                    \nSourcing 19/39: Scripts/4_validation/validate_difficulty_binning.R                                                                         \nSourcing 20/39: Scripts/4_validation/validate_exclusions.R                                                                                 \nSourcing 21/39: Scripts/4_validation/validate_factor_analysis.R                                                                            \nSourcing 22/39: Scripts/4_validation/validate_factor_analysis_overfit.R                                                                    \nSourcing 23/39: Scripts/4_validation/validate_loading_similarity_exp_1_vs_2.R                                                              \nSourcing 24/39: Scripts/4_validation/validate_m_ratio.R                                                                                    \nSourcing 25/39: Scripts/4_validation/validate_missing_metacognitive_efficiency_analysis_in_exp_1.R                                         \nSourcing 26/39: Scripts/4_validation/validate_model_comparison.R                                                                           \nSourcing 27/39: Scripts/4_validation/validate_mturk_sample.R                                                                               \nSourcing 28/39: Scripts/4_validation/validate_original_vs_reproduced_data_exp_2.R                                                          \nSourcing 29/39: Scripts/4_validation/validate_perceptual_task_summary_statistics.R                                                         \nSourcing 30/39: Scripts/4_validation/validate_power_analysis.R                                                                             \nSourcing 31/39: Scripts/4_validation/validate_regression_exp_2.R                                                                           \nSourcing 32/39: Scripts/4_validation/validate_staircase_procedure.R                                                                        \nSourcing 33/39: Scripts/4_validation/z_transform.R                                                                                         \nSourcing 34/39: Scripts/extract_original_summary_data.R                                                                                    \nSourcing 35/39: Utilities/cache_results.R                                                                                                  \nSourcing 36/39: Utilities/get_sem.R                                                                                                        \nSourcing 37/39: Utilities/load_required_packages.R                                                                                         \nSourcing 38/39: Utilities/map.R                                                                                                            \nSourcing 39/39: Utilities/save_plot.R                                                                                                      \n                                                                                                                                           \n                                                                                                                                           \n> load_required_packages()                                                                                                                 \n>                                                                                                                                          \n> # Experiment 1 Data Reproduction -------------------------------------------$                                                            \n> full_perceptual_task_dat_exp_1 <- cache_results(\"get_full_perceptual_task_da$                                                            \n>                                                                                                                                          \n> reproduced_dat_exp_1 <- cache_results(\"reproduce_summary_data_exp_1()\")                                                                  \n> reproduced_dat_exp_1 <- reproduce_factor_analysis_results(reproduced_dat = r$                                                            \n>                                                                                                                                          \n> # Experiment 2 Data Reproduction -------------------------------------------$                                                            \n> original_dat_exp_2 <- cache_results(\"extract_original_summary_data()\")                                                                   \n>                                                                                                                                          \n> full_perceptual_task_dat_exp_2 <- cache_results(\"get_full_perceptual_task_da$                                                            \n>                                                                                                                                          \n> reproduced_dat_exp_2 <- cache_results(\"reproduce_summary_data_exp_2()\")                                                                  \n> reproduced_dat_exp_2 <- reproduce_factor_analysis_results(reproduced_dat = r$                                                            \n>                                                                                                                                          \n> # Labeling the Factors -----------------------------------------------------$                                                            \n>                                                                                                                                          \n> # The authors gave labels to the three factors in Experiment 2                                                                           \n> factor_indices <- ncol(reproduced_dat_exp_2)-(2:0)                                                                                       \n> names(reproduced_dat_exp_2)[factor_indices] <- c(\"AD\", \"Compul\", \"SW\")                                                                   \n>                                                                                                                                          \n> # According to a factor loading comparion, the factors in Experiment 1 are                                                               \n> # ordered differently                                                                                                                    \n> factor_indices <- ncol(reproduced_dat_exp_1)-(2:0)                                                                                       \n> names(reproduced_dat_exp_1)[factor_indices] <- c(\"AD\", \"SW\", \"Compul\")                                                                   \n>   cor.test(reproduced_dat_exp_1$zung     , reproduced_dat_exp_1$accuracy) # $                                                            \n                                                                                                                                           \n        Pearson's product-moment correlation                                                                                               \n                                                                                                                                           \ndata:  reproduced_dat_exp_1$zung and reproduced_dat_exp_1$accuracy                                                                         \nt = 0.015926, df = 496, p-value = 0.9873                                                                                                   \nalternative hypothesis: true correlation is not equal to 0                                                                                 \n95 percent confidence interval:                                                                                                            \n -0.08715702  0.08857619                                                                                                                   \nsample estimates:                                                                                                                          \n         cor                                                                                                                               \n0.0007151079                                                                                                                               \n                                                                                                                                           \n>   get_regression_coefficients(reproduced_dat_exp_1)                                                                                      \n  regressor        regressand  coefficient         se                                                                                      \n1      z_AD        z_accuracy -0.023153229 0.04296786                                                                                      \n2  z_Compul        z_accuracy -0.025304432 0.04207361                                                                                      \n3      z_SW        z_accuracy -0.001629189 0.04260051                                                                                      \n4      z_AD z_mean_confidence -0.079046407 0.04569795                                                                                      \n5  z_Compul z_mean_confidence -0.120393260 0.04455701                                                                                      \n6      z_SW z_mean_confidence -0.158507491 0.04486685                                                                                      \n7      z_AD         z_m_ratio -0.070291812 0.04582879                                                                                      \n8  z_Compul         z_m_ratio -0.023558727 0.04497269                                                                                      \n9      z_SW         z_m_ratio -0.042320920 0.04549201                                                                                      \n>   get_regression_coefficients(reproduced_dat_exp_2)                                                                                      \n  regressor        regressand  coefficient         se                                                        \n1      z_AD        z_accuracy  0.012875026 0.04529889                                                        \n2  z_Compul        z_accuracy  0.021123985 0.04522310                                                        \n3      z_SW        z_accuracy -0.041352253 0.04595914                                                        \n4      z_AD z_mean_confidence -0.131350393 0.04424286                                                        \n5  z_Compul z_mean_confidence  0.150352490 0.04405046                                                        \n6      z_SW z_mean_confidence -0.063174121 0.04523196                                                        \n7      z_AD         z_m_ratio  0.006735064 0.04540852                                                        \n8  z_Compul         z_m_ratio  0.025338939 0.04532549                                                        \n9      z_SW         z_m_ratio  0.009209614 0.04610363                                                        \n>   reference_loadings <- reproduce_factor_analysis_results(reproduced_dat = r$                              \n+                                                           should_return_load$                              \n>   validate_factor_analysis_overfit(reproduced_dat = reproduced_dat_exp_1,                                  \n+                                    reference_loadings)                                                     \n  regressor        regressand  coefficient        sem                                                        \n1      z_AD        z_accuracy -0.046453495 0.05444533                                                        \n2  z_Compul        z_accuracy -0.008011294 0.04791013                                                        \n3      z_SW        z_accuracy  0.008369607 0.05370189                                                        \n4      z_AD         z_m_ratio -0.020284764 0.04514174                                                        \n5  z_Compul         z_m_ratio -0.079682180 0.04848211                                                        \n6      z_SW         z_m_ratio -0.026506879 0.06422777                                                        \n7      z_AD z_mean_confidence -0.140999508 0.05461454                                                        \n8  z_Compul z_mean_confidence -0.100167582 0.05613494                                                        \n9      z_SW z_mean_confidence -0.158197784 0.05221114                                                        \n>   validate_factor_analysis_overfit(reproduced_dat = reproduced_dat_exp_2,                                  \n+                                    reference_loadings)                                                     \n  regressor        regressand  coefficient        sem                                                        \n1      z_AD        z_accuracy  0.004893728 0.04258948                                                        \n2  z_Compul        z_accuracy  0.021437963 0.04948108                                                        \n3      z_SW        z_accuracy -0.030380230 0.05016479                                                        \n4      z_AD         z_m_ratio  0.018388069 0.06279727                                                        \n5  z_Compul         z_m_ratio  0.029095001 0.05701571                                                        \n6      z_SW         z_m_ratio  0.001724595 0.06180182                                                        \n7      z_AD z_mean_confidence -0.104286470 0.04808863                                                        \n8  z_Compul z_mean_confidence  0.107081697 0.04520352                                                        \n9      z_SW z_mean_confidence -0.068048791 0.04508280                                                        \n>   get_regression_coefficients(reproduced_dat_exp_1)                                                        \n  regressor        regressand  coefficient         se                                                        \n1      z_AD        z_accuracy -0.023153229 0.04296786                                                        \n2  z_Compul        z_accuracy -0.025304432 0.04207361                                                        \n3      z_SW        z_accuracy -0.001629189 0.04260051                                                        \n4      z_AD z_mean_confidence -0.079046407 0.04569795                                                        \n5  z_Compul z_mean_confidence -0.120393260 0.04455701                                                        \n6      z_SW z_mean_confidence -0.158507491 0.04486685                                                        \n7      z_AD         z_m_ratio -0.070291812 0.04582879                                                        \n8  z_Compul         z_m_ratio -0.023558727 0.04497269                                                        \n9      z_SW         z_m_ratio -0.042320920 0.04549201                                                        \n> ",
			"settings":
			{
				"buffer_size": 233676,
				"line_ending": "Windows",
				"name": "Rterm",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R-Box/support/R Markdown.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				]
			],
			[
				"Packages/R-Box/support/R Markdown.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R/R.sublime-build",
					""
				],
				[
					"Packages/R-Box/support/R Markdown.sublime-build",
					""
				],
				[
					"Packages/SendCode/build_systems/R - Source File.sublime-build",
					""
				]
			],
			[
				"Packages/R-Box/support/R Markdown.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"build with:",
				"Build With: LaTeX - PdfLaTeX"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 396.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/2_reproduce_summary_data_exp_1",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Utilities"
	],
	"file_history":
	[
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_loading_similarity_exp_1_vs_2.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/2_reproduce_summary_data_exp_1/reproduce_factor_analysis_results.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_factor_analysis_overfit.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_regression_exp_2.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_original_vs_reproduced_data_exp_2.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_exclusions.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_power_analysis.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_mturk_sample.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_DDM_fit.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_m_ratio.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_model_comparison.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_staircase_procedure.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_difficulty_results.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/2_reproduce_summary_data_exp_1/validate_difficulty_results.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/get_regression_coefficients.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/3_reproduce_summary_data_exp_2/get_full_questionnaire_dat_exp_2.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/2_reproduce_summary_data_exp_1/get_factor_analysis_dat.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/4_validation/validate_regression.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/2_reproduce_summary_data_exp_1/get_perceptual_task_summary_information.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/3_reproduce_summary_data_exp_2/reproduce_summary_data_exp_2.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/2_reproduce_summary_data_exp_1/combine_reproduced_dat.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/2_reproduce_summary_data_exp_1/reproduce_summary_data_exp_1.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/2_reproduce_summary_data_exp_1/get_full_questionnaire_dat_exp_1.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Utilities/load_required_packages.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Utilities/get_sem.R",
		"/C/Users/saschameyen/Desktop/Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen/Scripts/reproduce_summary_data_exp_1/reproduce_factor_analysis_results.R",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/Months 2025.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/Months 2024.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/Calendar 2025.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/Calendar 2024.txt",
		"/?wsl$/Ubuntu/home/saschameyen/git_first_key.pub",
		"/?wsl$/Ubuntu/home/saschameyen/.ssh/config",
		"/?wsl$/Ubuntu/home/saschameyen/.ssh/known_hosts",
		"/C/Users/saschameyen/AppData/Roaming/Sublime Text 3/Packages/User/rondon_automatically_search_current_date_in_timeplaner.py",
		"/C/Users/saschameyen/OneDrive/1 Resources/Timeplaner/Months 2024.txt",
		"/C/Users/saschameyen/OneDrive/1 Resources/Timeplaner/Calendar 2024.txt",
		"/C/Users/saschameyen/OneDrive/1 Resources/Timeplaner/Quests.txt",
		"/C/Users/saschameyen/OneDrive/1 Resources/Timeplaner/Months.txt",
		"/C/Users/saschameyen/OneDrive/1 Resources/Timeplaner/Kalender.txt",
		"/C/Users/saschameyen/OneDrive/1 Resources/Lebenslauf/Leben.txt",
		"/Z/userdata/sascha-meyen/2023_01_12_confdist_4/expSettings.m",
		"/C/Users/saschameyen/Desktop/overfit_ensembles.R",
		"/C/Users/saschameyen/OneDrive/1 Resources/Timeplaner/Create Timeplaners/Scripts/timeplaner_year.R",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/Months.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/Quests.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/Kalender.txt",
		"/C/Users/saschameyen/AppData/Local/Temp/RtmpwRtLHP/file25d479075e93",
		"/C/Users/saschameyen/OneDrive/1 Resources/Keywallet Life/kwl.lnk",
		"/C/Users/saschameyen/OneDrive/1 Resources/Timeplaner/1 Resources/Functionality/Timeplaner/Quests.txt",
		"/C/Users/saschameyen/OneDrive/1 Resources/Timeplaner/1 Resources/Functionality/Timeplaner/Kalender.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Functionality/Timeplaner/Kalender.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Functionality/Timeplaner/Months.txt",
		"/C/Users/saschameyen/AppData/Local/Temp/Rtmpu6Wwpo/file2a602d2a5f",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Functionality/Timeplaner/March.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Functionality/Timeplaner/Week.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Functionality/Timeplaner/April.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Functionality/Timeplaner/Quests.txt",
		"/C/Users/saschameyen/AppData/Local/Temp/RtmpOy2hQq/filea4f842692072",
		"/C/Users/saschameyen/AppData/Local/Temp/Rtmp0Aef2F/file97686663f48",
		"/C/Users/saschameyen/AppData/Local/Temp/RtmpGm3Yrb/file81c4162a186c",
		"/C/Users/saschameyen/AppData/Local/Temp/RtmpshPiAT/file2a68444a604e",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Functionality/Timeplaner/Create Timeplaners/Old calenders/0 Kalender 2021.txt",
		"/C/Users/saschameyen/Desktop/ec-wiki.html",
		"/C/Users/saschameyen/AppData/Local/Temp/RtmpuMZynP/file2a441d21134e",
		"/C/Users/saschameyen/AppData/Local/Temp/RtmpYhC8y4/file39341b4db8b",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/Week.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/February.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/March.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/CGS/3 Inhalte (Github)/2_CGS2/00_Orga_und_Schätztheorie/Uebersicht_CgS_2_SoSe23.Rmd",
		"/C/Users/saschameyen/Desktop/OneDrive/1 Resources/Timeplaner/January.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/timeplaner.sublime-workspace",
		"/C/Users/saschameyen/Desktop/OneDrive/Timeplaner/Kalender.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/Timeplaner/Week.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/Timeplaner/March.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/Timeplaner/Quests.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/OneDrive/Timeplaner/Kalender.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/Timeplaner/February.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/timeplaner_project.sublime-workspace",
		"/C/Users/saschameyen/Desktop/OneDrive/timeplaner_project.sublime-project",
		"/C/Users/saschameyen/Desktop/OneDrive/Diary.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/Week.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/Quests.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/March.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/Kalender.txt",
		"/C/Users/saschameyen/AppData/Roaming/Sublime Text/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/show_CC_ITA_results.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/1_analyze_learned_displays.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/5_evaluate_results/evaluate_learned_display_results.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/4_show_problem_of_regression_to_the_mean.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Output/problems_with_display_selection.txt",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/7_solve_problem_of_regression_to_the_mean.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/3_show_problems_with_display_selection.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/2_selected_learned_displays_RT_criterion.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/load_all_scripts_in_project.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Output/Individual_tables.txt",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/9_helper_functions/load_ITA_in_CC_scripts.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/5_generate_visualizations/1_visualize_ITA_main_figure.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/load_ITA_in_CC_scripts.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/1_reanalyze_reported_results/1_reanalyze_reported_results.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/3_get_all_reanalysis_results/2_evaluate_all_reanalyses.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/bad_code_review_example.R",
		"/C/Users/saschameyen/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/1_individual_ita_analysis/1_reanalyze_individual_ITAs.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/bad_code_review_example.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/show_CC_ITA_results.R",
		"/C/Users/saschameyen/Desktop/OneDrive/February.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/6_analyze_first_occurance_RT_of_learned_RT.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/4_show_problem_of_regression_to_the_mean.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/1_analyze_learned_displays.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/load_ITA_in_CC_scripts.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/show_CC_ITA_results.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/1_reanalyze_reported_results/compare_sensitivities/compare_using_BF.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/2_selected_learned_displays_RT_criterion.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/3_show_problems_with_display_selection.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/5_show_affinity_for_displays.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/9_analyze_ITA_per_participant_x_display.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/4_analyze_first_occurance_RT_of_learned_RT.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/2_reanalyze_full_data/1_reanalyze_full_data.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/3_analyze_learned_displays.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/bad_code_review_example.txt",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/3_analyze_ITA_per_participant_x_display.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/3_evaluate_ITA_in_learned_displays.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/4_evaluate_ITA_in_learned_displays.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/3_analyze_ITA_per_display/3_analyze_ITA_per_participant_and_display.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/5_generate_visualizations/3_visualize_variance_ratio.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/5_generate_visualizations/7_create_a_latex_tables_for_each_study.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/6_additional_analyses/2_demonstrate_BF_fallacy/1_demonstrate_BF_fallacy.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/4_variance_ratio_q2/2_get_variance_ratio_results.R",
		"/C/Users/saschameyen/Desktop/OneDrive/2 PostDoc/Contextual Cueing and ITA/CC_ITA_Analysis_Scripts/Scripts/3_get_all_reanalysis_results/1_get_all_reanalysis_results.R"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 206.666666667,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"thdrawl",
			"withdrawl",
			"\\\\..",
			"loadings",
			"regrassand",
			"independent",
			"test_dat",
			"z_transform(test_dat$mean_confidence)",
			"apath",
			"rep_dat",
			"communication",
			"pedro",
			"b12",
			"empg",
			"prepare post",
			"09-05",
			"fulvio",
			"08-02",
			"err",
			"hochzeit",
			"rest",
			"                                                                                                                                 ",
			"05-20",
			"taylor swift",
			"05-17",
			"error",
			"05-11",
			"print",
			"05-14",
			"Joaquim",
			"sophie",
			"ecvp abstract",
			"04-11",
			"cgs",
			"Labmeeting",
			"03-26",
			"03-23",
			"ff",
			"flo",
			"florian friedr",
			"lin lin",
			"filevi",
			"04-05",
			"ecvp",
			"gelber",
			"01-08",
			"lin lin",
			"01.12",
			"29.11",
			"27.11",
			"kolleg",
			"beren",
			"philip",
			"https://zoom.us/j/9676797574?pwd=VXhFUnFvdFpyM3ByUERMOVlDNkhGZz09",
			"cathleen",
			"lin lin",
			"carina schrenk",
			"klausur",
			"27.09",
			"21.07",
			"17.07",
			"carina",
			"klausur",
			"quaderno",
			"Hauptklau",
			"hauptklausur",
			"frieder",
			"carina",
			"deadline",
			"pbr",
			"dissertationspreis",
			"practice",
			"02.05",
			"jugendweihe",
			"madeleine",
			"kogwiskolloq",
			"mstat",
			"volker",
			"elisa file",
			"paypal",
			"otto",
			"height",
			"size"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"thdrawal",
			""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "C:\\Users\\saschameyen\\Desktop\\Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "reanalyse_rouault_et_al.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5397,
						"regions":
						{
						},
						"selection":
						[
							[
								5277,
								5277
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"windowsFonts\t{grDevices}",
									"windowsFonts"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"msgWindow\t{grDevices}",
									"msgWindow"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"bringToTop\t{grDevices}",
									"bringToTop"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"windows.options\t{grDevices}",
									"windows.options"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"win.print\t{grDevices}",
									"win.print"
								],
								[
									"windows\t{grDevices}",
									"windows"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"win.graph\t{grDevices}",
									"win.graph"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"windowsFont\t{grDevices}",
									"windowsFont"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"win.metafile\t{grDevices}",
									"win.metafile"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"sort_by.data.frame\t{base}",
									"sort_by.data.frame"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"range.POSIXct\t{base}",
									"range.POSIXct"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"declare\t{base}",
									"declare"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"range.Date\t{base}",
									"range.Date"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									".fixupGFortranStderr\t{base}",
									".fixupGFortranStderr"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									"Exec\t{base}",
									"Exec"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									".internalGenerics\t{base}",
									".internalGenerics"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									".fixupGFortranStdout\t{base}",
									".fixupGFortranStdout"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"shell\t{base}",
									"shell"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"use\t{base}",
									"use"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sort_by.default\t{base}",
									"sort_by.default"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"Tailcall\t{base}",
									"Tailcall"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"sort_by\t{base}",
									"sort_by"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"Sys.junction\t{base}",
									"Sys.junction"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"mtfrm.POSIXct\t{base}",
									"mtfrm.POSIXct"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"mtfrm.POSIXlt\t{base}",
									"mtfrm.POSIXlt"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									".rangeNum\t{base}",
									".rangeNum"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"shell.exec\t{base}",
									"shell.exec"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"zip.unpack\t{utils}",
									"zip.unpack"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"readClipboard\t{utils}",
									"readClipboard"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"choose.files\t{utils}",
									"choose.files"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"winMenuNames\t{utils}",
									"winMenuNames"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadRconsole\t{utils}",
									"loadRconsole"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"winMenuAddItem\t{utils}",
									"winMenuAddItem"
								],
								[
									"choose.dir\t{utils}",
									"choose.dir"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"setStatusBar\t{utils}",
									"setStatusBar"
								],
								[
									"readRegistry\t{utils}",
									"readRegistry"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"winMenuAdd\t{utils}",
									"winMenuAdd"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"arrangeWindows\t{utils}",
									"arrangeWindows"
								],
								[
									"Filters\t{utils}",
									"Filters"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"setWinProgressBar\t{utils}",
									"setWinProgressBar"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"getWindowsHandle\t{utils}",
									"getWindowsHandle"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"getClipboardFormats\t{utils}",
									"getClipboardFormats"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"setWindowTitle\t{utils}",
									"setWindowTitle"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"DLL.version\t{utils}",
									"DLL.version"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"setInternet2\t{utils}",
									"setInternet2"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"getIdentification\t{utils}",
									"getIdentification"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"getWindowsHandles\t{utils}",
									"getWindowsHandles"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"winMenuItems\t{utils}",
									"winMenuItems"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"writeClipboard\t{utils}",
									"writeClipboard"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"winMenuDel\t{utils}",
									"winMenuDel"
								],
								[
									"winDialogString\t{utils}",
									"winDialogString"
								],
								[
									"getWindowTitle\t{utils}",
									"getWindowTitle"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"getWinProgressBar\t{utils}",
									"getWinProgressBar"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"winProgressBar\t{utils}",
									"winProgressBar"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"winMenuDelItem\t{utils}",
									"winMenuDelItem"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"win.version\t{utils}",
									"win.version"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"winDialog\t{utils}",
									"winDialog"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"shortPathName\t{utils}",
									"shortPathName"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"admisc\tInstalled Package",
									"admisc"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"BayesFactor\tInstalled Package",
									"BayesFactor"
								],
								[
									"bayesplot\tInstalled Package",
									"bayesplot"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"bridgesampling\tInstalled Package",
									"bridgesampling"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"brms\tInstalled Package",
									"brms"
								],
								[
									"Brobdingnag\tInstalled Package",
									"Brobdingnag"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"coda\tInstalled Package",
									"coda"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"contfrac\tInstalled Package",
									"contfrac"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"distributional\tInstalled Package",
									"distributional"
								],
								[
									"doBy\tInstalled Package",
									"doBy"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"elliptic\tInstalled Package",
									"elliptic"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"evd\tInstalled Package",
									"evd"
								],
								[
									"exams\tInstalled Package",
									"exams"
								],
								[
									"expm\tInstalled Package",
									"expm"
								],
								[
									"ez\tInstalled Package",
									"ez"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"getPass\tInstalled Package",
									"getPass"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggridges\tInstalled Package",
									"ggridges"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gm\tInstalled Package",
									"gm"
								],
								[
									"gmgm\tInstalled Package",
									"gmgm"
								],
								[
									"GPArotation\tInstalled Package",
									"GPArotation"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gsl\tInstalled Package",
									"gsl"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"httr2\tInstalled Package",
									"httr2"
								],
								[
									"hypergeo\tInstalled Package",
									"hypergeo"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"loo\tInstalled Package",
									"loo"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"magick\tInstalled Package",
									"magick"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mnormt\tInstalled Package",
									"mnormt"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"msm\tInstalled Package",
									"msm"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nFactors\tInstalled Package",
									"nFactors"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"paran\tInstalled Package",
									"paran"
								],
								[
									"pbapply\tInstalled Package",
									"pbapply"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pdftools\tInstalled Package",
									"pdftools"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"polycor\tInstalled Package",
									"polycor"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"posterior\tInstalled Package",
									"posterior"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"psych\tInstalled Package",
									"psych"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pwr\tInstalled Package",
									"pwr"
								],
								[
									"qpdf\tInstalled Package",
									"qpdf"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"QuickJSR\tInstalled Package",
									"QuickJSR"
								],
								[
									"R.matlab\tInstalled Package",
									"R.matlab"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape\tInstalled Package",
									"reshape"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rstan\tInstalled Package",
									"rstan"
								],
								[
									"rstantools\tInstalled Package",
									"rstantools"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rtdists\tInstalled Package",
									"rtdists"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"StanHeaders\tInstalled Package",
									"StanHeaders"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tensorA\tInstalled Package",
									"tensorA"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"translations\tInstalled Package",
									"translations"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"stats",
								"base",
								"utils",
								"methods",
								"graphics"
							],
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1125.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Scripts/4_validation/validate_regression_exp_2.R",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4719,
						"regions":
						{
						},
						"selection":
						[
							[
								797,
								797
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"windowsFonts\t{grDevices}",
									"windowsFonts"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"msgWindow\t{grDevices}",
									"msgWindow"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"bringToTop\t{grDevices}",
									"bringToTop"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"windows.options\t{grDevices}",
									"windows.options"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"win.print\t{grDevices}",
									"win.print"
								],
								[
									"windows\t{grDevices}",
									"windows"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"win.graph\t{grDevices}",
									"win.graph"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"windowsFont\t{grDevices}",
									"windowsFont"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"win.metafile\t{grDevices}",
									"win.metafile"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"sort_by.data.frame\t{base}",
									"sort_by.data.frame"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"range.POSIXct\t{base}",
									"range.POSIXct"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"declare\t{base}",
									"declare"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"range.Date\t{base}",
									"range.Date"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									".fixupGFortranStderr\t{base}",
									".fixupGFortranStderr"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									"Exec\t{base}",
									"Exec"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									".internalGenerics\t{base}",
									".internalGenerics"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									".fixupGFortranStdout\t{base}",
									".fixupGFortranStdout"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"shell\t{base}",
									"shell"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"use\t{base}",
									"use"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sort_by.default\t{base}",
									"sort_by.default"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"Tailcall\t{base}",
									"Tailcall"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"sort_by\t{base}",
									"sort_by"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"Sys.junction\t{base}",
									"Sys.junction"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"mtfrm.POSIXct\t{base}",
									"mtfrm.POSIXct"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"mtfrm.POSIXlt\t{base}",
									"mtfrm.POSIXlt"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									".rangeNum\t{base}",
									".rangeNum"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"shell.exec\t{base}",
									"shell.exec"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"zip.unpack\t{utils}",
									"zip.unpack"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"readClipboard\t{utils}",
									"readClipboard"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"choose.files\t{utils}",
									"choose.files"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"winMenuNames\t{utils}",
									"winMenuNames"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadRconsole\t{utils}",
									"loadRconsole"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"winMenuAddItem\t{utils}",
									"winMenuAddItem"
								],
								[
									"choose.dir\t{utils}",
									"choose.dir"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"setStatusBar\t{utils}",
									"setStatusBar"
								],
								[
									"readRegistry\t{utils}",
									"readRegistry"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"winMenuAdd\t{utils}",
									"winMenuAdd"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"arrangeWindows\t{utils}",
									"arrangeWindows"
								],
								[
									"Filters\t{utils}",
									"Filters"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"setWinProgressBar\t{utils}",
									"setWinProgressBar"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"getWindowsHandle\t{utils}",
									"getWindowsHandle"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"getClipboardFormats\t{utils}",
									"getClipboardFormats"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"setWindowTitle\t{utils}",
									"setWindowTitle"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"DLL.version\t{utils}",
									"DLL.version"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"setInternet2\t{utils}",
									"setInternet2"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"getIdentification\t{utils}",
									"getIdentification"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"getWindowsHandles\t{utils}",
									"getWindowsHandles"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"winMenuItems\t{utils}",
									"winMenuItems"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"writeClipboard\t{utils}",
									"writeClipboard"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"winMenuDel\t{utils}",
									"winMenuDel"
								],
								[
									"winDialogString\t{utils}",
									"winDialogString"
								],
								[
									"getWindowTitle\t{utils}",
									"getWindowTitle"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"getWinProgressBar\t{utils}",
									"getWinProgressBar"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"winProgressBar\t{utils}",
									"winProgressBar"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"winMenuDelItem\t{utils}",
									"winMenuDelItem"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"win.version\t{utils}",
									"win.version"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"winDialog\t{utils}",
									"winDialog"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"shortPathName\t{utils}",
									"shortPathName"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"admisc\tInstalled Package",
									"admisc"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"BayesFactor\tInstalled Package",
									"BayesFactor"
								],
								[
									"bayesplot\tInstalled Package",
									"bayesplot"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"bridgesampling\tInstalled Package",
									"bridgesampling"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"brms\tInstalled Package",
									"brms"
								],
								[
									"Brobdingnag\tInstalled Package",
									"Brobdingnag"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"coda\tInstalled Package",
									"coda"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"contfrac\tInstalled Package",
									"contfrac"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"distributional\tInstalled Package",
									"distributional"
								],
								[
									"doBy\tInstalled Package",
									"doBy"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"elliptic\tInstalled Package",
									"elliptic"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"evd\tInstalled Package",
									"evd"
								],
								[
									"exams\tInstalled Package",
									"exams"
								],
								[
									"expm\tInstalled Package",
									"expm"
								],
								[
									"ez\tInstalled Package",
									"ez"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"getPass\tInstalled Package",
									"getPass"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggridges\tInstalled Package",
									"ggridges"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gm\tInstalled Package",
									"gm"
								],
								[
									"gmgm\tInstalled Package",
									"gmgm"
								],
								[
									"GPArotation\tInstalled Package",
									"GPArotation"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gsl\tInstalled Package",
									"gsl"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"httr2\tInstalled Package",
									"httr2"
								],
								[
									"hypergeo\tInstalled Package",
									"hypergeo"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"loo\tInstalled Package",
									"loo"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"magick\tInstalled Package",
									"magick"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mnormt\tInstalled Package",
									"mnormt"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"msm\tInstalled Package",
									"msm"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nFactors\tInstalled Package",
									"nFactors"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"paran\tInstalled Package",
									"paran"
								],
								[
									"pbapply\tInstalled Package",
									"pbapply"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pdftools\tInstalled Package",
									"pdftools"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"polycor\tInstalled Package",
									"polycor"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"posterior\tInstalled Package",
									"posterior"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"psych\tInstalled Package",
									"psych"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pwr\tInstalled Package",
									"pwr"
								],
								[
									"qpdf\tInstalled Package",
									"qpdf"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"QuickJSR\tInstalled Package",
									"QuickJSR"
								],
								[
									"R.matlab\tInstalled Package",
									"R.matlab"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape\tInstalled Package",
									"reshape"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rstan\tInstalled Package",
									"rstan"
								],
								[
									"rstantools\tInstalled Package",
									"rstantools"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rtdists\tInstalled Package",
									"rtdists"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"StanHeaders\tInstalled Package",
									"StanHeaders"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tensorA\tInstalled Package",
									"tensorA"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"translations\tInstalled Package",
									"translations"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"stats",
								"base",
								"utils",
								"methods",
								"graphics"
							],
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Scripts/4_validation/validate_factor_analysis.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4958,
						"regions":
						{
						},
						"selection":
						[
							[
								51,
								51
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"windowsFonts\t{grDevices}",
									"windowsFonts"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"msgWindow\t{grDevices}",
									"msgWindow"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"bringToTop\t{grDevices}",
									"bringToTop"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"windows.options\t{grDevices}",
									"windows.options"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"win.print\t{grDevices}",
									"win.print"
								],
								[
									"windows\t{grDevices}",
									"windows"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"win.graph\t{grDevices}",
									"win.graph"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"windowsFont\t{grDevices}",
									"windowsFont"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"win.metafile\t{grDevices}",
									"win.metafile"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"sort_by.data.frame\t{base}",
									"sort_by.data.frame"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"range.POSIXct\t{base}",
									"range.POSIXct"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"declare\t{base}",
									"declare"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"range.Date\t{base}",
									"range.Date"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									".fixupGFortranStderr\t{base}",
									".fixupGFortranStderr"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									"Exec\t{base}",
									"Exec"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									".internalGenerics\t{base}",
									".internalGenerics"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									".fixupGFortranStdout\t{base}",
									".fixupGFortranStdout"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"shell\t{base}",
									"shell"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"use\t{base}",
									"use"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sort_by.default\t{base}",
									"sort_by.default"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"Tailcall\t{base}",
									"Tailcall"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"sort_by\t{base}",
									"sort_by"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"Sys.junction\t{base}",
									"Sys.junction"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"mtfrm.POSIXct\t{base}",
									"mtfrm.POSIXct"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"mtfrm.POSIXlt\t{base}",
									"mtfrm.POSIXlt"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									".rangeNum\t{base}",
									".rangeNum"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"shell.exec\t{base}",
									"shell.exec"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"zip.unpack\t{utils}",
									"zip.unpack"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"readClipboard\t{utils}",
									"readClipboard"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"choose.files\t{utils}",
									"choose.files"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"winMenuNames\t{utils}",
									"winMenuNames"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadRconsole\t{utils}",
									"loadRconsole"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"winMenuAddItem\t{utils}",
									"winMenuAddItem"
								],
								[
									"choose.dir\t{utils}",
									"choose.dir"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"setStatusBar\t{utils}",
									"setStatusBar"
								],
								[
									"readRegistry\t{utils}",
									"readRegistry"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"winMenuAdd\t{utils}",
									"winMenuAdd"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"arrangeWindows\t{utils}",
									"arrangeWindows"
								],
								[
									"Filters\t{utils}",
									"Filters"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"setWinProgressBar\t{utils}",
									"setWinProgressBar"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"getWindowsHandle\t{utils}",
									"getWindowsHandle"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"getClipboardFormats\t{utils}",
									"getClipboardFormats"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"setWindowTitle\t{utils}",
									"setWindowTitle"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"DLL.version\t{utils}",
									"DLL.version"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"setInternet2\t{utils}",
									"setInternet2"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"getIdentification\t{utils}",
									"getIdentification"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"getWindowsHandles\t{utils}",
									"getWindowsHandles"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"winMenuItems\t{utils}",
									"winMenuItems"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"writeClipboard\t{utils}",
									"writeClipboard"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"winMenuDel\t{utils}",
									"winMenuDel"
								],
								[
									"winDialogString\t{utils}",
									"winDialogString"
								],
								[
									"getWindowTitle\t{utils}",
									"getWindowTitle"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"getWinProgressBar\t{utils}",
									"getWinProgressBar"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"winProgressBar\t{utils}",
									"winProgressBar"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"winMenuDelItem\t{utils}",
									"winMenuDelItem"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"win.version\t{utils}",
									"win.version"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"winDialog\t{utils}",
									"winDialog"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"shortPathName\t{utils}",
									"shortPathName"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"admisc\tInstalled Package",
									"admisc"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"BayesFactor\tInstalled Package",
									"BayesFactor"
								],
								[
									"bayesplot\tInstalled Package",
									"bayesplot"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"bridgesampling\tInstalled Package",
									"bridgesampling"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"brms\tInstalled Package",
									"brms"
								],
								[
									"Brobdingnag\tInstalled Package",
									"Brobdingnag"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"coda\tInstalled Package",
									"coda"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"contfrac\tInstalled Package",
									"contfrac"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"distributional\tInstalled Package",
									"distributional"
								],
								[
									"doBy\tInstalled Package",
									"doBy"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"elliptic\tInstalled Package",
									"elliptic"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"evd\tInstalled Package",
									"evd"
								],
								[
									"exams\tInstalled Package",
									"exams"
								],
								[
									"expm\tInstalled Package",
									"expm"
								],
								[
									"ez\tInstalled Package",
									"ez"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"getPass\tInstalled Package",
									"getPass"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggridges\tInstalled Package",
									"ggridges"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gm\tInstalled Package",
									"gm"
								],
								[
									"gmgm\tInstalled Package",
									"gmgm"
								],
								[
									"GPArotation\tInstalled Package",
									"GPArotation"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gsl\tInstalled Package",
									"gsl"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"httr2\tInstalled Package",
									"httr2"
								],
								[
									"hypergeo\tInstalled Package",
									"hypergeo"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"loo\tInstalled Package",
									"loo"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"magick\tInstalled Package",
									"magick"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mnormt\tInstalled Package",
									"mnormt"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"msm\tInstalled Package",
									"msm"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nFactors\tInstalled Package",
									"nFactors"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"paran\tInstalled Package",
									"paran"
								],
								[
									"pbapply\tInstalled Package",
									"pbapply"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pdftools\tInstalled Package",
									"pdftools"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"polycor\tInstalled Package",
									"polycor"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"posterior\tInstalled Package",
									"posterior"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"psych\tInstalled Package",
									"psych"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pwr\tInstalled Package",
									"pwr"
								],
								[
									"qpdf\tInstalled Package",
									"qpdf"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"QuickJSR\tInstalled Package",
									"QuickJSR"
								],
								[
									"R.matlab\tInstalled Package",
									"R.matlab"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape\tInstalled Package",
									"reshape"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rstan\tInstalled Package",
									"rstan"
								],
								[
									"rstantools\tInstalled Package",
									"rstantools"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rtdists\tInstalled Package",
									"rtdists"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"StanHeaders\tInstalled Package",
									"StanHeaders"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tensorA\tInstalled Package",
									"tensorA"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"translations\tInstalled Package",
									"translations"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"stats",
								"base",
								"utils",
								"methods",
								"graphics"
							],
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Utilities/map.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 598,
						"regions":
						{
						},
						"selection":
						[
							[
								577,
								576
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"windowsFonts\t{grDevices}",
									"windowsFonts"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"msgWindow\t{grDevices}",
									"msgWindow"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"bringToTop\t{grDevices}",
									"bringToTop"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"windows.options\t{grDevices}",
									"windows.options"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"win.print\t{grDevices}",
									"win.print"
								],
								[
									"windows\t{grDevices}",
									"windows"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"win.graph\t{grDevices}",
									"win.graph"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"windowsFont\t{grDevices}",
									"windowsFont"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"win.metafile\t{grDevices}",
									"win.metafile"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"sort_by.data.frame\t{base}",
									"sort_by.data.frame"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"range.POSIXct\t{base}",
									"range.POSIXct"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"declare\t{base}",
									"declare"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"range.Date\t{base}",
									"range.Date"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									".fixupGFortranStderr\t{base}",
									".fixupGFortranStderr"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									"Exec\t{base}",
									"Exec"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									".internalGenerics\t{base}",
									".internalGenerics"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									".fixupGFortranStdout\t{base}",
									".fixupGFortranStdout"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"shell\t{base}",
									"shell"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"use\t{base}",
									"use"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sort_by.default\t{base}",
									"sort_by.default"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"Tailcall\t{base}",
									"Tailcall"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"sort_by\t{base}",
									"sort_by"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"Sys.junction\t{base}",
									"Sys.junction"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"mtfrm.POSIXct\t{base}",
									"mtfrm.POSIXct"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"mtfrm.POSIXlt\t{base}",
									"mtfrm.POSIXlt"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									".rangeNum\t{base}",
									".rangeNum"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"shell.exec\t{base}",
									"shell.exec"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"zip.unpack\t{utils}",
									"zip.unpack"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"readClipboard\t{utils}",
									"readClipboard"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"choose.files\t{utils}",
									"choose.files"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"winMenuNames\t{utils}",
									"winMenuNames"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadRconsole\t{utils}",
									"loadRconsole"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"winMenuAddItem\t{utils}",
									"winMenuAddItem"
								],
								[
									"choose.dir\t{utils}",
									"choose.dir"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"setStatusBar\t{utils}",
									"setStatusBar"
								],
								[
									"readRegistry\t{utils}",
									"readRegistry"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"winMenuAdd\t{utils}",
									"winMenuAdd"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"arrangeWindows\t{utils}",
									"arrangeWindows"
								],
								[
									"Filters\t{utils}",
									"Filters"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"setWinProgressBar\t{utils}",
									"setWinProgressBar"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"getWindowsHandle\t{utils}",
									"getWindowsHandle"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"getClipboardFormats\t{utils}",
									"getClipboardFormats"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"setWindowTitle\t{utils}",
									"setWindowTitle"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"DLL.version\t{utils}",
									"DLL.version"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"setInternet2\t{utils}",
									"setInternet2"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"getIdentification\t{utils}",
									"getIdentification"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"getWindowsHandles\t{utils}",
									"getWindowsHandles"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"winMenuItems\t{utils}",
									"winMenuItems"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"writeClipboard\t{utils}",
									"writeClipboard"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"winMenuDel\t{utils}",
									"winMenuDel"
								],
								[
									"winDialogString\t{utils}",
									"winDialogString"
								],
								[
									"getWindowTitle\t{utils}",
									"getWindowTitle"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"getWinProgressBar\t{utils}",
									"getWinProgressBar"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"winProgressBar\t{utils}",
									"winProgressBar"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"winMenuDelItem\t{utils}",
									"winMenuDelItem"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"win.version\t{utils}",
									"win.version"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"winDialog\t{utils}",
									"winDialog"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"shortPathName\t{utils}",
									"shortPathName"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"admisc\tInstalled Package",
									"admisc"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"BayesFactor\tInstalled Package",
									"BayesFactor"
								],
								[
									"bayesplot\tInstalled Package",
									"bayesplot"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"bridgesampling\tInstalled Package",
									"bridgesampling"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"brms\tInstalled Package",
									"brms"
								],
								[
									"Brobdingnag\tInstalled Package",
									"Brobdingnag"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"coda\tInstalled Package",
									"coda"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"contfrac\tInstalled Package",
									"contfrac"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"distributional\tInstalled Package",
									"distributional"
								],
								[
									"doBy\tInstalled Package",
									"doBy"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"elliptic\tInstalled Package",
									"elliptic"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"evd\tInstalled Package",
									"evd"
								],
								[
									"exams\tInstalled Package",
									"exams"
								],
								[
									"expm\tInstalled Package",
									"expm"
								],
								[
									"ez\tInstalled Package",
									"ez"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"getPass\tInstalled Package",
									"getPass"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggridges\tInstalled Package",
									"ggridges"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gm\tInstalled Package",
									"gm"
								],
								[
									"gmgm\tInstalled Package",
									"gmgm"
								],
								[
									"GPArotation\tInstalled Package",
									"GPArotation"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gsl\tInstalled Package",
									"gsl"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"httr2\tInstalled Package",
									"httr2"
								],
								[
									"hypergeo\tInstalled Package",
									"hypergeo"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"loo\tInstalled Package",
									"loo"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"magick\tInstalled Package",
									"magick"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mnormt\tInstalled Package",
									"mnormt"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"msm\tInstalled Package",
									"msm"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nFactors\tInstalled Package",
									"nFactors"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"paran\tInstalled Package",
									"paran"
								],
								[
									"pbapply\tInstalled Package",
									"pbapply"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pdftools\tInstalled Package",
									"pdftools"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"polycor\tInstalled Package",
									"polycor"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"posterior\tInstalled Package",
									"posterior"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"psych\tInstalled Package",
									"psych"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pwr\tInstalled Package",
									"pwr"
								],
								[
									"qpdf\tInstalled Package",
									"qpdf"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"QuickJSR\tInstalled Package",
									"QuickJSR"
								],
								[
									"R.matlab\tInstalled Package",
									"R.matlab"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape\tInstalled Package",
									"reshape"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rstan\tInstalled Package",
									"rstan"
								],
								[
									"rstantools\tInstalled Package",
									"rstantools"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rtdists\tInstalled Package",
									"rtdists"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"StanHeaders\tInstalled Package",
									"StanHeaders"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tensorA\tInstalled Package",
									"tensorA"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"translations\tInstalled Package",
									"translations"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"stats",
								"base",
								"utils",
								"methods",
								"graphics"
							],
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 4,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 233676,
						"regions":
						{
						},
						"selection":
						[
							[
								233154,
								233164
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_scheme": "Terminus.hidden-color-scheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"is_widget": true,
							"result_base_dir": "C:\\Users\\saschameyen\\Desktop\\Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"cmd.exe"
								],
								"cwd": "C:\\Users\\saschameyen\\Desktop\\Error_Reviews_Rouault_et_al_2018_by_Sascha_Meyen",
								"default_title": "Command Prompt",
								"env":
								{
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": "Terminus",
								"reactivable": true,
								"show_in_panel": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.reactivable": true,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 41780.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 41780.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 72.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.7,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.diff_views":
	{
		"height": 644.0
	},
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.latextools":
	{
		"height": 224.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 443.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
